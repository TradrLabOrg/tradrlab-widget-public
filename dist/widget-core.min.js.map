{"version":3,"file":"widget-core.min.js","mappings":"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","sources":["webpack://TradrLabWidget/webpack/universalModuleDefinition","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://TradrLabWidget/./node_modules/css-loader/dist/runtime/api.js","webpack://TradrLabWidget/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://TradrLabWidget/./src/styles/widget-base.css","webpack://TradrLabWidget/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://TradrLabWidget/webpack/bootstrap","webpack://TradrLabWidget/webpack/runtime/compat get default export","webpack://TradrLabWidget/webpack/runtime/define property getters","webpack://TradrLabWidget/webpack/runtime/global","webpack://TradrLabWidget/webpack/runtime/hasOwnProperty shorthand","webpack://TradrLabWidget/webpack/runtime/nonce","webpack://TradrLabWidget/./src/services/enhanced-message-store.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/Errors.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/ILogger.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/Loggers.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/Utils.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/pkg-version.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/ITransport.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/AbortController.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/Subject.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","webpack://TradrLabWidget/./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","webpack://TradrLabWidget/./src/services/enhanced-signalr-client.js","webpack://TradrLabWidget/./src/core/widget-config.js","webpack://TradrLabWidget/./src/services/api-client.js","webpack://TradrLabWidget/./src/services/thinking-manager.js","webpack://TradrLabWidget/./src/services/widget-ai-flow-parser.js","webpack://TradrLabWidget/./src/services/dag-processor.js","webpack://TradrLabWidget/./src/services/action-manager.js","webpack://TradrLabWidget/./src/components/chat-container.js","webpack://TradrLabWidget/./src/components/landing-page.js","webpack://TradrLabWidget/./src/components/template-modal.js","webpack://TradrLabWidget/./src/components/wizard-modal.js","webpack://TradrLabWidget/./src/components/message-renderers.js","webpack://TradrLabWidget/./src/components/milestone-tracker.js","webpack://TradrLabWidget/./src/components/enhanced-chat-widget.js","webpack://TradrLabWidget/./src/core/widget-factory.js","webpack://TradrLabWidget/./src/core/config-manager.js","webpack://TradrLabWidget/./src/styles/widget-base.css?08b9","webpack://TradrLabWidget/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TradrLabWidget\"] = factory();\n\telse\n\t\troot[\"TradrLabWidget\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/**\n * TradrLab Widget Base Styles\n * All styles are scoped with .tradr-widget prefix\n */\n\n/* Widget Container */\n.tradr-widget {\n  --tradr-primary-color: #1976d2;\n  --tradr-background-color: #ffffff;\n  --tradr-text-color: #333333;\n  --tradr-border-color: #e0e0e0;\n  --tradr-message-user-bg: #1976d2;\n  --tradr-message-assistant-bg: #f5f5f5;\n  --tradr-error-color: #f44336;\n  --tradr-font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  \n  font-family: var(--tradr-font-family);\n  color: var(--tradr-text-color);\n  background: var(--tradr-background-color);\n  border: 1px solid var(--tradr-border-color);\n  border-radius: 8px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n\n.tradr-widget * {\n  box-sizing: border-box;\n}\n\n/* Widget Container Layout */\n.tradr-widget-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n}\n\n/* Header */\n.tradr-widget-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  border-bottom: 1px solid var(--tradr-border-color);\n  background: var(--tradr-background-color);\n}\n\n.tradr-widget-header h3 {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: var(--tradr-text-color);\n}\n\n.tradr-widget-controls {\n  display: flex;\n  gap: 8px;\n}\n\n.tradr-font-size-btn {\n  padding: 4px 8px;\n  border: 1px solid var(--tradr-border-color);\n  background: var(--tradr-background-color);\n  color: var(--tradr-text-color);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  transition: background-color 0.2s;\n}\n\n.tradr-font-size-btn:hover {\n  background: var(--tradr-border-color);\n}\n\n/* Messages Container */\n.tradr-widget-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  background: var(--tradr-background-color);\n}\n\n/* Message Styles */\n.tradr-message {\n  margin-bottom: 16px;\n  display: flex;\n  animation: fadeIn 0.3s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.tradr-message-user {\n  justify-content: flex-end;\n}\n\n.tradr-widget .tradr-message-ai,\n.tradr-widget .tradr-message-assistant,\n.tradr-widget .tradr-message-system {\n  justify-content: flex-start;\n  /* DEBUG: Force visibility */\n  border: 2px solid blue !important;\n  min-height: 30px !important;\n  display: flex !important;\n}\n\n/* Fallback without widget scope */\n.tradr-message-ai,\n.tradr-message-assistant,\n.tradr-message-system {\n  justify-content: flex-start;\n  border: 2px solid blue !important;\n  min-height: 30px !important;\n  display: flex !important;\n}\n\n.tradr-message-bubble {\n  max-width: 70%;\n  padding: 10px 14px;\n  border-radius: 16px;\n  word-wrap: break-word;\n  line-height: 1.4;\n}\n\n.tradr-message-user .tradr-message-bubble {\n  background: var(--tradr-message-user-bg);\n  color: white;\n  border-bottom-right-radius: 4px;\n}\n\n.tradr-widget .tradr-message-ai .tradr-message-bubble,\n.tradr-widget .tradr-message-assistant .tradr-message-bubble,\n.tradr-widget .tradr-message-system .tradr-message-bubble {\n  background: var(--tradr-message-assistant-bg);\n  color: var(--tradr-text-color);\n  border-bottom-left-radius: 4px;\n  /* DEBUG: Force visibility */\n  border: 2px solid red !important;\n  min-height: 20px !important;\n  display: block !important;\n}\n\n/* Fallback without widget scope */\n.tradr-message-ai .tradr-message-bubble,\n.tradr-message-assistant .tradr-message-bubble,\n.tradr-message-system .tradr-message-bubble {\n  background: var(--tradr-message-assistant-bg);\n  color: var(--tradr-text-color);\n  border-bottom-left-radius: 4px;\n  /* DEBUG: Force visibility */\n  border: 2px solid red !important;\n  min-height: 20px !important;\n  display: block !important;\n}\n\n.tradr-message-error .tradr-message-bubble {\n  background: #ffebee;\n  color: var(--tradr-error-color);\n  border: 1px solid var(--tradr-error-color);\n}\n\n/* Loading Animation */\n.tradr-loading-dots {\n  display: flex;\n  gap: 4px;\n}\n\n.tradr-loading-dots span {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: var(--tradr-primary-color);\n  animation: bounce 1.4s infinite ease-in-out;\n}\n\n.tradr-loading-dots span:nth-child(1) {\n  animation-delay: -0.32s;\n}\n\n.tradr-loading-dots span:nth-child(2) {\n  animation-delay: -0.16s;\n}\n\n@keyframes bounce {\n  0%, 80%, 100% {\n    transform: scale(0.8);\n    opacity: 0.5;\n  }\n  40% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n/* Input Container */\n.tradr-widget-input {\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n  padding: 12px 16px;\n  border-top: 1px solid var(--tradr-border-color);\n  background: var(--tradr-background-color);\n}\n\n.tradr-widget-input-field {\n  flex: 1;\n  min-height: 36px;\n  max-height: 120px;\n  padding: 8px 12px;\n  border: 1px solid var(--tradr-border-color);\n  border-radius: 20px;\n  font-family: var(--tradr-font-family);\n  font-size: 14px;\n  resize: none;\n  outline: none;\n  transition: border-color 0.2s;\n}\n\n.tradr-widget-input-field:focus {\n  border-color: var(--tradr-primary-color);\n}\n\n.tradr-send-btn,\n.tradr-attach-btn {\n  width: 36px;\n  height: 36px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  border-radius: 50%;\n  background: var(--tradr-primary-color);\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  position: relative;\n}\n\n.tradr-send-btn:hover,\n.tradr-attach-btn:hover {\n  background: color-mix(in srgb, var(--tradr-primary-color) 85%, black);\n}\n\n.tradr-send-btn:disabled,\n.tradr-attach-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Image in messages */\n.tradr-message-bubble img {\n  max-width: 100%;\n  border-radius: 8px;\n  margin-top: 8px;\n}\n\n/* Scrollbar Styling */\n.tradr-widget-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.tradr-widget-messages::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.tradr-widget-messages::-webkit-scrollbar-thumb {\n  background: var(--tradr-border-color);\n  border-radius: 3px;\n}\n\n.tradr-widget-messages::-webkit-scrollbar-thumb:hover {\n  background: color-mix(in srgb, var(--tradr-border-color) 70%, black);\n}\n\n/* Dark Theme */\n.tradr-widget-dark {\n  --tradr-background-color: #1e1e1e;\n  --tradr-text-color: #ffffff;\n  --tradr-border-color: #333333;\n  --tradr-message-assistant-bg: #2d2d2d;\n}\n\n/* Responsive */\n@media (max-width: 480px) {\n  .tradr-message-bubble {\n    max-width: 85%;\n  }\n}\n\n/* Accessibility */\n.tradr-widget:focus-visible,\n.tradr-widget button:focus-visible,\n.tradr-widget-input-field:focus-visible {\n  outline: 2px solid var(--tradr-primary-color);\n  outline-offset: 2px;\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  .tradr-message,\n  .tradr-loading-dots span {\n    animation: none;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/widget-base.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/**\\n * TradrLab Widget Base Styles\\n * All styles are scoped with .tradr-widget prefix\\n */\\n\\n/* Widget Container */\\n.tradr-widget {\\n  --tradr-primary-color: #1976d2;\\n  --tradr-background-color: #ffffff;\\n  --tradr-text-color: #333333;\\n  --tradr-border-color: #e0e0e0;\\n  --tradr-message-user-bg: #1976d2;\\n  --tradr-message-assistant-bg: #f5f5f5;\\n  --tradr-error-color: #f44336;\\n  --tradr-font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n  \\n  font-family: var(--tradr-font-family);\\n  color: var(--tradr-text-color);\\n  background: var(--tradr-background-color);\\n  border: 1px solid var(--tradr-border-color);\\n  border-radius: 8px;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  box-sizing: border-box;\\n}\\n\\n.tradr-widget * {\\n  box-sizing: border-box;\\n}\\n\\n/* Widget Container Layout */\\n.tradr-widget-container {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  width: 100%;\\n}\\n\\n/* Header */\\n.tradr-widget-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 12px 16px;\\n  border-bottom: 1px solid var(--tradr-border-color);\\n  background: var(--tradr-background-color);\\n}\\n\\n.tradr-widget-header h3 {\\n  margin: 0;\\n  font-size: 16px;\\n  font-weight: 600;\\n  color: var(--tradr-text-color);\\n}\\n\\n.tradr-widget-controls {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.tradr-font-size-btn {\\n  padding: 4px 8px;\\n  border: 1px solid var(--tradr-border-color);\\n  background: var(--tradr-background-color);\\n  color: var(--tradr-text-color);\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 12px;\\n  transition: background-color 0.2s;\\n}\\n\\n.tradr-font-size-btn:hover {\\n  background: var(--tradr-border-color);\\n}\\n\\n/* Messages Container */\\n.tradr-widget-messages {\\n  flex: 1;\\n  overflow-y: auto;\\n  padding: 16px;\\n  background: var(--tradr-background-color);\\n}\\n\\n/* Message Styles */\\n.tradr-message {\\n  margin-bottom: 16px;\\n  display: flex;\\n  animation: fadeIn 0.3s ease-in;\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(10px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n.tradr-message-user {\\n  justify-content: flex-end;\\n}\\n\\n.tradr-widget .tradr-message-ai,\\n.tradr-widget .tradr-message-assistant,\\n.tradr-widget .tradr-message-system {\\n  justify-content: flex-start;\\n  /* DEBUG: Force visibility */\\n  border: 2px solid blue !important;\\n  min-height: 30px !important;\\n  display: flex !important;\\n}\\n\\n/* Fallback without widget scope */\\n.tradr-message-ai,\\n.tradr-message-assistant,\\n.tradr-message-system {\\n  justify-content: flex-start;\\n  border: 2px solid blue !important;\\n  min-height: 30px !important;\\n  display: flex !important;\\n}\\n\\n.tradr-message-bubble {\\n  max-width: 70%;\\n  padding: 10px 14px;\\n  border-radius: 16px;\\n  word-wrap: break-word;\\n  line-height: 1.4;\\n}\\n\\n.tradr-message-user .tradr-message-bubble {\\n  background: var(--tradr-message-user-bg);\\n  color: white;\\n  border-bottom-right-radius: 4px;\\n}\\n\\n.tradr-widget .tradr-message-ai .tradr-message-bubble,\\n.tradr-widget .tradr-message-assistant .tradr-message-bubble,\\n.tradr-widget .tradr-message-system .tradr-message-bubble {\\n  background: var(--tradr-message-assistant-bg);\\n  color: var(--tradr-text-color);\\n  border-bottom-left-radius: 4px;\\n  /* DEBUG: Force visibility */\\n  border: 2px solid red !important;\\n  min-height: 20px !important;\\n  display: block !important;\\n}\\n\\n/* Fallback without widget scope */\\n.tradr-message-ai .tradr-message-bubble,\\n.tradr-message-assistant .tradr-message-bubble,\\n.tradr-message-system .tradr-message-bubble {\\n  background: var(--tradr-message-assistant-bg);\\n  color: var(--tradr-text-color);\\n  border-bottom-left-radius: 4px;\\n  /* DEBUG: Force visibility */\\n  border: 2px solid red !important;\\n  min-height: 20px !important;\\n  display: block !important;\\n}\\n\\n.tradr-message-error .tradr-message-bubble {\\n  background: #ffebee;\\n  color: var(--tradr-error-color);\\n  border: 1px solid var(--tradr-error-color);\\n}\\n\\n/* Loading Animation */\\n.tradr-loading-dots {\\n  display: flex;\\n  gap: 4px;\\n}\\n\\n.tradr-loading-dots span {\\n  width: 8px;\\n  height: 8px;\\n  border-radius: 50%;\\n  background: var(--tradr-primary-color);\\n  animation: bounce 1.4s infinite ease-in-out;\\n}\\n\\n.tradr-loading-dots span:nth-child(1) {\\n  animation-delay: -0.32s;\\n}\\n\\n.tradr-loading-dots span:nth-child(2) {\\n  animation-delay: -0.16s;\\n}\\n\\n@keyframes bounce {\\n  0%, 80%, 100% {\\n    transform: scale(0.8);\\n    opacity: 0.5;\\n  }\\n  40% {\\n    transform: scale(1);\\n    opacity: 1;\\n  }\\n}\\n\\n/* Input Container */\\n.tradr-widget-input {\\n  display: flex;\\n  align-items: flex-end;\\n  gap: 8px;\\n  padding: 12px 16px;\\n  border-top: 1px solid var(--tradr-border-color);\\n  background: var(--tradr-background-color);\\n}\\n\\n.tradr-widget-input-field {\\n  flex: 1;\\n  min-height: 36px;\\n  max-height: 120px;\\n  padding: 8px 12px;\\n  border: 1px solid var(--tradr-border-color);\\n  border-radius: 20px;\\n  font-family: var(--tradr-font-family);\\n  font-size: 14px;\\n  resize: none;\\n  outline: none;\\n  transition: border-color 0.2s;\\n}\\n\\n.tradr-widget-input-field:focus {\\n  border-color: var(--tradr-primary-color);\\n}\\n\\n.tradr-send-btn,\\n.tradr-attach-btn {\\n  width: 36px;\\n  height: 36px;\\n  padding: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: none;\\n  border-radius: 50%;\\n  background: var(--tradr-primary-color);\\n  color: white;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n  position: relative;\\n}\\n\\n.tradr-send-btn:hover,\\n.tradr-attach-btn:hover {\\n  background: color-mix(in srgb, var(--tradr-primary-color) 85%, black);\\n}\\n\\n.tradr-send-btn:disabled,\\n.tradr-attach-btn:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n/* Image in messages */\\n.tradr-message-bubble img {\\n  max-width: 100%;\\n  border-radius: 8px;\\n  margin-top: 8px;\\n}\\n\\n/* Scrollbar Styling */\\n.tradr-widget-messages::-webkit-scrollbar {\\n  width: 6px;\\n}\\n\\n.tradr-widget-messages::-webkit-scrollbar-track {\\n  background: transparent;\\n}\\n\\n.tradr-widget-messages::-webkit-scrollbar-thumb {\\n  background: var(--tradr-border-color);\\n  border-radius: 3px;\\n}\\n\\n.tradr-widget-messages::-webkit-scrollbar-thumb:hover {\\n  background: color-mix(in srgb, var(--tradr-border-color) 70%, black);\\n}\\n\\n/* Dark Theme */\\n.tradr-widget-dark {\\n  --tradr-background-color: #1e1e1e;\\n  --tradr-text-color: #ffffff;\\n  --tradr-border-color: #333333;\\n  --tradr-message-assistant-bg: #2d2d2d;\\n}\\n\\n/* Responsive */\\n@media (max-width: 480px) {\\n  .tradr-message-bubble {\\n    max-width: 85%;\\n  }\\n}\\n\\n/* Accessibility */\\n.tradr-widget:focus-visible,\\n.tradr-widget button:focus-visible,\\n.tradr-widget-input-field:focus-visible {\\n  outline: 2px solid var(--tradr-primary-color);\\n  outline-offset: 2px;\\n}\\n\\n/* Reduced Motion */\\n@media (prefers-reduced-motion: reduce) {\\n  .tradr-message,\\n  .tradr-loading-dots span {\\n    animation: none;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","/**\r\n * Enhanced Message Store\r\n * Extended state management with session tracking and milestone support\r\n */\r\n\r\n// Use browser crypto API instead of uuid package for direct ES6 module loading\r\nfunction uuidv4() {\r\n  // Use modern crypto.randomUUID if available (most browsers support it now)\r\n  if (crypto && crypto.randomUUID) {\r\n    return crypto.randomUUID();\r\n  }\r\n  \r\n  // Fallback for older browsers\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport class EnhancedMessageStore {\r\n  constructor() {\r\n    this.messages = [];\r\n    this.sessions = new Map(); // Track template sessions\r\n    this.scenarios = new Map(); // Track scenario metadata\r\n    this.currentMilestone = 0;\r\n    this.journeyType = null; // 'interactive' | 'template'\r\n    this.listeners = [];\r\n    this.eventListeners = new Map(); // Event emitter functionality\r\n    this.activeScenarioId = null;\r\n    this.activeSessionId = null;\r\n    this.currentSessionId = null; // Track ongoing conversation session for AI context\r\n  }\r\n  \r\n  // ===== Event Emitter Methods =====\r\n  \r\n  /**\r\n   * Add event listener\r\n   */\r\n  on(event, callback) {\r\n    if (!this.eventListeners.has(event)) {\r\n      this.eventListeners.set(event, []);\r\n    }\r\n    this.eventListeners.get(event).push(callback);\r\n  }\r\n  \r\n  /**\r\n   * Remove event listener\r\n   */\r\n  off(event, callback) {\r\n    if (!this.eventListeners.has(event)) return;\r\n    const listeners = this.eventListeners.get(event);\r\n    const index = listeners.indexOf(callback);\r\n    if (index > -1) {\r\n      listeners.splice(index, 1);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Emit event to all listeners\r\n   */\r\n  emit(event, ...args) {\r\n    if (!this.eventListeners.has(event)) return;\r\n    const listeners = this.eventListeners.get(event);\r\n    listeners.forEach(callback => {\r\n      try {\r\n        callback(...args);\r\n      } catch (error) {\r\n        console.error(`MessageStore: Error in event listener for ${event}:`, error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // ===== Session Management =====\r\n  \r\n  /**\r\n   * Start a new template session\r\n   */\r\n  startSession(sessionId, templateName, metadata = {}) {\r\n    const session = {\r\n      id: sessionId,\r\n      templateName,\r\n      startTime: Date.now(),\r\n      endTime: null,\r\n      status: 'active',\r\n      milestones: {\r\n        template: true,\r\n        model: false,\r\n        evaluation: false,\r\n        analysis: false\r\n      },\r\n      metadata\r\n    };\r\n    \r\n    this.sessions.set(sessionId, session);\r\n    this.activeSessionId = sessionId;\r\n    this.journeyType = 'template';\r\n    \r\n    this.notifyListeners('session:start', session);\r\n    \r\n    return session;\r\n  }\r\n  \r\n  /**\r\n   * End an active session\r\n   */\r\n  endSession(sessionId) {\r\n    const session = this.sessions.get(sessionId);\r\n    \r\n    if (session) {\r\n      session.endTime = Date.now();\r\n      session.status = 'completed';\r\n      \r\n      if (this.activeSessionId === sessionId) {\r\n        this.activeSessionId = null;\r\n      }\r\n      \r\n      this.notifyListeners('session:end', session);\r\n      \r\n      return session;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get session by ID\r\n   */\r\n  getSession(sessionId) {\r\n    return this.sessions.get(sessionId) || null;\r\n  }\r\n  \r\n  /**\r\n   * Get active session\r\n   */\r\n  getActiveSession() {\r\n    return this.activeSessionId ? this.sessions.get(this.activeSessionId) : null;\r\n  }\r\n  \r\n  // ===== Milestone Tracking =====\r\n  \r\n  /**\r\n   * Update current milestone\r\n   */\r\n  updateMilestone(milestone) {\r\n    const milestoneMap = {\r\n      'explore': 0,\r\n      'template': 1,\r\n      'model': 2,\r\n      'evaluate': 3,\r\n      'analyze': 4,\r\n      'backtest': 5\r\n    };\r\n    \r\n    const milestoneValue = typeof milestone === 'string' \r\n      ? milestoneMap[milestone.toLowerCase()] \r\n      : milestone;\r\n    \r\n    this.currentMilestone = milestoneValue;\r\n    \r\n    // Update session milestones if in template journey\r\n    if (this.activeSessionId) {\r\n      const session = this.sessions.get(this.activeSessionId);\r\n      if (session) {\r\n        switch(milestoneValue) {\r\n          case 1:\r\n            session.milestones.template = true;\r\n            break;\r\n          case 2:\r\n            session.milestones.model = true;\r\n            break;\r\n          case 3:\r\n            session.milestones.evaluation = true;\r\n            break;\r\n          case 4:\r\n            session.milestones.analysis = true;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.notifyListeners('milestone:update', {\r\n      milestone: milestoneValue,\r\n      journeyType: this.journeyType\r\n    });\r\n    \r\n    // Emit event for new event system\r\n    this.emit('milestone:update', {\r\n      milestone: milestoneValue,\r\n      journeyType: this.journeyType\r\n    });\r\n    \r\n    return milestoneValue;\r\n  }\r\n  \r\n  /**\r\n   * Get current milestone status\r\n   */\r\n  getMilestoneStatus() {\r\n    return {\r\n      current: this.currentMilestone,\r\n      journeyType: this.journeyType,\r\n      session: this.getActiveSession()\r\n    };\r\n  }\r\n  \r\n  // ===== Message Intelligence =====\r\n  \r\n  /**\r\n   * Analyze message for required actions and UI state changes\r\n   * This is the BRAIN of the widget - determines what buttons to show, when to trigger actions\r\n   */\r\n  analyzeMessageForActions(message) {\r\n    const actions = {\r\n      showGenerateButton: false,\r\n      showRedrawButton: false,\r\n      triggerEvaluation: false,\r\n      startSession: false,\r\n      endSession: false,\r\n      updateMilestone: null,\r\n      showApplyFix: false,\r\n      enableAnalysis: false\r\n    };\r\n    \r\n    if (!message || !message.messageType) {\r\n      return actions;\r\n    }\r\n    \r\n    switch(message.messageType) {\r\n      case 'Steps':\r\n        // Steps with \"Step 1\" → Show Generate button (unless already has DAG)\r\n        if (message.message && message.message.includes('Step 1')) {\r\n          actions.showGenerateButton = !message.userDagRequestId;\r\n          actions.showRedrawButton = !!message.userDagRequestId;\r\n          actions.updateMilestone = 'model'; // Ready to build model\r\n          \r\n          // Set journey type to interactive\r\n          if (!this.journeyType) {\r\n            this.journeyType = 'interactive';\r\n          }\r\n        }\r\n        break;\r\n        \r\n      case 'Scenario':\r\n        // Scenario message → Generate or Redraw based on DAG existence\r\n        actions.showGenerateButton = !message.userDagRequestId;\r\n        actions.showRedrawButton = !!message.userDagRequestId;\r\n        actions.updateMilestone = 'model'; // Ready to build model\r\n        \r\n        // Set journey type to interactive\r\n        if (!this.journeyType) {\r\n          this.journeyType = 'interactive';\r\n        }\r\n        break;\r\n        \r\n      case 'Template':\r\n        // Template message → Start automated session\r\n        actions.startSession = true;\r\n        actions.updateMilestone = 'template';\r\n        this.journeyType = 'template';\r\n        break;\r\n        \r\n      case 'Model':\r\n        // Model message → Auto-trigger evaluation\r\n        actions.triggerEvaluation = true;\r\n        actions.updateMilestone = 'evaluate';\r\n        \r\n        // End session if from template journey\r\n        if (message.originalEndpoint === '/chat' && this.journeyType === 'template') {\r\n          actions.endSession = true;\r\n        }\r\n        break;\r\n        \r\n      case 'Analysis':\r\n        // Analysis message → Enable further analysis options\r\n        actions.enableAnalysis = true;\r\n        actions.updateMilestone = 'analyze';\r\n        break;\r\n        \r\n      case 'Explanation':\r\n        // Explanation with fixes → Show Apply Fix button\r\n        if (message.fixedDag || message.fixedScenario) {\r\n          actions.showApplyFix = true;\r\n        }\r\n        break;\r\n        \r\n      case 'Text':\r\n      default:\r\n        // Regular text messages don't trigger special actions\r\n        // But they do indicate conversation has started\r\n        if (!this.journeyType) {\r\n          this.journeyType = 'interactive';\r\n        }\r\n        break;\r\n    }\r\n    \r\n    return actions;\r\n  }\r\n  \r\n  /**\r\n   * Find the most recent message that affects button visibility\r\n   */\r\n  getLastRelevantMessage() {\r\n    return this.messages.findLast(msg => \r\n      msg.messageType === 'Steps' || \r\n      msg.messageType === 'Scenario' ||\r\n      msg.messageType === 'Template'\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Get current available actions based on message history\r\n   */\r\n  getCurrentAvailableActions() {\r\n    const lastRelevantMessage = this.getLastRelevantMessage();\r\n    \r\n    if (!lastRelevantMessage) {\r\n      return {\r\n        showGenerateButton: false,\r\n        showRedrawButton: false,\r\n        showBacktestButton: false,\r\n        enableAnalysis: false\r\n      };\r\n    }\r\n    \r\n    const actions = this.analyzeMessageForActions(lastRelevantMessage);\r\n    \r\n    // Add backtest button if we've completed evaluation\r\n    actions.showBacktestButton = this.currentMilestone >= 3; // After evaluate\r\n    \r\n    return actions;\r\n  }\r\n  \r\n  /**\r\n   * Check if conversation is ready for scenario generation\r\n   */\r\n  isReadyForGeneration() {\r\n    const actions = this.getCurrentAvailableActions();\r\n    return actions.showGenerateButton;\r\n  }\r\n  \r\n  // ===== DAG Metadata Storage =====\r\n  \r\n  /**\r\n   * Store DAG metadata without visualization (we don't need ReactFlow)\r\n   */\r\n  storeDagMetadata(dagMetadata) {\r\n    const { scenarioId, dagRequestId } = dagMetadata;\r\n    \r\n    // Store in scenario\r\n    if (scenarioId) {\r\n      const scenario = this.scenarios.get(scenarioId) || {};\r\n      scenario.dagMetadata = dagMetadata;\r\n      scenario.status = 'model_generated';\r\n      this.scenarios.set(scenarioId, scenario);\r\n    }\r\n    \r\n    // Create system message about DAG creation\r\n    const dagSummaryMessage = {\r\n      id: uuidv4(),\r\n      type: 'system',\r\n      messageType: 'DAGGenerated',\r\n      content: this.formatDagSummary(dagMetadata),\r\n      timestamp: Date.now(),\r\n      scenarioId,\r\n      dagRequestId,\r\n      metadata: dagMetadata\r\n    };\r\n    \r\n    this.addMessage(dagSummaryMessage);\r\n    \r\n    this.notifyListeners('dag:generated', dagMetadata);\r\n    \r\n    // Emit event for new event system\r\n    this.emit('dag:generated', dagMetadata);\r\n    \r\n    return dagMetadata;\r\n  }\r\n  \r\n  /**\r\n   * Format DAG metadata into user-friendly summary\r\n   */\r\n  formatDagSummary(dagMetadata) {\r\n    const { nodeCount, indicators = [], conditions = [], triggers = [] } = dagMetadata;\r\n    \r\n    let summary = `✅ **Model Created Successfully!**\\n\\n`;\r\n    summary += `📊 **${nodeCount} components** generated\\n\\n`;\r\n    \r\n    if (indicators.length > 0) {\r\n      summary += `**Indicators:**\\n${indicators.map(i => `• ${i}`).join('\\n')}\\n\\n`;\r\n    }\r\n    \r\n    if (conditions.length > 0) {\r\n      summary += `**Conditions:**\\n${conditions.map(c => `• ${c}`).join('\\n')}\\n\\n`;\r\n    }\r\n    \r\n    if (triggers.length > 0) {\r\n      summary += `**Triggers:**\\n${triggers.map(t => `• ${t}`).join('\\n')}\\n\\n`;\r\n    }\r\n    \r\n    summary += `⏳ **Starting evaluation...**`;\r\n    \r\n    return summary;\r\n  }\r\n  \r\n  // ===== Scenario Management =====\r\n  \r\n  /**\r\n   * Add or update scenario metadata\r\n   */\r\n  addScenario(scenarioId, metadata) {\r\n    // Just store the scenario ID and any metadata we actually need\r\n    // Backend MongoDB is the source of truth\r\n    const scenario = {\r\n      id: scenarioId,\r\n      ...metadata\r\n    };\r\n    \r\n    this.scenarios.set(scenarioId, scenario);\r\n    this.activeScenarioId = scenarioId;\r\n    \r\n    this.notifyListeners('scenario:update', scenario);\r\n    \r\n    return scenario;\r\n  }\r\n  \r\n  /**\r\n   * Update scenario status\r\n   */\r\n  updateScenarioStatus(scenarioId, status) {\r\n    const scenario = this.scenarios.get(scenarioId);\r\n    \r\n    if (scenario) {\r\n      scenario.status = status;\r\n      scenario.updatedAt = Date.now();\r\n      \r\n      this.notifyListeners('scenario:status', {\r\n        scenarioId,\r\n        status\r\n      });\r\n      \r\n      return scenario;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get scenario by ID\r\n   */\r\n  getScenario(scenarioId) {\r\n    return this.scenarios.get(scenarioId) || null;\r\n  }\r\n  \r\n  // ===== Enhanced Message Management =====\r\n  \r\n  /**\r\n   * Add a message with enhanced metadata\r\n   */\r\n  addMessage(message) {\r\n    // Validate required fields - no fallbacks\r\n    if (!message.id) {\r\n      throw new Error('EnhancedMessageStore: Message ID is required');\r\n    }\r\n    \r\n    const fullMessage = {\r\n      id: message.id,\r\n      timestamp: message.timestamp || new Date().toISOString(),\r\n      scenarioId: message.scenarioId, // Don't fallback - should be explicit\r\n      sessionId: message.sessionId, // Don't fallback - should be explicit\r\n      journeyType: this.journeyType,\r\n      milestone: this.currentMilestone,\r\n      ...message\r\n    };\r\n    \r\n    // Update current session ID from AI responses (for conversation continuity)\r\n    if (message.isAiResponse && message.sessionId) {\r\n      this.updateSessionId(message.sessionId);\r\n    }\r\n    \r\n    this.messages.push(fullMessage);\r\n    \r\n    // Auto-detect milestone transitions\r\n    this.detectMilestoneTransition(fullMessage);\r\n    \r\n    this.notifyListeners('message:add', fullMessage);\r\n    \r\n    // Emit event for new event system\r\n    this.emit('message:added', fullMessage);\r\n    \r\n    return fullMessage;\r\n  }\r\n  \r\n  /**\r\n   * Detect and handle milestone transitions based on message type\r\n   */\r\n  detectMilestoneTransition(message) {\r\n    switch(message.messageType) {\r\n      case 'Template':\r\n        this.updateMilestone('template');\r\n        if (message.sessionId && !this.sessions.has(message.sessionId)) {\r\n          this.startSession(message.sessionId, message.templateName || 'Unknown Template');\r\n        }\r\n        break;\r\n        \r\n      case 'Model':\r\n      case 'Scenario':  // Also handle Scenario messages as they contain rephrased prompts\r\n        this.updateMilestone('model');\r\n        if (message.originalEndpoint === '/chat' && this.activeSessionId) {\r\n          // Template journey - model marks session end\r\n          setTimeout(() => this.endSession(this.activeSessionId), 100);\r\n        }\r\n        break;\r\n        \r\n      case 'Evaluation':\r\n      case 'EvaluationComplete':\r\n        this.updateMilestone('evaluate');\r\n        break;\r\n        \r\n      case 'Analysis':\r\n        this.updateMilestone('analyze');\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update a message in the store\r\n   */\r\n  updateMessage(messageId, updates) {\r\n    const index = this.messages.findIndex(m => m.id === messageId);\r\n    \r\n    if (index !== -1) {\r\n      this.messages[index] = {\r\n        ...this.messages[index],\r\n        ...updates,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      this.notifyListeners('message:update', this.messages[index]);\r\n      \r\n      return this.messages[index];\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get conversation summary for scenario generation\r\n   */\r\n  getConversationSummary() {\r\n    const recentMessages = this.messages\r\n      .filter(m => m.type === 'user' || (m.type === 'ai' && m.messageType === 'Text'))\r\n      .slice(-10); // Last 10 messages\r\n    \r\n    return recentMessages\r\n      .map(m => `${m.type === 'user' ? 'User' : 'AI'}: ${m.content || m.message}`)\r\n      .join('\\n');\r\n  }\r\n  \r\n  // ===== Journey Management =====\r\n  \r\n  /**\r\n   * Set journey type\r\n   */\r\n  setJourneyType(type) {\r\n    this.journeyType = type;\r\n    this.notifyListeners('journey:change', type);\r\n  }\r\n  \r\n  /**\r\n   * Reset journey state\r\n   */\r\n  resetJourney() {\r\n    this.currentMilestone = 0;\r\n    this.journeyType = null;\r\n    this.activeSessionId = null;\r\n    \r\n    this.notifyListeners('journey:reset', null);\r\n  }\r\n  \r\n  // ===== Base Store Methods (inherited) =====\r\n  \r\n  /**\r\n   * Remove a message from the store\r\n   */\r\n  removeMessage(messageId) {\r\n    const index = this.messages.findIndex(m => m.id === messageId);\r\n    \r\n    if (index !== -1) {\r\n      const removed = this.messages.splice(index, 1)[0];\r\n      this.notifyListeners('message:remove', removed);\r\n      return removed;\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get all messages\r\n   */\r\n  getMessages() {\r\n    return [...this.messages];\r\n  }\r\n  \r\n  /**\r\n   * Get message by ID\r\n   */\r\n  getMessage(messageId) {\r\n    return this.messages.find(m => m.id === messageId) || null;\r\n  }\r\n  \r\n  /**\r\n   * Clear all messages\r\n   */\r\n  clear() {\r\n    this.messages = [];\r\n    this.sessions.clear();\r\n    this.scenarios.clear();\r\n    this.resetJourney();\r\n    \r\n    this.notifyListeners('store:clear', null);\r\n  }\r\n  \r\n  /**\r\n   * Subscribe to store changes\r\n   */\r\n  subscribe(listener) {\r\n    if (typeof listener !== 'function') {\r\n      throw new Error('MessageStore: Listener must be a function');\r\n    }\r\n    \r\n    this.listeners.push(listener);\r\n    \r\n    // Return unsubscribe function\r\n    return () => {\r\n      const index = this.listeners.indexOf(listener);\r\n      if (index !== -1) {\r\n        this.listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Notify all listeners of changes\r\n   */\r\n  notifyListeners(action, data) {\r\n    this.listeners.forEach(listener => {\r\n      try {\r\n        listener({\r\n          action,\r\n          data,\r\n          messages: this.getMessages(),\r\n          milestone: this.currentMilestone,\r\n          journeyType: this.journeyType,\r\n          activeSession: this.getActiveSession()\r\n        });\r\n      } catch (error) {\r\n        console.error('MessageStore: Error in listener', error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Get messages by type\r\n   */\r\n  getMessagesByType(type) {\r\n    return this.messages.filter(m => m.type === type || m.messageType === type);\r\n  }\r\n  \r\n  /**\r\n   * Get last message\r\n   */\r\n  getLastMessage() {\r\n    return this.messages[this.messages.length - 1] || null;\r\n  }\r\n  \r\n  /**\r\n   * Get messages for active scenario\r\n   */\r\n  getScenarioMessages(scenarioId = null) {\r\n    const targetScenarioId = scenarioId || this.activeScenarioId;\r\n    \r\n    if (!targetScenarioId) return [];\r\n    \r\n    return this.messages.filter(m => m.scenarioId === targetScenarioId);\r\n  }\r\n  \r\n  /**\r\n   * Get messages for session\r\n   */\r\n  getSessionMessages(sessionId = null) {\r\n    const targetSessionId = sessionId || this.activeSessionId;\r\n    \r\n    if (!targetSessionId) return [];\r\n    \r\n    return this.messages.filter(m => m.sessionId === targetSessionId);\r\n  }\r\n  \r\n  /**\r\n   * Update current session ID from AI responses\r\n   * This maintains conversation context like the original app\r\n   */\r\n  updateSessionId(sessionId) {\r\n    if (sessionId && sessionId !== this.currentSessionId) {\r\n      console.log('EnhancedMessageStore: Updating session ID:', {\r\n        from: this.currentSessionId,\r\n        to: sessionId\r\n      });\r\n      this.currentSessionId = sessionId;\r\n      this.emit('session:updated', { sessionId: sessionId });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get current session ID for new requests\r\n   */\r\n  getCurrentSessionId() {\r\n    return this.currentSessionId;\r\n  }\r\n  \r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { VERSION } from \"./pkg-version\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport { VERSION };\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","export const VERSION = '9.0.6';\r\n//# sourceMappingURL=pkg-version.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            }\r\n            else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n//# sourceMappingURL=MessageBuffer.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                            this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`);\r\n                        });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    target: methodName,\r\n                    arguments: args,\r\n                    streamIds,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    target: methodName,\r\n                    arguments: args,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    target: methodName,\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    target: methodName,\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                target: methodName,\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                target: methodName,\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","/**\r\n * Enhanced SignalR Client\r\n * Extended to handle all message types for Interactive and Template journeys\r\n * Includes auto-execution after DAG generation (Step 4 of user journey)  \r\n */\r\n\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nexport class EnhancedSignalRClient {\r\n  constructor(configManager, messageStore, apiClient = null, thinkingManager = null) {\r\n    this.config = configManager;\r\n    this.messageStore = messageStore;\r\n    this.apiClient = apiClient;\r\n    this.thinkingManager = thinkingManager;\r\n    this.connection = null;\r\n    this.listeners = new Map();\r\n    this.connected = false;\r\n    this.reconnectAttempts = 0;\r\n    this.maxReconnectAttempts = 5;\r\n    this.socketId = null;\r\n    this.waitingForResponse = false;\r\n  }\r\n  \r\n  /**\r\n   * Connect to SignalR hub\r\n   */\r\n  async connect() {\r\n    console.log('🚀 SignalRClient: Starting connection process...');\r\n    \r\n    if (this.connected) {\r\n      console.warn('SignalRClient: Already connected');\r\n      return;\r\n    }\r\n    \r\n    const hubUrl = this.config.get('signalRUrl');\r\n    console.log('SignalRClient: Hub URL:', hubUrl);\r\n    \r\n    if (!hubUrl) {\r\n      throw new Error('SignalRClient: SignalR URL not configured');\r\n    }\r\n    \r\n    const jwtToken = this.config.get('jwtToken');\r\n    if (!jwtToken) {\r\n      console.warn('SignalRClient: No JWT token available, SignalR connection may fail');\r\n    }\r\n    \r\n    try {\r\n      this.connection = new signalR.HubConnectionBuilder()\r\n        .withUrl(hubUrl, {\r\n          accessTokenFactory: () => jwtToken || this.config.get('apikey')\r\n        })\r\n        .withAutomaticReconnect({\r\n          nextRetryDelayInMilliseconds: (retryContext) => {\r\n            if (retryContext.previousRetryCount >= this.maxReconnectAttempts) {\r\n              return null;\r\n            }\r\n            return Math.min(1000 * Math.pow(2, retryContext.previousRetryCount), 30000);\r\n          }\r\n        })\r\n        .configureLogging(\r\n          this.config.get('debug') \r\n            ? signalR.LogLevel.Debug \r\n            : signalR.LogLevel.Warning\r\n        )\r\n        .build();\r\n      \r\n      this.setupEventHandlers();\r\n      \r\n      await this.connection.start();\r\n      this.connected = true;\r\n      this.reconnectAttempts = 0;\r\n      this.socketId = this.connection.connectionId;\r\n      \r\n      console.log('SignalRClient: Connected successfully with ID:', this.socketId);\r\n      \r\n      await this.registerForMessages();\r\n      \r\n    } catch (error) {\r\n      console.error('SignalRClient: Connection failed', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Setup comprehensive SignalR event handlers\r\n   */\r\n  setupEventHandlers() {\r\n    console.log('SignalRClient: Setting up event handlers...');\r\n    \r\n    // Primary AI response handler - matches backend UnifiedSignalRService\r\n    this.connection.on('AiResponseReceived', (message) => {\r\n      console.log('🎉 SignalRClient: AiResponseReceived received!', {\r\n        messageType: message.messageType,\r\n        originalEndpoint: message.originalEndpoint,\r\n        scenarioId: message.scenarioId,\r\n        sessionId: message.sessionId,\r\n        aiResponseLength: message.aiResponse?.length,\r\n        aiResponsePreview: message.aiResponse?.substring(0, 50) + '...'\r\n      });\r\n      \r\n      // DEBUG: Call test harness callback if it exists\r\n      const onSignalRMessage = this.config.get('onSignalRMessage');\r\n      if (onSignalRMessage) {\r\n        onSignalRMessage(message);\r\n      }\r\n      \r\n      this.handleUnifiedMessage(message);\r\n    });\r\n    \r\n    // Catch-all debug handler\r\n    this.connection.onmessage = (message) => {\r\n      console.log('🐛 SignalRClient: Raw message received:', message);\r\n      \r\n      // DEBUG: Log all SignalR message types we receive\r\n      if (message && message.type === 1 && message.arguments) {\r\n        console.log('🔥 SIGNALR MESSAGE DEBUG:', {\r\n          target: message.target,\r\n          arguments: message.arguments,\r\n          firstArgType: typeof message.arguments[0],\r\n          firstArgKeys: message.arguments[0] ? Object.keys(message.arguments[0]) : 'none'\r\n        });\r\n      }\r\n    };\r\n    \r\n    // DEBUG: Listen for ScenarioQueryMessage specifically\r\n    this.connection.on('ScenarioQueryMessage', (message) => {\r\n      console.log('🔥 DEBUG: ScenarioQueryMessage received (this might be our DAG!):', message);\r\n    });\r\n    \r\n    // Listen for ALL possible events for debugging\r\n    ['AiResponseReceived', 'UnifiedAiMessage', 'ScenarioGenerated', 'ScenarioQueryMessage', 'BackTestExecuted'].forEach(eventName => {\r\n      this.connection.on(eventName, (message) => {\r\n        console.log(`🔔 SignalRClient: ${eventName} event received:`, message);\r\n        \r\n        // ENHANCED LOGGING FOR DAG DEBUGGING\r\n        if (eventName === 'ScenarioGenerated') {\r\n          console.log('🚨🚨🚨 CRITICAL: ScenarioGenerated Event Received! 🚨🚨🚨');\r\n          console.log('Full message structure:', JSON.stringify(message, null, 2));\r\n          console.log('Message properties:', {\r\n            hasAiResponse: !!(message.aiResponse || message.AiResponse),\r\n            aiResponseLength: (message.aiResponse || message.AiResponse)?.length,\r\n            messageType: message.messageType || message.MessageType,\r\n            originalEndpoint: message.originalEndpoint || message.OriginalEndpoint,\r\n            scenarioId: message.scenarioId || message.ScenarioId,\r\n            dagRequestId: message.dagRequestId || message.DagRequestId,\r\n            requestId: message.requestId || message.RequestId,\r\n            sessionId: message.sessionId || message.SessionId,\r\n            statusCode: message.statusCode || message.StatusCode\r\n          });\r\n          \r\n          // Try to parse DAG data if present\r\n          const aiResponse = message.aiResponse || message.AiResponse;\r\n          if (aiResponse) {\r\n            try {\r\n              const dagData = typeof aiResponse === 'string' ? JSON.parse(aiResponse) : aiResponse;\r\n              console.log('📊 DAG Data successfully parsed:', {\r\n                isDagArray: Array.isArray(dagData),\r\n                dagBlockCount: Array.isArray(dagData) ? dagData.length : 'N/A',\r\n                firstBlock: Array.isArray(dagData) && dagData.length > 0 ? dagData[0] : 'No blocks'\r\n              });\r\n            } catch (error) {\r\n              console.error('❌ Failed to parse DAG data:', error);\r\n            }\r\n          }\r\n          \r\n          console.log('⚠️ NOTE: This ScenarioGenerated event is being received but NOT processed!');\r\n          console.log('⚠️ It needs a proper handler to route it to handleUnifiedMessage()');\r\n        }\r\n        \r\n        if (eventName === 'ScenarioQueryMessage') {\r\n          console.log('🚨 ScenarioQueryMessage Event Received!');\r\n          console.log('Full message:', JSON.stringify(message, null, 2));\r\n        }\r\n      });\r\n    });\r\n    \r\n    // Legacy handlers for backward compatibility\r\n    this.connection.on('UnifiedAiMessage', (message) => {\r\n      console.log('SignalRClient: UnifiedAiMessage (legacy)', message);\r\n      this.handleUnifiedMessage(message);\r\n    });\r\n    \r\n    // CRITICAL: Handle ScenarioGenerated event for DAG messages from /query endpoint\r\n    this.connection.on('ScenarioGenerated', (message) => {\r\n      console.log('🎯 SignalRClient: ScenarioGenerated received (DAG from /query endpoint)', {\r\n        messageType: message.messageType || message.MessageType,\r\n        originalEndpoint: message.originalEndpoint || message.OriginalEndpoint,\r\n        scenarioId: message.scenarioId || message.ScenarioId,\r\n        hasAiResponse: !!(message.aiResponse || message.AiResponse),\r\n        dagRequestId: message.dagRequestId || message.DagRequestId\r\n      });\r\n      \r\n      // Transform to unified format and handle\r\n      const unifiedMessage = {\r\n        messageType: message.messageType || message.MessageType || 'Model',\r\n        originalEndpoint: message.originalEndpoint || message.OriginalEndpoint || '/query',\r\n        scenarioId: message.scenarioId || message.ScenarioId,\r\n        sessionId: message.sessionId || message.SessionId,\r\n        aiResponse: message.aiResponse || message.AiResponse,\r\n        dagRequestId: message.dagRequestId || message.DagRequestId,\r\n        relatedUserMessageId: message.relatedUserMessageId || message.RelatedUserMessageId,\r\n        requestId: message.requestId || message.RequestId,\r\n        statusCode: message.statusCode || message.StatusCode || 200\r\n      };\r\n      \r\n      console.log('🎯 SignalRClient: Processing ScenarioGenerated as unified message', unifiedMessage);\r\n      this.handleUnifiedMessage(unifiedMessage);\r\n    });\r\n    \r\n    // Scenario DAG messages\r\n    this.connection.on('ScenarioQueryMessage', (message) => {\r\n      console.log('SignalRClient: ScenarioQueryMessage received', message);\r\n      this.handleScenarioQueryMessage(message);\r\n    });\r\n    \r\n    // Scenario updates\r\n    this.connection.on('ScenarioUpdated', (scenario) => {\r\n      this.emit('scenarioUpdated', scenario);\r\n    });\r\n    \r\n    // Error handling\r\n    this.connection.on('Error', (error) => {\r\n      this.emit('error', error);\r\n    });\r\n    \r\n    // Connection lifecycle\r\n    this.connection.onreconnecting((error) => {\r\n      this.connected = false;\r\n      this.reconnectAttempts++;\r\n      console.warn('SignalRClient: Reconnecting...', error);\r\n      this.emit('reconnecting', { attempt: this.reconnectAttempts, error });\r\n    });\r\n    \r\n    this.connection.onreconnected((connectionId) => {\r\n      this.connected = true;\r\n      this.reconnectAttempts = 0;\r\n      this.socketId = connectionId;\r\n      console.log('SignalRClient: Reconnected', connectionId);\r\n      this.emit('reconnected', connectionId);\r\n      \r\n      this.registerForMessages().catch(console.error);\r\n    });\r\n    \r\n    this.connection.onclose((error) => {\r\n      this.connected = false;\r\n      console.log('SignalRClient: Connection closed', error);\r\n      this.emit('disconnected', error);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle unified message routing based on message type\r\n   */\r\n  handleUnifiedMessage(message) {\r\n    const { messageType, originalEndpoint, sessionId, scenarioId } = message;\r\n    \r\n    console.log('🔍 SignalRClient: Processing message with messageType analysis:', {\r\n      messageType,\r\n      messageTypeType: typeof messageType,\r\n      originalEndpoint,\r\n      hasStepContent: message.aiResponse?.includes('Step 1'),\r\n      aiResponsePreview: message.aiResponse?.substring(0, 100) + '...',\r\n      aiResponseType: typeof message.aiResponse,\r\n      fullMessage: JSON.stringify(message, null, 2)\r\n    });\r\n    \r\n    // Stop thinking indicators based on endpoint\r\n    if (this.thinkingManager) {\r\n      const activeIndicators = Array.from(this.thinkingManager.activeIndicators.keys());\r\n      console.log('🎯 SignalR: Active indicators before stopping:', activeIndicators);\r\n      \r\n      if (originalEndpoint === '/chat') {\r\n        console.log('🎯 SignalR: Stopping chat thinking indicators for response from /chat endpoint');\r\n        activeIndicators.forEach(id => {\r\n          if (id.startsWith('chat-') || id.startsWith('template-')) {\r\n            console.log('🎯 SignalR: Stopping thinking indicator:', id);\r\n            this.thinkingManager.stopThinking(id);\r\n          }\r\n        });\r\n      } else if (originalEndpoint === '/query') {\r\n        console.log('🎯 SignalR: Stopping query thinking indicators for response from /query endpoint');\r\n        activeIndicators.forEach(id => {\r\n          if (id.startsWith('query-')) {\r\n            console.log('🎯 SignalR: Stopping thinking indicator:', id);\r\n            this.thinkingManager.stopThinking(id);\r\n          }\r\n        });\r\n      }\r\n      \r\n      const remainingIndicators = Array.from(this.thinkingManager.activeIndicators.keys());\r\n      console.log('🎯 SignalR: Remaining active indicators:', remainingIndicators);\r\n    }\r\n    \r\n    // CRITICAL: Store SessionId from AI responses for conversation continuity\r\n    // This matches main app behavior where SessionId comes from AI service\r\n    if (sessionId) {\r\n      console.log('SignalRClient: Storing SessionId from AI response:', sessionId);\r\n      this.config.set('sessionId', sessionId);\r\n      // Also update the message store's current session\r\n      if (this.messageStore) {\r\n        this.messageStore.currentSessionId = sessionId;\r\n      }\r\n    }\r\n    \r\n    // Track session lifecycle for Template journey\r\n    if (originalEndpoint === '/chat') {\r\n      if (messageType === 'Template') {\r\n        // Template message starts a session\r\n        this.messageStore.startSession(sessionId, message.templateName || 'Template');\r\n      } else if (messageType === 'Model' && sessionId) {\r\n        // Model message ends the template session\r\n        this.messageStore.endSession(sessionId);\r\n      }\r\n    }\r\n    \r\n    // Route message based on type\r\n    switch(messageType) {\r\n      case 'Text':\r\n      case 'Steps':\r\n        this.handleChatMessage(message);\r\n        break;\r\n        \r\n      case 'Template':\r\n        this.handleTemplateMessage(message);\r\n        break;\r\n        \r\n      case 'Model':\r\n        this.handleModelMessage(message);\r\n        break;\r\n        \r\n      case 'Analysis':\r\n        this.handleAnalysisMessage(message);\r\n        break;\r\n        \r\n      case 'Scenario':\r\n      case 'Explanation':\r\n        this.handleSpecialMessage(message);\r\n        break;\r\n        \r\n      case 'Evaluation':\r\n      case 'EvaluationComplete':\r\n        this.handleEvaluationMessage(message);\r\n        break;\r\n        \r\n      default:\r\n        console.warn('SignalRClient: Unknown message type', messageType);\r\n        this.handleChatMessage(message); // Fallback to chat\r\n    }\r\n    \r\n    // Clear waiting state\r\n    if (this.waitingForResponse) {\r\n      this.waitingForResponse = false;\r\n      this.emit('responseReceived', message);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle chat messages (Text, Steps)\r\n   */\r\n  handleChatMessage(message) {\r\n    console.log('🎯 SignalR: Handling chat message', {\r\n      messageType: message.messageType,\r\n      hasThinkingManager: !!this.thinkingManager\r\n    });\r\n    \r\n    // Note: Thinking indicators are stopped at the top level in handleUnifiedMessage\r\n    \r\n    const chatMessage = {\r\n      id: message.aiMessageId || message.id,\r\n      content: message.aiResponse || message.message,\r\n      messageType: message.messageType,\r\n      type: 'ai',\r\n      isAiResponse: true,\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      timestamp: new Date().toISOString(),\r\n      originalEndpoint: message.originalEndpoint,\r\n      parentMessageId: message.relatedUserMessageId\r\n    };\r\n    \r\n    this.messageStore.addMessage(chatMessage);\r\n    this.emit('chatMessage', chatMessage);\r\n  }\r\n  \r\n  /**\r\n   * Handle template messages\r\n   */\r\n  handleTemplateMessage(message) {\r\n    const templateMessage = {\r\n      id: message.aiMessageId || message.id,\r\n      content: message.aiResponse || message.templateContent,\r\n      messageType: 'Template',\r\n      type: 'ai',\r\n      isAiResponse: true,\r\n      templateName: message.templateName,\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      timestamp: new Date().toISOString(),\r\n      originalEndpoint: message.originalEndpoint\r\n    };\r\n    \r\n    this.messageStore.addMessage(templateMessage);\r\n    this.emit('templateMessage', templateMessage);\r\n    \r\n    // Template messages indicate we should expect a Model message next\r\n    this.emit('templateReady', templateMessage);\r\n  }\r\n  \r\n  /**\r\n   * Handle model/DAG messages\r\n   */\r\n  handleModelMessage(message) {\r\n    let dagData = null;\r\n    \r\n    try {\r\n      if (typeof message.aiResponse === 'string') {\r\n        dagData = JSON.parse(message.aiResponse);\r\n      } else {\r\n        dagData = message.aiResponse;\r\n      }\r\n    } catch (error) {\r\n      console.error('SignalRClient: Failed to parse DAG data', error);\r\n    }\r\n    \r\n    const modelMessage = {\r\n      id: message.aiMessageId || message.dagRequestId,\r\n      messageType: 'Model',\r\n      type: 'ai',\r\n      isAiResponse: true,\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      dagRequestId: message.dagRequestId,\r\n      dagData: dagData,\r\n      aiResponse: message.aiResponse, // REQUIRED: DagProcessor expects this field\r\n      timestamp: new Date().toISOString(),\r\n      originalEndpoint: message.originalEndpoint,\r\n      parentMessageId: message.relatedUserMessageId\r\n    };\r\n    \r\n    this.messageStore.addMessage(modelMessage);\r\n    \r\n    // Emit different events based on the endpoint\r\n    if (message.originalEndpoint === '/query') {\r\n      // Interactive journey - manual DAG generation\r\n      this.emit('dagGenerated', modelMessage);\r\n    } else if (message.originalEndpoint === '/chat') {\r\n      // Template journey - automated DAG generation\r\n      this.emit('templateDagGenerated', modelMessage);\r\n    }\r\n    \r\n    // Always emit a generic model event\r\n    this.emit('modelMessage', modelMessage);\r\n    \r\n    // AUTO-EXECUTE: Step 4 of user journey - execute DAG after generation\r\n    this.autoExecuteAfterDagGeneration(modelMessage);\r\n  }\r\n  \r\n  /**\r\n   * Auto-execute DAG after generation completes (Step 4 of user journey)\r\n   * NOTE: Execution is now handled by DagProcessor, not here\r\n   */\r\n  async autoExecuteAfterDagGeneration(modelMessage) {\r\n    // Check if auto-execution is enabled\r\n    const autoExecute = this.config.get('autoExecuteAfterDag');\r\n    if (autoExecute === false) {\r\n      console.log('SignalRClient: Auto-execution disabled, skipping execution');\r\n      return;\r\n    }\r\n    \r\n    console.log('SignalRClient: DAG generation complete, execution will be handled by DagProcessor', {\r\n      scenarioId: modelMessage.scenarioId,\r\n      hasDagData: !!modelMessage.dagData\r\n    });\r\n    \r\n    // The DagProcessor will handle the actual execution automatically\r\n    // We just emit an event to notify that DAG generation is complete\r\n    this.emit('dagGenerationComplete', {\r\n      scenarioId: modelMessage.scenarioId,\r\n      dagData: modelMessage.dagData,\r\n      messageType: 'Model'\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle analysis messages\r\n   */\r\n  handleAnalysisMessage(message) {\r\n    let analysisData = null;\r\n    let tableMarkdown = null;\r\n    let tableJson = null;\r\n    \r\n    try {\r\n      if (typeof message.aiResponse === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(message.aiResponse);\r\n          let textContent = parsed.text || parsed.message || message.aiResponse;\r\n          \r\n          // Handle double-encoded JSON in the text field\r\n          if (typeof textContent === 'string' && textContent.startsWith('{')) {\r\n            try {\r\n              const innerParsed = JSON.parse(textContent);\r\n              analysisData = innerParsed.text || innerParsed.message || textContent;\r\n            } catch {\r\n              analysisData = textContent; // Use as-is if can't parse\r\n            }\r\n          } else {\r\n            analysisData = textContent;\r\n          }\r\n          \r\n          tableMarkdown = parsed.tableMarkdown;\r\n          tableJson = parsed.tableJson;\r\n        } catch {\r\n          analysisData = message.aiResponse;\r\n        }\r\n      } else {\r\n        let textContent = message.aiResponse?.text || message.aiResponse?.message || '';\r\n        \r\n        // Handle double-encoded JSON in the text field  \r\n        if (typeof textContent === 'string' && textContent.startsWith('{')) {\r\n          try {\r\n            const innerParsed = JSON.parse(textContent);\r\n            analysisData = innerParsed.text || innerParsed.message || textContent;\r\n          } catch {\r\n            analysisData = textContent; // Use as-is if can't parse\r\n          }\r\n        } else {\r\n          analysisData = textContent;\r\n        }\r\n        \r\n        tableMarkdown = message.aiResponse?.tableMarkdown;\r\n        tableJson = message.aiResponse?.tableJson;\r\n      }\r\n    } catch (error) {\r\n      analysisData = message.aiResponse || '';\r\n    }\r\n    \r\n    const analysisMessage = {\r\n      id: message.aiMessageId || message.id,\r\n      content: analysisData,\r\n      messageType: 'Analysis',\r\n      type: 'ai',\r\n      isAiResponse: true,\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      tableMarkdown,\r\n      tableJson,\r\n      timestamp: new Date().toISOString(),\r\n      originalEndpoint: message.originalEndpoint,\r\n      parentMessageId: message.relatedUserMessageId\r\n    };\r\n    \r\n    this.messageStore.addMessage(analysisMessage);\r\n    this.emit('analysisMessage', analysisMessage);\r\n  }\r\n  \r\n  /**\r\n   * Handle special messages (Scenario, Explanation)\r\n   */\r\n  handleSpecialMessage(message) {\r\n    const specialMessage = {\r\n      id: message.aiMessageId || message.id,\r\n      content: message.aiResponse || message.message,\r\n      messageType: message.messageType,\r\n      type: 'ai',\r\n      isAiResponse: true,\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      timestamp: new Date().toISOString(),\r\n      originalEndpoint: message.originalEndpoint,\r\n      parentMessageId: message.relatedUserMessageId,\r\n      fixedDag: message.fixedDag,\r\n      fixedScenario: message.fixedScenario\r\n    };\r\n    \r\n    this.messageStore.addMessage(specialMessage);\r\n    this.emit(`${message.messageType.toLowerCase()}Message`, specialMessage);\r\n  }\r\n  \r\n  /**\r\n   * Handle evaluation messages\r\n   */\r\n  handleEvaluationMessage(message) {\r\n    const evaluationMessage = {\r\n      id: message.id,\r\n      messageType: message.messageType,\r\n      type: 'system',\r\n      scenarioId: message.scenarioId,\r\n      sessionId: message.sessionId,\r\n      status: message.status,\r\n      hasResults: message.hasResults,\r\n      totalRecords: message.totalRecords,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    this.messageStore.addMessage(evaluationMessage);\r\n    this.emit('evaluationMessage', evaluationMessage);\r\n    \r\n    // Update scenario status\r\n    if (message.scenarioId) {\r\n      this.messageStore.updateScenarioStatus(message.scenarioId, message.status);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle scenario query messages (DAG generation)\r\n   */\r\n  handleScenarioQueryMessage(message) {\r\n    console.log('SignalRClient: Processing ScenarioQueryMessage', message);\r\n    \r\n    // Transform to unified format and handle\r\n    const unifiedMessage = {\r\n      messageType: 'Model',\r\n      originalEndpoint: '/query',\r\n      scenarioId: message.scenarioId,\r\n      dagRequestId: message.dagRequestId,\r\n      aiResponse: message.aiData,\r\n      relatedUserMessageId: message.relatedUserMessageId,\r\n      statusCode: message.statusCode\r\n    };\r\n    \r\n    this.handleUnifiedMessage(unifiedMessage);\r\n  }\r\n  \r\n  /**\r\n   * Handle legacy message format\r\n   */\r\n  handleLegacyMessage(message) {\r\n    // Transform legacy format to unified format\r\n    const unifiedMessage = {\r\n      messageType: message.type || 'Text',\r\n      originalEndpoint: '/chat',\r\n      aiResponse: message.content || message.message,\r\n      aiMessageId: message.id,\r\n      scenarioId: message.scenarioId,\r\n      timestamp: message.timestamp\r\n    };\r\n    \r\n    this.handleUnifiedMessage(unifiedMessage);\r\n  }\r\n  \r\n  /**\r\n   * Register for message updates\r\n   */\r\n  async registerForMessages() {\r\n    const scenarioId = this.config.get('scenarioId');\r\n    if (scenarioId && this.connection) {\r\n      try {\r\n        await this.connection.invoke('JoinScenario', scenarioId);\r\n        console.log(`SignalRClient: Joined scenario ${scenarioId}`);\r\n      } catch (error) {\r\n        console.error('SignalRClient: Failed to join scenario', error);\r\n      }\r\n    }\r\n    \r\n    // Also register for widget-specific channel if available\r\n    const widgetId = this.config.get('widgetId');\r\n    if (widgetId && this.connection) {\r\n      try {\r\n        await this.connection.invoke('JoinWidget', widgetId);\r\n        console.log(`SignalRClient: Joined widget channel ${widgetId}`);\r\n      } catch (error) {\r\n        console.warn('SignalRClient: Widget channel not available', error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Set waiting state\r\n   */\r\n  setWaitingForResponse(waiting) {\r\n    this.waitingForResponse = waiting;\r\n    this.emit('waitingStateChanged', waiting);\r\n  }\r\n  \r\n  /**\r\n   * Get connection ID\r\n   */\r\n  getConnectionId() {\r\n    return this.socketId || this.connection?.connectionId;\r\n  }\r\n  \r\n  /**\r\n   * Disconnect from SignalR hub\r\n   */\r\n  async disconnect() {\r\n    if (this.connection) {\r\n      try {\r\n        await this.connection.stop();\r\n        this.connected = false;\r\n        this.connection = null;\r\n        this.socketId = null;\r\n        console.log('SignalRClient: Disconnected');\r\n      } catch (error) {\r\n        console.error('SignalRClient: Error during disconnect', error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send a message via SignalR\r\n   */\r\n  async send(method, ...args) {\r\n    if (!this.connected || !this.connection) {\r\n      throw new Error('SignalRClient: Not connected');\r\n    }\r\n    \r\n    try {\r\n      return await this.connection.invoke(method, ...args);\r\n    } catch (error) {\r\n      console.error(`SignalRClient: Failed to invoke ${method}`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Add event listener\r\n   */\r\n  on(event, callback) {\r\n    if (!this.listeners.has(event)) {\r\n      this.listeners.set(event, []);\r\n    }\r\n    \r\n    this.listeners.get(event).push(callback);\r\n    \r\n    return () => {\r\n      const callbacks = this.listeners.get(event);\r\n      if (callbacks) {\r\n        const index = callbacks.indexOf(callback);\r\n        if (index !== -1) {\r\n          callbacks.splice(index, 1);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Remove event listener\r\n   */\r\n  off(event, callback) {\r\n    const callbacks = this.listeners.get(event);\r\n    if (callbacks) {\r\n      const index = callbacks.indexOf(callback);\r\n      if (index !== -1) {\r\n        callbacks.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Emit event to listeners\r\n   */\r\n  emit(event, data) {\r\n    const callbacks = this.listeners.get(event);\r\n    if (callbacks) {\r\n      callbacks.forEach(callback => {\r\n        try {\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error(`SignalRClient: Error in ${event} listener`, error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get connection state\r\n   */\r\n  getState() {\r\n    if (!this.connection) {\r\n      return 'Disconnected';\r\n    }\r\n    \r\n    switch (this.connection.state) {\r\n      case signalR.HubConnectionState.Connected:\r\n        return 'Connected';\r\n      case signalR.HubConnectionState.Connecting:\r\n        return 'Connecting';\r\n      case signalR.HubConnectionState.Reconnecting:\r\n        return 'Reconnecting';\r\n      case signalR.HubConnectionState.Disconnected:\r\n        return 'Disconnected';\r\n      case signalR.HubConnectionState.Disconnecting:\r\n        return 'Disconnecting';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check if connected\r\n   */\r\n  isConnected() {\r\n    return this.connected && this.connection?.state === signalR.HubConnectionState.Connected;\r\n  }\r\n}","/**\r\n * Widget Configuration\r\n * Defines widget capabilities and API flags for proper backend communication\r\n */\r\n\r\n/**\r\n * Widget capabilities - what the widget can and cannot do\r\n */\r\nexport const WIDGET_CAPABILITIES = {\r\n  // Visualization capabilities\r\n  hasDAGViewer: false,        // No full DAG visualization\r\n  hasCharts: false,            // No TradingView charts\r\n  hasBacktestScreen: false,    // No dedicated backtest screen\r\n  \r\n  // Data handling limits\r\n  maxTableRows: 100,           // Maximum rows to display in tables\r\n  maxImageSize: 2048,          // Maximum image dimension in pixels\r\n  maxMessageLength: 5000,      // Maximum message length\r\n  maxConversationSize: 50,     // Maximum messages to keep in memory\r\n  \r\n  // Supported features\r\n  supportedMessageTypes: [\r\n    'Text',\r\n    'Steps', \r\n    'Template',\r\n    'Model',\r\n    'Analysis',\r\n    'Scenario',\r\n    'Explanation',\r\n    'Evaluation',\r\n    'EvaluationComplete'\r\n  ],\r\n  \r\n  // UI capabilities\r\n  hasLandingPage: true,        // Show landing page with options\r\n  hasTemplateModal: true,      // Template selection modal\r\n  hasWizard: true,            // Scenario builder wizard\r\n  hasMilestoneTracker: true,  // Visual milestone tracking\r\n  hasFeedback: true,          // Feedback system\r\n  hasExport: true,            // Export functionality\r\n  \r\n  // Interaction modes\r\n  supportsInteractiveJourney: true,  // Manual DAG generation\r\n  supportsTemplateJourney: true,     // Automated template flow\r\n  supportsAnalysisQueries: true,     // Ask-a-question on results\r\n  \r\n  // Performance\r\n  enableAutoReconnect: true,   // Auto-reconnect SignalR\r\n  reconnectDelay: 1000,        // Milliseconds\r\n  maxReconnectAttempts: 5\r\n};\r\n\r\n/**\r\n * API flags - tells backend this is a widget request\r\n */\r\nexport const API_FLAGS = {\r\n  // Widget identification\r\n  isWidget: true,              // Flag for backend to know this is widget\r\n  widgetVersion: '2.0.0',      // Widget version for compatibility\r\n  \r\n  // Response format preferences\r\n  returnFormat: 'simplified',  // Request simplified responses\r\n  includeLinks: true,         // Include links to main app\r\n  compressImages: true,       // Request compressed images\r\n  \r\n  // Data handling\r\n  paginateResults: true,      // Enable pagination for large datasets\r\n  pageSize: 50,               // Default page size\r\n  \r\n  // Feature flags\r\n  skipVisualization: true,     // Skip heavy visualization data\r\n  includeTableData: true,      // Include table-friendly data\r\n  simplifyDAG: true,          // Simplify DAG for display\r\n  \r\n  // Session tracking\r\n  trackSessions: true,        // Enable session tracking\r\n  sendAnalytics: true         // Send analytics events\r\n};\r\n\r\n/**\r\n * Journey milestones configuration\r\n */\r\nexport const MILESTONES = [\r\n  { \r\n    id: 0, \r\n    name: 'Explore', \r\n    icon: '💭',\r\n    description: 'Explore ideas and refine your trading scenario'\r\n  },\r\n  { \r\n    id: 1, \r\n    name: 'Template', \r\n    icon: '📝',\r\n    description: 'Select or create a scenario template'\r\n  },\r\n  { \r\n    id: 2, \r\n    name: 'Model', \r\n    icon: '🔧',\r\n    description: 'Generate the trading model'\r\n  },\r\n  { \r\n    id: 3, \r\n    name: 'Evaluate', \r\n    icon: '📊',\r\n    description: 'Run evaluation on market data'\r\n  },\r\n  { \r\n    id: 4, \r\n    name: 'Analyze', \r\n    icon: '🔍',\r\n    description: 'Analyze results and patterns'\r\n  },\r\n  { \r\n    id: 5, \r\n    name: 'Backtest', \r\n    icon: '📈',\r\n    description: 'Run historical backtests'\r\n  }\r\n];\r\n\r\n/**\r\n * Template categories for filtering\r\n */\r\nexport const TEMPLATE_CATEGORIES = [\r\n  'Technical Analysis',\r\n  'Price Action',\r\n  'Volume Analysis',\r\n  'Momentum',\r\n  'Volatility',\r\n  'Market Structure',\r\n  'Multi-Timeframe',\r\n  'Options',\r\n  'Crypto',\r\n  'Custom'\r\n];\r\n\r\n/**\r\n * Default widget settings\r\n */\r\nexport const DEFAULT_SETTINGS = {\r\n  theme: 'light',\r\n  fontSize: 'medium',\r\n  showTimestamps: true,\r\n  showFeedback: true,\r\n  autoScroll: true,\r\n  soundEnabled: false,\r\n  notificationsEnabled: true,\r\n  compactMode: false\r\n};\r\n\r\n/**\r\n * Endpoints configuration\r\n */\r\nexport const ENDPOINTS = {\r\n  // Main endpoints\r\n  chat: '/api/widget/chat',\r\n  query: '/api/widget/query',\r\n  templates: '/api/widget/templates',\r\n  feedback: '/api/widget/feedback',\r\n  explanation: '/api/widget/explanation',\r\n  \r\n  // Analysis endpoints\r\n  analysis: '/api/widget/analysis',\r\n  \r\n  // Evaluation endpoints\r\n  evaluate: '/api/widget/evaluate',\r\n  results: '/api/widget/results'\r\n};\r\n\r\n/**\r\n * Error messages\r\n */\r\nexport const ERROR_MESSAGES = {\r\n  CONNECTION_FAILED: 'Unable to connect to the server. Please check your connection and try again.',\r\n  DAG_GENERATION_FAILED: 'Failed to generate the scenario. Please try again or contact support.',\r\n  EVALUATION_FAILED: 'Failed to evaluate the scenario. Please try again.',\r\n  TEMPLATE_LOAD_FAILED: 'Unable to load templates. Using default templates.',\r\n  SESSION_EXPIRED: 'Your session has expired. Please refresh the page.',\r\n  API_KEY_INVALID: 'Invalid API key. Please check your configuration.',\r\n  RATE_LIMIT: 'Rate limit exceeded. Please wait a moment before trying again.'\r\n};\r\n\r\n/**\r\n * Success messages\r\n */\r\nexport const SUCCESS_MESSAGES = {\r\n  CONNECTED: 'Connected successfully',\r\n  SCENARIO_GENERATED: 'Scenario generated successfully',\r\n  EVALUATION_COMPLETE: 'Evaluation completed',\r\n  TEMPLATE_SELECTED: 'Template selected',\r\n  FEEDBACK_SENT: 'Thank you for your feedback!',\r\n  EXPORT_COMPLETE: 'Export completed successfully'\r\n};\r\n\r\n/**\r\n * Widget state machine states\r\n */\r\nexport const WIDGET_STATES = {\r\n  INITIALIZING: 'initializing',\r\n  LANDING: 'landing',\r\n  CHATTING: 'chatting',\r\n  GENERATING: 'generating',\r\n  EVALUATING: 'evaluating',\r\n  ANALYZING: 'analyzing',\r\n  ERROR: 'error',\r\n  DISCONNECTED: 'disconnected'\r\n};\r\n\r\n/**\r\n * Get configuration value with fallback\r\n */\r\nexport function getConfig(key, fallback = null) {\r\n  const configs = {\r\n    capabilities: WIDGET_CAPABILITIES,\r\n    apiFlags: API_FLAGS,\r\n    milestones: MILESTONES,\r\n    categories: TEMPLATE_CATEGORIES,\r\n    settings: DEFAULT_SETTINGS,\r\n    endpoints: ENDPOINTS,\r\n    errors: ERROR_MESSAGES,\r\n    success: SUCCESS_MESSAGES,\r\n    states: WIDGET_STATES\r\n  };\r\n  \r\n  const [section, property] = key.split('.');\r\n  \r\n  if (section && property && configs[section]) {\r\n    return configs[section][property] || fallback;\r\n  }\r\n  \r\n  return fallback;\r\n}\r\n\r\n/**\r\n * Merge API flags with request\r\n */\r\nexport function withApiFlags(request = {}) {\r\n  return {\r\n    ...request,\r\n    ...API_FLAGS\r\n  };\r\n}\r\n\r\n/**\r\n * Check if a message type is supported\r\n */\r\nexport function isMessageTypeSupported(messageType) {\r\n  return WIDGET_CAPABILITIES.supportedMessageTypes.includes(messageType);\r\n}\r\n\r\n/**\r\n * Get milestone by ID or name\r\n */\r\nexport function getMilestone(identifier) {\r\n  if (typeof identifier === 'number') {\r\n    return MILESTONES.find(m => m.id === identifier);\r\n  }\r\n  \r\n  return MILESTONES.find(m => \r\n    m.name.toLowerCase() === identifier.toLowerCase()\r\n  );\r\n}\r\n\r\n/**\r\n * Export all configurations\r\n */\r\nexport default {\r\n  WIDGET_CAPABILITIES,\r\n  API_FLAGS,\r\n  MILESTONES,\r\n  TEMPLATE_CATEGORIES,\r\n  DEFAULT_SETTINGS,\r\n  ENDPOINTS,\r\n  ERROR_MESSAGES,\r\n  SUCCESS_MESSAGES,\r\n  WIDGET_STATES,\r\n  getConfig,\r\n  withApiFlags,\r\n  isMessageTypeSupported,\r\n  getMilestone\r\n};","/**\n * API Client\n * Handles communication with TradrLab API\n */\n\nimport { API_FLAGS } from '../core/widget-config.js';\n\n// Use browser crypto API instead of uuid package for direct ES6 module loading\nfunction uuidv4() {\n  // Use modern crypto.randomUUID if available (most browsers support it now)\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  \n  // Fallback for older browsers\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport class ApiClient {\n  constructor(configManager) {\n    this.config = configManager;\n    this.baseUrl = configManager.get('apiBaseUrl');\n    this.apiKey = configManager.get('apikey');\n    \n    // Default headers\n    this.headers = {\n      'Content-Type': 'application/json',\n      'X-API-Key': this.apiKey,\n      'X-Widget-Version': '1.0.0',\n      'X-Widget-Session': configManager.get('sessionId') || 'unknown'\n    };\n  }\n  \n  /**\n   * Get JWT token for SignalR authentication\n   */\n  async getJwtToken() {\n    const endpoint = `${this.baseUrl}/api/widget/auth/token`;\n    \n    const payload = {\n      ExternalUserId: this.config.get('externalUserId'),\n      DisplayName: this.config.get('userDisplayName'),\n      Metadata: this.config.get('userMetadata') || {}\n    };\n    \n    console.log('ApiClient: JWT token request payload:', payload);\n    console.log('ApiClient: externalUserId from config:', this.config.get('externalUserId'));\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to get JWT token', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create or get widget user\n   */\n  async createOrGetUser(externalUserId, displayName = null, metadata = {}) {\n    const endpoint = `${this.baseUrl}/api/widget/users`;\n    \n    const payload = {\n      externalUserId,\n      displayName,\n      metadata\n    };\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to create/get user', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Send a chat message via widget endpoint\n   */\n  async sendMessage(content, options = {}) {\n    const endpoint = `${this.baseUrl}/api/widget/chat`;\n    \n    // SessionId: Only send if we have one from previous AI responses, otherwise null\n    const sessionId = options.sessionId || this.config.get('sessionId') || null;\n    \n    const externalUserId = this.config.get('externalUserId');\n    if (!externalUserId) {\n      throw new Error('ApiClient: ExternalUserId is required but not set in config');\n    }\n    \n    // ScenarioId: Must be provided in options OR already stored from previous messages\n    // The backend creates ScenarioId as MongoDB ObjectId when user creates a new scenario\n    let scenarioId;\n    if (options.scenarioId) {\n      scenarioId = options.scenarioId;\n      console.log('ApiClient.sendMessage: Using ScenarioId from options:', scenarioId);\n    } else if (this.config.get('scenarioId')) {\n      scenarioId = this.config.get('scenarioId');\n      console.log('ApiClient.sendMessage: Using stored ScenarioId:', scenarioId);\n    } else {\n      throw new Error('ApiClient: ScenarioId is required but not found. Backend must create ScenarioId first.');\n    }\n    \n    // Build base payload with required backend DTO fields\n    const payload = {\n      // Required backend DTO fields (maintain existing structure)\n      Message: content,\n      ExternalUserId: externalUserId,\n      MessageType: options.messageType || 'Text',\n      ScenarioId: scenarioId,\n      SessionId: sessionId,\n      Image: options.image || null,\n      ParentMessageId: options.parentMessageId || null,\n      \n      // Additional AAQ-style fields for enhanced context\n      prompt: content,\n      gpt_version: \"v3\",\n      postId: this.generatePostId(),\n      userId: this.config.get('userId'),\n      isAiResponse: false,\n      message: content\n    };\n    \n    // Add enhanced context if available (progressive enhancement)\n    this.addScenarioContext(payload, options);\n    \n    // Add market_info for AI engine\n    this.addMarketInfo(payload, options);\n    \n    // Add socketId if provided (for SignalR routing)\n    if (options.socketId) {\n      payload.frontendSocketId = options.socketId;\n    }\n    \n    // Add API flags for widget-specific behavior\n    Object.assign(payload, API_FLAGS);\n    \n    console.log('ApiClient: Enhanced chat message payload:', payload);\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to send message', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Add scenario context to payload based on available data\n   */\n  addScenarioContext(payload, options) {\n    // Add scenario request context if available\n    const scenarioRequest = this.buildScenarioRequest();\n    if (scenarioRequest) {\n      payload.scenarioRequest = scenarioRequest;\n    }\n    \n    // Add scenario execute request context if available (post-evaluation)\n    // Main app always sends this when available - AI engine decides which agent to use\n    const scenarioExecuteRequest = this.buildScenarioExecuteRequest();\n    if (scenarioExecuteRequest) {\n      payload.scenarioExecuteRequest = scenarioExecuteRequest;\n    }\n  }\n  \n  /**\n   * Build scenario request context from available configuration\n   */\n  buildScenarioRequest() {\n    const scenarioId = this.config.get('scenarioId');\n    if (!scenarioId) return null;\n    \n    const scenarioRequest = {\n      scenarioId: scenarioId,\n      scenarioName: this.config.get('scenarioName') || \"\"\n    };\n    \n    // Add symbol if available\n    const symbol = this.config.get('defaultSymbol');\n    if (symbol) {\n      scenarioRequest.symbol = symbol;\n    }\n    \n    // Add timeframe information if available\n    const timeframe = this.config.get('defaultTimeframe');\n    if (timeframe) {\n      // Parse timeframe to input/output frequencies\n      const minutes = this.parseTimeframeToMinutes(timeframe);\n      scenarioRequest.inputFreq = minutes;\n      scenarioRequest.outputFreq = minutes;\n    }\n    \n    // Add schedule configuration if available\n    const weekDays = this.config.get('weekDays');\n    if (weekDays) {\n      scenarioRequest.weekDays = weekDays;\n    } else {\n      scenarioRequest.weekDays = [1, 2, 3, 4, 5, 6, 7]; // Default all days\n    }\n    \n    const months = this.config.get('months');\n    if (months) {\n      scenarioRequest.months = months;\n    } else {\n      scenarioRequest.months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; // Default all months\n    }\n    \n    // Add time range if available\n    const fromTime = this.config.get('fromTime');\n    const toTime = this.config.get('toTime');\n    const timeZone = this.config.get('timeZone');\n    \n    if (fromTime) scenarioRequest.fromTime = fromTime;\n    if (toTime) scenarioRequest.toTime = toTime;\n    if (timeZone) scenarioRequest.timeZone = timeZone;\n    \n    // Add refresh datetime if available\n    const refreshDatetime = this.config.get('refreshDatetime');\n    if (refreshDatetime) {\n      scenarioRequest.refreshDatetime = refreshDatetime;\n    }\n    \n    return scenarioRequest;\n  }\n  \n  /**\n   * Build scenario execute request context (available after model evaluation)\n   */\n  buildScenarioExecuteRequest() {\n    const scenarioData = this.config.get('scenarioData');\n    if (!scenarioData) return null;\n    \n    const symbol = this.config.get('defaultSymbol');\n    const timeframe = this.config.get('defaultTimeframe');\n    \n    if (!symbol || !timeframe) return null;\n    \n    const minutes = this.parseTimeframeToMinutes(timeframe);\n    \n    const executeRequest = {\n      intervalInMinutes: minutes,\n      symbol: symbol,\n      dataIntervalInMinutes: minutes,\n      scenarioData: scenarioData\n    };\n    \n    // Add exchange if available\n    const exchange = this.config.get('exchange');\n    if (exchange) {\n      executeRequest.Exchange = exchange;\n    }\n    \n    // Add schedule information\n    executeRequest.weekDays = this.config.get('weekDays') || [1, 2, 3, 4, 5, 6, 7];\n    executeRequest.months = this.config.get('months') || [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    \n    const fromTime = this.config.get('fromTime');\n    const toTime = this.config.get('toTime');\n    const timeZone = this.config.get('timeZone');\n    \n    if (fromTime) executeRequest.fromTime = fromTime;\n    if (toTime) executeRequest.toTime = toTime;\n    if (timeZone) executeRequest.timezone = timeZone;\n    \n    return executeRequest;\n  }\n  \n  /**\n   * Add market_info to payload for AI engine\n   */\n  addMarketInfo(payload, options) {\n    // Get symbol with fallback to default\n    let symbol = this.config.get('defaultSymbol');\n    if (!symbol) {\n      symbol = 'EURUSD'; // Fallback default\n      this.config.set('defaultSymbol', symbol);\n    }\n    \n    // Add market_info at multiple levels to ensure AI engine gets it\n    const marketInfo = {\n      symbol: symbol,\n      timeframe: this.config.get('defaultTimeframe') || '1H',\n      interval_minutes: this.parseTimeframeToMinutes(this.config.get('defaultTimeframe') || '1H'),\n      exchange: this.config.get('exchange') || 'DUKASCOPY'\n    };\n    \n    // Add marketinfo (matches backend AiGenerateScenarioRequest JsonProperty)\n    payload.marketinfo = marketInfo;\n    \n    console.log('ApiClient: Added marketinfo to payload:', payload.marketinfo);\n  }\n  \n  /**\n   * Parse timeframe string to minutes (e.g., \"1H\" -> 60, \"15M\" -> 15)\n   */\n  parseTimeframeToMinutes(timeframe) {\n    if (!timeframe || typeof timeframe !== 'string') {\n      return 60; // Default to 1 hour\n    }\n    \n    const timeframeUpper = timeframe.toUpperCase();\n    \n    if (timeframeUpper.endsWith('M')) {\n      return parseInt(timeframeUpper.slice(0, -1)) || 15;\n    } else if (timeframeUpper.endsWith('H')) {\n      return (parseInt(timeframeUpper.slice(0, -1)) || 1) * 60;\n    } else if (timeframeUpper.endsWith('D')) {\n      return (parseInt(timeframeUpper.slice(0, -1)) || 1) * 1440;\n    }\n    \n    // Try to parse as pure number (assume minutes)\n    const minutes = parseInt(timeframe);\n    return isNaN(minutes) ? 60 : minutes;\n  }\n  \n  /**\n   * Generate unique post ID (24-character hex like MongoDB ObjectId)\n   */\n  generatePostId() {\n    const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\n    const randomHex = Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('');\n    return timestamp + randomHex;\n  }\n  \n  /**\n   * Send feedback for a message via widget endpoint\n   */\n  async sendFeedback(messageId, feedback) {\n    const endpoint = `${this.baseUrl}/api/widget/feedback`;\n    \n    const payload = {\n      MessageId: messageId,\n      Feedback: feedback.type, // 'positive' or 'negative'\n      Comments: feedback.comments\n    };\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to send feedback', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Create a new scenario\n   */\n  async createScenario(name = \"New Scenario\") {\n    const endpoint = `${this.baseUrl}/api/widget/scenarios`;\n    \n    const externalUserId = this.config.get('externalUserId');\n    if (!externalUserId) {\n      throw new Error('ApiClient: ExternalUserId is required to create scenario');\n    }\n    \n    const payload = {\n      ExternalUserId: externalUserId,\n      Name: name\n    };\n    \n    console.log('ApiClient: Creating scenario', payload);\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      \n      // Store the ScenarioId and name from the backend\n      if (response.scenarioId) {\n        this.config.set('scenarioId', response.scenarioId);\n        this.config.set('scenarioName', name);\n        console.log('ApiClient: Scenario created and stored:', { id: response.scenarioId, name });\n      }\n      \n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to create scenario', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Get scenario messages via widget endpoint\n   */\n  async getMessages(scenarioId) {\n    const endpoint = `${this.baseUrl}/api/widget/messages/${scenarioId}`;\n    \n    try {\n      const response = await this.request('GET', endpoint);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to get messages', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Upload an image\n   */\n  async uploadImage(imageData) {\n    // Convert to base64 if needed\n    let base64Data = imageData;\n    \n    if (imageData instanceof File) {\n      base64Data = await this.fileToBase64(imageData);\n    }\n    \n    return {\n      base64: base64Data,\n      url: `data:image/jpeg;base64,${base64Data}`\n    };\n  }\n\n  /**\n   * Generate Scenario (DAG) - Routes to /query endpoint\n   * This is triggered when user reaches the \"rephrased prompt\" milestone\n   */\n  async generateScenario(options = {}) {\n    const endpoint = `${this.baseUrl}/api/widget/query`;\n    \n    const externalUserId = this.config.get('externalUserId');\n    if (!externalUserId) {\n      throw new Error('ApiClient: ExternalUserId is required for scenario generation');\n    }\n    \n    // ScenarioId MUST exist from previous chat messages - no fallbacks\n    const scenarioId = options.scenarioId || this.config.get('scenarioId');\n    console.log('ApiClient.generateScenario: Debug ScenarioId lookup:', {\n      optionsScenarioId: options.scenarioId,\n      configScenarioId: this.config.get('scenarioId'),\n      finalScenarioId: scenarioId\n    });\n    \n    if (!scenarioId) {\n      throw new Error('ApiClient: ScenarioId is required for generateScenario - must have previous chat messages first');\n    }\n    \n    // SessionId should exist from previous messages for context continuity\n    const sessionId = options.sessionId || this.config.get('sessionId');\n    if (!sessionId) {\n      console.warn('ApiClient: No SessionId available for generateScenario - conversation context may be lost');\n    }\n    \n    const payload = {\n      ExternalUserId: externalUserId,\n      ConversationContext: options.conversationContext || '',\n      ScenarioId: scenarioId,\n      SessionId: sessionId,\n      SocketId: options.socketId || this.config.get('socketId'),\n      PostId: uuidv4()\n    };\n    \n    console.log('ApiClient: Generating scenario (DAG) via /query endpoint', {\n      scenarioId: payload.ScenarioId,\n      contextLength: payload.ConversationContext.length,\n      externalUserId: payload.ExternalUserId,\n      fullPayload: payload\n    });\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      console.log('ApiClient: Scenario generation initiated successfully', response);\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to generate scenario', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Execute AI DAG blocks - Routes to /execute endpoint\n   * This is triggered after DAG generation completes (step 4 of user journey)\n   * Accepts ScenarioDto with Nodes/Edges structure\n   */\n  async executeWidget(scenarioData, options = {}) {\n    const endpoint = `${this.baseUrl}/api/widget/execute`;\n    \n    const externalUserId = this.config.get('externalUserId');\n    if (!externalUserId) {\n      throw new Error('ApiClient: ExternalUserId is required for widget execution');\n    }\n    \n    const scenarioId = options.scenarioId || this.config.get('scenarioId');\n    if (!scenarioId) {\n      throw new Error('ApiClient: ScenarioId is required for widget execution');\n    }\n    \n    // Validate ScenarioDto structure\n    if (!scenarioData || !scenarioData.Nodes || !scenarioData.Edges) {\n      throw new Error('ApiClient: ScenarioData with Nodes and Edges is required for execution');\n    }\n    \n    const payload = {\n      ExternalUserId: externalUserId,\n      ScenarioId: scenarioId,\n      ScenarioData: scenarioData,\n      // Use configured values from widget settings (no hardcoded fallbacks)\n      Symbol: options.symbol || this.config.get('defaultSymbol'),\n      IntervalInMinutes: options.intervalInMinutes || this.parseTimeframeToMinutes(this.config.get('defaultTimeframe'))\n    };\n    \n    console.log('ApiClient: Executing widget', {\n      scenarioId: payload.ScenarioId,\n      nodeCount: scenarioData.Nodes.length,\n      edgeCount: scenarioData.Edges.length,\n      symbol: payload.Symbol,\n      interval: payload.IntervalInMinutes,\n      externalUserId: payload.ExternalUserId\n    });\n    \n    try {\n      const response = await this.request('POST', endpoint, payload);\n      console.log('ApiClient: Widget execution completed', {\n        success: response.Success,\n        totalRecords: response.TotalRecords,\n        scenarioId: response.ScenarioId\n      });\n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to execute widget', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load blocks data for DAG transformation and template selection\n   */\n  async loadBlocksData() {\n    const endpoint = `${this.baseUrl}/api/widget/blocks`;\n    \n    console.log('ApiClient: Loading blocks data for widget');\n    \n    try {\n      const response = await this.request('GET', endpoint);\n      console.log('ApiClient: Blocks data loaded successfully', {\n        totalBlocks: response.totalBlocks,\n        totalGroups: response.totalGroups,\n        totalTemplates: response.totalTemplates,\n        libVersion: response.libVersion\n      });\n      \n      // Store blocks data in config for use by other components\n      this.config.set('blocksData', response);\n      \n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to load blocks data', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Load available currencies/symbols for symbol picker\n   */\n  async loadCurrencies() {\n    // Use the same endpoint as the main app\n    const endpoint = `${this.baseUrl}/candlechart/data/currencies`;\n    \n    console.log('ApiClient: Loading currencies from:', endpoint);\n    \n    try {\n      const response = await this.request('GET', endpoint);\n      console.log('ApiClient: Currencies loaded successfully', {\n        totalCurrencies: response.length,\n        groups: [...new Set(response.map(c => c.group))].length + ' groups'\n      });\n      \n      // Store currencies data in config for use by other components\n      this.config.set('currencies', response);\n      \n      return response;\n      \n    } catch (error) {\n      console.error('ApiClient: Failed to load currencies', error);\n      throw error;\n    }\n  }\n  \n  async loadCurrenciesOld() {\n    const endpoint = `${this.baseUrl}/api/currencies`;\n    \n    console.log('ApiClient: Loading currencies for symbol picker');\n    \n    try {\n      const response = await this.request('GET', endpoint);\n      console.log('ApiClient: Currencies loaded successfully', {\n        totalCurrencies: response.length,\n        groups: [...new Set(response.map(c => c.group))].length + ' groups'\n      });\n      \n      // Store currencies data in config for use by other components\n      this.config.set('currencies', response);\n      \n      return response;\n    } catch (error) {\n      console.error('ApiClient: Failed to load currencies', error);\n      throw error;\n    }\n  }\n  \n  /**\n   * Make HTTP request\n   */\n  async request(method, url, body = null) {\n    const options = {\n      method,\n      headers: this.headers\n    };\n    \n    if (body && method !== 'GET') {\n      options.body = JSON.stringify(body);\n    }\n    \n    try {\n      const response = await fetch(url, options);\n      \n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(`API Error ${response.status}: ${error}`);\n      }\n      \n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        return await response.json();\n      }\n      \n      return await response.text();\n      \n    } catch (error) {\n      if (this.config.get('debug')) {\n        console.error('ApiClient: Request failed', {\n          method,\n          url,\n          error\n        });\n      }\n      throw error;\n    }\n  }\n  \n  /**\n   * Convert file to base64\n   */\n  fileToBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      \n      reader.onload = () => {\n        const base64 = reader.result.split(',')[1];\n        resolve(base64);\n      };\n      \n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n  \n  /**\n   * Check rate limits\n   */\n  async checkRateLimits() {\n    // This would be implemented based on your rate limiting strategy\n    return {\n      dagRequests: {\n        used: 0,\n        limit: this.config.get('rateLimits').maxDagRequests\n      },\n      chatRequests: {\n        used: 0,\n        limit: this.config.get('rateLimits').maxChatRequests\n      }\n    };\n  }\n  \n  /**\n   * HTTP convenience methods\n   */\n  async get(url, options = {}) {\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n    return await this.request('GET', fullUrl, null);\n  }\n  \n  async post(url, data = null, options = {}) {\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n    return await this.request('POST', fullUrl, data);\n  }\n  \n  async put(url, data = null, options = {}) {\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n    return await this.request('PUT', fullUrl, data);\n  }\n  \n  async delete(url, options = {}) {\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n    return await this.request('DELETE', fullUrl, null);\n  }\n}","/**\r\n * Thinking Manager\r\n * Manages progressive loading indicators with contextual messages\r\n */\r\n\r\nexport class ThinkingManager {\r\n  constructor() {\r\n    this.activeIndicators = new Map();\r\n    this.progressiveMessages = {\r\n      '/chat': {\r\n        0: '💭 Thinking...',\r\n        5000: '🧠 Analyzing your request...',\r\n        10000: '📝 Crafting response...',\r\n        30000: '⏳ Almost done...',\r\n        45000: '🤔 This is taking a bit longer...'\r\n      },\r\n      '/query': {\r\n        0: '🚀 Creating your model...',\r\n        3000: '🔨 Constructing DAG structure...',\r\n        8000: '⚡ Optimizing parameters...',\r\n        15000: '🎯 Fine-tuning logic...',\r\n        30000: '⚠️ Complex model taking time...',\r\n        60000: '❌ Timeout - Please try again'\r\n      },\r\n      '/execute': {\r\n        0: '⚡ Running the model...',\r\n        1500: '📈 Processing market data...',\r\n        4000: '🔍 Finding trading opportunities...',\r\n        8000: '📊 Analyzing results...',\r\n        15000: '⚠️ Large dataset processing...'\r\n      },\r\n      'template': {\r\n        0: '📝 Processing template...',\r\n        3000: '🎯 Customizing parameters...',\r\n        8000: '✨ Generating scenario...',\r\n        15000: '🔧 Applying configurations...',\r\n        30000: '⚠️ Template taking time...'\r\n      },\r\n      'analysis': {\r\n        0: '🔍 Analyzing data...',\r\n        3000: '💡 Processing your question...',\r\n        8000: '📊 Generating insights...',\r\n        15000: '🎯 Deep diving into data...',\r\n        30000: '⚠️ Complex analysis in progress...'\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Start showing thinking indicator\r\n   * @param {string} requestId - Unique ID for this request\r\n   * @param {string} operationType - Type of operation ('/query', '/execute', etc)\r\n   * @param {string|null} customMessage - Optional custom message\r\n   * @param {Function|null} onTimeout - Callback when timeout is reached\r\n   * @param {number} timeoutMs - Timeout in milliseconds (default: 60000)\r\n   */\r\n  startThinking(requestId, operationType, customMessage = null, onTimeout = null, timeoutMs = 60000) {\r\n    console.log('🎯 ThinkingManager: Starting thinking indicator', {\r\n      requestId,\r\n      operationType,\r\n      customMessage,\r\n      activeCount: this.activeIndicators.size,\r\n      timeoutMs\r\n    });\r\n    \r\n    // Stop any existing indicator for this request\r\n    this.stopThinking(requestId);\r\n    \r\n    const indicator = {\r\n      id: requestId,\r\n      type: operationType,\r\n      startTime: Date.now(),\r\n      element: null,\r\n      timers: [],\r\n      customMessage,\r\n      onTimeout,\r\n      timeoutMs,\r\n      timedOut: false\r\n    };\r\n    \r\n    this.activeIndicators.set(requestId, indicator);\r\n    \r\n    // Create and show the indicator\r\n    this.createIndicatorElement(indicator);\r\n    \r\n    // Schedule progressive message updates\r\n    this.scheduleProgressiveUpdates(indicator);\r\n    \r\n    // Set up timeout handler\r\n    if (onTimeout && timeoutMs > 0) {\r\n      this.setupTimeoutHandler(indicator);\r\n    }\r\n    \r\n    // Start progress bar animation for chat messages\r\n    if (indicator.type === '/chat') {\r\n      this.startProgressBar(indicator);\r\n    }\r\n    \r\n    return indicator;\r\n  }\r\n  \r\n  /**\r\n   * Stop thinking indicator\r\n   */\r\n  stopThinking(requestId) {\r\n    const indicator = this.activeIndicators.get(requestId);\r\n    \r\n    console.log('🎯 ThinkingManager: Stopping thinking indicator', {\r\n      requestId,\r\n      found: !!indicator,\r\n      hasElement: !!indicator?.element\r\n    });\r\n    \r\n    if (indicator) {\r\n      // Clear all timers\r\n      indicator.timers.forEach(timer => clearTimeout(timer));\r\n      \r\n      // Clear progress timer if it exists\r\n      if (indicator.progressTimer) {\r\n        clearTimeout(indicator.progressTimer);\r\n      }\r\n      \r\n      // Remove element with fade out\r\n      if (indicator.element) {\r\n        indicator.element.style.opacity = '0';\r\n        indicator.element.style.transform = 'translateY(-10px)';\r\n        \r\n        setTimeout(() => {\r\n          if (indicator.element && indicator.element.parentNode) {\r\n            indicator.element.parentNode.removeChild(indicator.element);\r\n            console.log('🎯 ThinkingManager: Indicator element removed from DOM');\r\n          }\r\n        }, 300);\r\n      }\r\n      \r\n      this.activeIndicators.delete(requestId);\r\n      console.log('🎯 ThinkingManager: Indicator stopped successfully');\r\n      \r\n      return true;\r\n    }\r\n    \r\n    console.log('🎯 ThinkingManager: No indicator found to stop');\r\n    return false;\r\n  }\r\n  \r\n  /**\r\n   * Create the visual thinking indicator element\r\n   */\r\n  createIndicatorElement(indicator) {\r\n    const messages = this.progressiveMessages[indicator.type] || this.progressiveMessages['/chat'];\r\n    const initialMessage = indicator.customMessage || messages[0];\r\n    \r\n    // Create indicator HTML\r\n    const element = document.createElement('div');\r\n    element.className = 'tlw-thinking-indicator';\r\n    element.setAttribute('data-type', indicator.type);\r\n    element.innerHTML = `\r\n      <div class=\"tlw-thinking-content\">\r\n        <div class=\"tlw-thinking-animation\">\r\n          <span class=\"tlw-thinking-dot\"></span>\r\n          <span class=\"tlw-thinking-dot\"></span>\r\n          <span class=\"tlw-thinking-dot\"></span>\r\n        </div>\r\n        <div class=\"tlw-thinking-message\">\r\n          ${initialMessage}\r\n        </div>\r\n        <div class=\"tlw-thinking-timer\" style=\"display: none;\">\r\n          <span class=\"tlw-timer-text\">0s</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"tlw-progress-bar\">\r\n        <div class=\"tlw-progress-fill\"></div>\r\n      </div>\r\n    `;\r\n    \r\n    // Add to DOM - find chat container (including custom test containers)\r\n    const chatContainer = document.getElementById('chatContainer') ||  // Custom test container\r\n                         document.querySelector('.tlw-messages-container') || \r\n                         document.querySelector('.tlw-chat-container') ||\r\n                         document.querySelector('[data-widget-messages]') ||\r\n                         document.querySelector('.tradr-widget');\r\n    \r\n    console.log('🎯 ThinkingManager: Chat container found:', {\r\n      found: !!chatContainer,\r\n      containerType: chatContainer?.id || chatContainer?.className || 'unknown',\r\n      elementCreated: !!element\r\n    });\r\n    \r\n    if (chatContainer) {\r\n      chatContainer.appendChild(element);\r\n      console.log('🎯 ThinkingManager: Indicator added to DOM');\r\n      \r\n      // Scroll to show indicator\r\n      setTimeout(() => {\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n      }, 100);\r\n    } else {\r\n      console.warn('⚠️ ThinkingManager: No chat container found to add indicator!');\r\n    }\r\n    \r\n    indicator.element = element;\r\n    \r\n    return element;\r\n  }\r\n  \r\n  /**\r\n   * Schedule progressive message updates\r\n   */\r\n  scheduleProgressiveUpdates(indicator) {\r\n    const messages = this.progressiveMessages[indicator.type] || this.progressiveMessages['/chat'];\r\n    \r\n    // Schedule each message update\r\n    Object.entries(messages).forEach(([delay, message]) => {\r\n      const timeoutId = setTimeout(() => {\r\n        if (this.activeIndicators.has(indicator.id)) {\r\n          this.updateMessage(indicator, message);\r\n        }\r\n      }, parseInt(delay));\r\n      \r\n      indicator.timers.push(timeoutId);\r\n    });\r\n    \r\n    // Start timer display after 2 seconds\r\n    const timerTimeout = setTimeout(() => {\r\n      if (this.activeIndicators.has(indicator.id)) {\r\n        this.showTimer(indicator);\r\n      }\r\n    }, 2000);\r\n    \r\n    indicator.timers.push(timerTimeout);\r\n  }\r\n  \r\n  /**\r\n   * Set up timeout handler for the request\r\n   */\r\n  setupTimeoutHandler(indicator) {\r\n    const timeoutId = setTimeout(() => {\r\n      if (this.activeIndicators.has(indicator.id) && !indicator.timedOut) {\r\n        console.warn(`⏰ ThinkingManager: Request ${indicator.id} timed out after ${indicator.timeoutMs}ms`);\r\n        \r\n        indicator.timedOut = true;\r\n        \r\n        // Update message to show timeout\r\n        this.updateMessage(indicator, '❌ Request timed out - Click to retry');\r\n        \r\n        // Add retry button to the indicator element\r\n        if (indicator.element) {\r\n          this.addRetryButton(indicator);\r\n        }\r\n        \r\n        // Call the timeout callback if provided\r\n        if (indicator.onTimeout) {\r\n          indicator.onTimeout(indicator.id);\r\n        }\r\n      }\r\n    }, indicator.timeoutMs);\r\n    \r\n    // Store timeout ID for cleanup\r\n    indicator.timeoutHandler = timeoutId;\r\n    indicator.timers.push(timeoutId);\r\n  }\r\n  \r\n  /**\r\n   * Add retry button to timed out indicator\r\n   */\r\n  addRetryButton(indicator) {\r\n    const retryBtn = document.createElement('button');\r\n    retryBtn.className = 'tlw-thinking-retry-btn';\r\n    retryBtn.innerHTML = '🔄 Retry';\r\n    retryBtn.style.cssText = `\r\n      margin-left: 10px;\r\n      padding: 4px 12px;\r\n      background: #4CAF50;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      font-size: 14px;\r\n    `;\r\n    \r\n    retryBtn.addEventListener('click', () => {\r\n      console.log('🔄 Retry button clicked for:', indicator.id);\r\n      \r\n      // Remove the timeout indicator\r\n      this.stopThinking(indicator.id);\r\n      \r\n      // Trigger retry through callback\r\n      if (indicator.onTimeout) {\r\n        indicator.onTimeout(indicator.id, true); // true = retry requested\r\n      }\r\n    });\r\n    \r\n    // Add button to indicator element\r\n    const messageElement = indicator.element?.querySelector('.tlw-thinking-message');\r\n    if (messageElement) {\r\n      messageElement.appendChild(retryBtn);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update the thinking message with smooth transition\r\n   */\r\n  updateMessage(indicator, newMessage) {\r\n    if (!indicator.element) return;\r\n    \r\n    const messageElement = indicator.element.querySelector('.tlw-thinking-message');\r\n    if (!messageElement) return;\r\n    \r\n    // Fade out\r\n    messageElement.style.opacity = '0.5';\r\n    \r\n    setTimeout(() => {\r\n      messageElement.textContent = newMessage;\r\n      // Fade in\r\n      messageElement.style.opacity = '1';\r\n    }, 200);\r\n  }\r\n  \r\n  /**\r\n   * Show elapsed time timer\r\n   */\r\n  showTimer(indicator) {\r\n    if (!indicator.element) return;\r\n    \r\n    const timerElement = indicator.element.querySelector('.tlw-thinking-timer');\r\n    if (!timerElement) return;\r\n    \r\n    // Don't show timer for chat messages (they have progress bar)\r\n    if (indicator.type === '/chat') return;\r\n    \r\n    timerElement.style.display = 'flex';\r\n    \r\n    const updateTimer = () => {\r\n      if (!this.activeIndicators.has(indicator.id)) return;\r\n      \r\n      const elapsed = Math.floor((Date.now() - indicator.startTime) / 1000);\r\n      const timerText = timerElement.querySelector('.tlw-timer-text');\r\n      \r\n      if (timerText) {\r\n        timerText.textContent = `${elapsed}s`;\r\n      }\r\n      \r\n      // Continue updating if still active\r\n      if (this.activeIndicators.has(indicator.id)) {\r\n        setTimeout(updateTimer, 1000);\r\n      }\r\n    };\r\n    \r\n    updateTimer();\r\n  }\r\n  \r\n  /**\r\n   * Start 30-second progress bar animation\r\n   */\r\n  startProgressBar(indicator) {\r\n    if (!indicator.element) return;\r\n    \r\n    const progressFill = indicator.element.querySelector('.tlw-progress-fill');\r\n    if (!progressFill) return;\r\n    \r\n    // Start the 30-second animation\r\n    progressFill.style.transition = 'width 30s linear';\r\n    progressFill.style.width = '100%';\r\n    \r\n    // After 30 seconds, pulse to indicate still working\r\n    const progressTimer = setTimeout(() => {\r\n      if (this.activeIndicators.has(indicator.id)) {\r\n        progressFill.style.transition = 'opacity 0.5s ease-in-out';\r\n        progressFill.style.animation = 'pulse 1s ease-in-out infinite';\r\n      }\r\n    }, 30000);\r\n    \r\n    // Store timer so it can be cleared\r\n    indicator.timers.push(progressTimer);\r\n  }\r\n  \r\n  /**\r\n   * Get contextual message for operation type\r\n   */\r\n  static getContextualMessage(operationType, stage = 'start') {\r\n    const contextualMessages = {\r\n      'sendMessage': {\r\n        'start': '💭 Sending message...',\r\n        'processing': '🤖 AI is thinking...'\r\n      },\r\n      'generateScenario': {\r\n        'start': '🚀 Initiating scenario generation...',\r\n        'processing': '🔨 Building your trading model...'\r\n      },\r\n      'executeTemplate': {\r\n        'start': '📝 Loading template...',\r\n        'processing': '✨ Generating from template...'\r\n      },\r\n      'runEvaluation': {\r\n        'start': '📊 Starting evaluation...',\r\n        'processing': '📈 Processing market data...'\r\n      },\r\n      'runBacktest': {\r\n        'start': '⏮️ Initializing backtest...',\r\n        'processing': '💰 Calculating performance...'\r\n      }\r\n    };\r\n    \r\n    return contextualMessages[operationType]?.[stage] || '⏳ Processing...';\r\n  }\r\n  \r\n  /**\r\n   * Stop all active thinking indicators\r\n   */\r\n  stopAll() {\r\n    const indicatorIds = Array.from(this.activeIndicators.keys());\r\n    indicatorIds.forEach(id => this.stopThinking(id));\r\n  }\r\n  \r\n  /**\r\n   * Get active indicators count\r\n   */\r\n  getActiveCount() {\r\n    return this.activeIndicators.size;\r\n  }\r\n  \r\n  /**\r\n   * Check if specific indicator is active\r\n   */\r\n  isActive(requestId) {\r\n    return this.activeIndicators.has(requestId);\r\n  }\r\n}\r\n\r\n/**\r\n * CSS styles for thinking indicators (to be injected)\r\n */\r\nexport const thinkingIndicatorStyles = `\r\n  .tlw-thinking-indicator {\r\n    padding: 12px 16px;\r\n    background: linear-gradient(90deg, #f0f9ff 0%, #e0f2fe 100%);\r\n    border-left: 3px solid #0ea5e9;\r\n    border-radius: 8px;\r\n    margin: 8px 0;\r\n    animation: slideIn 0.3s ease-out;\r\n    transition: all 0.3s ease;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .tlw-thinking-content {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .tlw-thinking-animation {\r\n    display: flex;\r\n    gap: 4px;\r\n    align-items: center;\r\n  }\r\n  \r\n  .tlw-thinking-dot {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #0ea5e9;\r\n    border-radius: 50%;\r\n    animation: bounce 1.4s ease-in-out infinite;\r\n  }\r\n  \r\n  .tlw-thinking-dot:nth-child(1) { animation-delay: -0.32s; }\r\n  .tlw-thinking-dot:nth-child(2) { animation-delay: -0.16s; }\r\n  .tlw-thinking-dot:nth-child(3) { animation-delay: 0s; }\r\n  \r\n  .tlw-thinking-message {\r\n    color: #0c4a6e;\r\n    font-weight: 500;\r\n    transition: opacity 0.2s ease;\r\n    flex: 1;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  .tlw-thinking-timer {\r\n    display: none;\r\n    align-items: center;\r\n    padding: 2px 8px;\r\n    background: rgba(14, 165, 233, 0.1);\r\n    border-radius: 12px;\r\n    margin-left: auto;\r\n  }\r\n  \r\n  .tlw-timer-text {\r\n    color: #0369a1;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    font-family: 'SF Mono', 'Monaco', 'Inconsolata', monospace;\r\n  }\r\n  \r\n  @keyframes bounce {\r\n    0%, 80%, 100% {\r\n      transform: scale(0);\r\n      opacity: 0.5;\r\n    }\r\n    40% {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  @keyframes slideIn {\r\n    from {\r\n      transform: translateY(-10px);\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      transform: translateY(0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n  \r\n  /* Different colors for different operation types */\r\n  .tlw-thinking-indicator[data-type=\"/query\"] {\r\n    background: linear-gradient(90deg, #f0fdf4 0%, #dcfce7 100%);\r\n    border-left-color: #22c55e;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"/query\"] .tlw-thinking-dot {\r\n    background: #22c55e;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"/evaluate\"] {\r\n    background: linear-gradient(90deg, #fefce8 0%, #fef3c7 100%);\r\n    border-left-color: #eab308;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"/evaluate\"] .tlw-thinking-dot {\r\n    background: #eab308;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"template\"] {\r\n    background: linear-gradient(90deg, #fdf4ff 0%, #fae8ff 100%);\r\n    border-left-color: #a855f7;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"template\"] .tlw-thinking-dot {\r\n    background: #a855f7;\r\n  }\r\n  \r\n  /* Progress bar for chat messages */\r\n  .tlw-progress-bar {\r\n    width: 100%;\r\n    height: 3px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n    border-radius: 3px;\r\n    margin-top: 8px;\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n  \r\n  .tlw-thinking-indicator[data-type=\"/chat\"] .tlw-progress-bar {\r\n    display: block;\r\n  }\r\n  \r\n  .tlw-thinking-indicator:not([data-type=\"/chat\"]) .tlw-progress-bar {\r\n    display: none;\r\n  }\r\n  \r\n  .tlw-progress-fill {\r\n    height: 100%;\r\n    width: 0%;\r\n    background: linear-gradient(90deg, #0ea5e9 0%, #0284c7 100%);\r\n    border-radius: 3px;\r\n    box-shadow: 0 0 8px rgba(14, 165, 233, 0.5);\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .tlw-progress-fill::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: linear-gradient(\r\n      90deg,\r\n      transparent,\r\n      rgba(255, 255, 255, 0.3),\r\n      transparent\r\n    );\r\n    animation: shimmer 2s linear infinite;\r\n  }\r\n  \r\n  @keyframes shimmer {\r\n    0% { transform: translateX(-100%); }\r\n    100% { transform: translateX(100%); }\r\n  }\r\n  \r\n  @keyframes pulse {\r\n    0%, 100% { opacity: 1; }\r\n    50% { opacity: 0.6; }\r\n  }\r\n`;","/**\r\n * Widget AI Flow Parser\r\n * Adapts the aiFlowParser logic from the main app to work in the widget context\r\n * Builds proper Nodes/Edges with data connections from AI DAG blocks\r\n */\r\n\r\nexport class WidgetAiFlowParser {\r\n  constructor() {\r\n    this.nodeWidth = 400;\r\n    this.nodeHeight = 400;\r\n    this.flowDirection = 'LR';\r\n  }\r\n\r\n  /**\r\n   * Parse AI DAG blocks into Nodes/Edges format with proper data connections\r\n   * This replicates the critical logic from web-client aiFlowParser.js\r\n   * \r\n   * @param {Array} dagBlocks - The functions_list from AI response\r\n   * @param {Array} blockDefinitions - The function definitions (from blocks API)\r\n   * @param {Object} options - Additional options like scenarioId\r\n   * @returns {Object} - { nodes, edges } suitable for backend ScenarioTreeBuilder\r\n   */\r\n  parseAiDag(dagBlocks, blockDefinitions, options = {}) {\r\n    console.log('WidgetAiFlowParser: Parsing DAG blocks', {\r\n      blockCount: dagBlocks?.length || 0,\r\n      definitionCount: blockDefinitions?.length || 0\r\n    });\r\n\r\n    if (!dagBlocks || !Array.isArray(dagBlocks) || dagBlocks.length === 0) {\r\n      throw new Error('Invalid or empty DAG blocks');\r\n    }\r\n\r\n    // Create a map of function definitions for quick lookup\r\n    const functionsMap = this.createFunctionsMap(blockDefinitions);\r\n    \r\n    // Process nodes and build edges\r\n    const nodes = [];\r\n    const edges = [];\r\n    \r\n    // First pass: create all nodes\r\n    dagBlocks.forEach((aiBlock, index) => {\r\n      const node = this.createNode(aiBlock, functionsMap);\r\n      nodes.push(node);\r\n    });\r\n    \r\n    // Second pass: create edges based on data connections\r\n    dagBlocks.forEach((aiBlock, index) => {\r\n      const blockEdges = this.buildDataConnectionEdges(aiBlock, dagBlocks, functionsMap, nodes);\r\n      edges.push(...blockEdges);\r\n    });\r\n\r\n    console.log('WidgetAiFlowParser: Parsed result', {\r\n      nodeCount: nodes.length,\r\n      edgeCount: edges.length,\r\n      hasDataConnections: edges.length > 0\r\n    });\r\n\r\n    return {\r\n      nodes,\r\n      edges,\r\n      scenarioId: options.scenarioId,\r\n      version: options.version || 1.0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a map of function definitions for quick lookup\r\n   */\r\n  createFunctionsMap(blockDefinitions) {\r\n    const map = {};\r\n    \r\n    if (blockDefinitions && Array.isArray(blockDefinitions)) {\r\n      blockDefinitions.forEach(def => {\r\n        if (def.name) {\r\n          map[def.name] = def;\r\n        }\r\n        // Also map by function_name if different\r\n        if (def.function_name && def.function_name !== def.name) {\r\n          map[def.function_name] = def;\r\n        }\r\n      });\r\n    }\r\n    \r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Create a node from AI block with proper inputs/outputs\r\n   */\r\n  createNode(aiBlock, functionsMap) {\r\n    const fnDef = functionsMap[aiBlock.function_name] || functionsMap[aiBlock.function];\r\n    \r\n    // Extract formatted inputs and outputs from function definition AND AI block data\r\n    const formattedInputs = this.extractInputs(fnDef, aiBlock);\r\n    const formattedOutputs = this.extractOutputs(fnDef, aiBlock);\r\n    const formattedOptions = this.extractOptions(fnDef, aiBlock);\r\n    \r\n    // Build node data structure (EXACTLY like working AiFlowParser)\r\n    const candleOptions = [\r\n      { value: 'bearish', label: 'Bearish' },\r\n      { value: 'bullish', label: 'Bullish' }\r\n    ];\r\n\r\n    const priceOptions = [\r\n      { value: 'open', label: 'Open' },\r\n      { value: 'high', label: 'High' },\r\n      { value: 'low', label: 'Low' },\r\n      { value: 'close', label: 'Close' }\r\n    ];\r\n\r\n    const nodeData = {\r\n      mainType: \"function\",\r\n      type: \"function\",\r\n      group: fnDef.grouping,\r\n      name: fnDef.name,\r\n      description: fnDef.description,\r\n      inputs: formattedInputs,\r\n      outputs: formattedOutputs,\r\n      options: formattedOptions,\r\n      blockId: fnDef.bid_,\r\n      candleOptions: candleOptions,\r\n      priceOptions: priceOptions,\r\n      values: this.extractValues(aiBlock, fnDef),\r\n      version: fnDef.version_\r\n    };\r\n\r\n    // Create the node with position (simplified since widget doesn't visualize)\r\n    return {\r\n      id: `node${aiBlock.BlockID}`,\r\n      type: 'customNode',\r\n      data: nodeData,\r\n      position: { x: 0, y: 0 }, // Position will be handled by backend if needed\r\n      targetPosition: 'left',\r\n      sourcePosition: 'right'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Extract inputs from function definition (EXACTLY like working AiFlowParser)\r\n   */\r\n  extractInputs(fnDef, aiBlock) {\r\n    const inputs = [];\r\n    \r\n    // Match working AiFlowParser logic exactly (lines 53-61)\r\n    if (fnDef?.inputs?.properties) {\r\n      for (const inputName in fnDef.inputs.properties) {\r\n        if (fnDef.inputs.properties.hasOwnProperty(inputName)) {\r\n          inputs.push({ name: inputName });\r\n        }\r\n      }\r\n    }\r\n    \r\n    console.log(`WidgetAiFlowParser: Block ${aiBlock.BlockID} inputs`, {\r\n      fromFnDef: fnDef?.inputs ? Object.keys(fnDef.inputs.properties || {}) : [],\r\n      finalInputs: inputs.map(i => i.name)\r\n    });\r\n    \r\n    return inputs;\r\n  }\r\n\r\n  /**\r\n   * Extract outputs from function definition and AI block\r\n   */\r\n  extractOutputs(fnDef, aiBlock) {\r\n    const outputs = [];\r\n    \r\n    // First try to use outputs from AI block if provided\r\n    if (aiBlock.outputs && Array.isArray(aiBlock.outputs)) {\r\n      aiBlock.outputs.forEach(output => {\r\n        if (output) {\r\n          outputs.push({ name: output });\r\n        }\r\n      });\r\n    }\r\n    // Fallback to function definition\r\n    else if (fnDef?.outputs?.properties) {\r\n      for (const outputName in fnDef.outputs.properties) {\r\n        outputs.push({ name: outputName });\r\n      }\r\n    }\r\n    \r\n    return outputs;\r\n  }\r\n\r\n  /**\r\n   * Extract options/parameters from function definition\r\n   */\r\n  extractOptions(fnDef, aiBlock) {\r\n    const options = [];\r\n    \r\n    if (fnDef?.parameters?.properties) {\r\n      for (const paramName in fnDef.parameters.properties) {\r\n        const param = fnDef.parameters.properties[paramName];\r\n        const value = aiBlock.parameters?.[paramName] || param.default;\r\n        \r\n        let fieldType = 'input';\r\n        let optionValues = [];\r\n        \r\n        if (param.enum) {\r\n          fieldType = 'select';\r\n          optionValues = param.enum.map(val => ({ value: val, label: val }));\r\n        }\r\n        \r\n        options.push({\r\n          field: paramName,\r\n          value: fieldType === 'select' ? value : value,\r\n          type: fieldType,\r\n          enumOutputs: optionValues.map(o => o.value),\r\n          isValid: true\r\n        });\r\n      }\r\n    }\r\n    \r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * Extract parameter values from AI block\r\n   */\r\n  extractValues(aiBlock, fnDef) {\r\n    const values = [];\r\n    \r\n    if (aiBlock.parameters) {\r\n      for (const paramName in aiBlock.parameters) {\r\n        values.push({\r\n          field: paramName,\r\n          value: aiBlock.parameters[paramName]\r\n        });\r\n      }\r\n    }\r\n    \r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Build edges from data connections - THE CRITICAL LOGIC\r\n   * This replicates lines 147-168 from aiFlowParser.js\r\n   */\r\n  buildDataConnectionEdges(aiBlock, allBlocks, functionsMap, nodes) {\r\n    const edges = [];\r\n    \r\n    console.log(`WidgetAiFlowParser: Building edges for Block ${aiBlock.BlockID}`, {\r\n      hasData: !!aiBlock.data,\r\n      dataKeys: aiBlock.data ? Object.keys(aiBlock.data) : [],\r\n      dataValues: aiBlock.data || {}\r\n    });\r\n    \r\n    // This is the key part - process the data connections\r\n    if (aiBlock.data) {\r\n      for (const dataProp in aiBlock.data) {\r\n        const dataValue = aiBlock.data[dataProp];\r\n        \r\n        if (!dataValue) continue;\r\n        \r\n        // EXACT LOGIC from working AiFlowParser (lines 149-164)\r\n        const sourceLinkValues = dataValue.toString().split('.');\r\n        \r\n        if (sourceLinkValues.length > 1) {\r\n          const sourceId = sourceLinkValues[0].replace('Block_', '');\r\n          const sourceBlock = allBlocks.find(d => d.BlockID == sourceId);\r\n          \r\n          if (sourceBlock) {\r\n            // Find target node from created nodes \r\n            const targetNode = nodes.find(node => node.id === `node${aiBlock.BlockID}`);\r\n            if (!targetNode) {\r\n              console.warn(`WidgetAiFlowParser: Target node not found for BlockID ${aiBlock.BlockID}`);\r\n              continue;\r\n            }\r\n            \r\n            // EXACT logic from working version\r\n            const sourceOutputIndex = sourceBlock.outputs.indexOf(sourceLinkValues[1]);\r\n            const targetInputIndex = targetNode.data.inputs.indexOf(targetNode.data.inputs.find(f => f.name == dataProp));\r\n            \r\n            if (sourceOutputIndex >= 0 && targetInputIndex >= 0) {\r\n              const edge = {\r\n                id: `reactflow__edge-node${sourceId}node${sourceId}-output-${sourceOutputIndex}-node${aiBlock.BlockID}node${aiBlock.BlockID}-input-${targetInputIndex}`,\r\n                source: `node${sourceId}`,\r\n                target: `node${aiBlock.BlockID}`,\r\n                sourceHandle: `node${sourceId}-output-${sourceOutputIndex < 0 ? 0 : sourceOutputIndex}`,\r\n                targetHandle: `node${aiBlock.BlockID}-input-${targetInputIndex < 0 ? 0 : targetInputIndex}`\r\n              };\r\n              \r\n              edges.push(edge);\r\n              \r\n              console.log('WidgetAiFlowParser: Created data connection edge', {\r\n                from: `Block_${sourceId}.${sourceLinkValues[1]}`,\r\n                to: `Block_${aiBlock.BlockID}.${dataProp}`,\r\n                edge: edge.id,\r\n                sourceHandle: edge.sourceHandle,\r\n                targetHandle: edge.targetHandle\r\n              });\r\n            } else {\r\n              console.warn('WidgetAiFlowParser: Invalid indices for edge creation', {\r\n                sourceOutputIndex,\r\n                targetInputIndex,\r\n                sourceOutputName: sourceLinkValues[1],\r\n                targetFieldName: dataProp,\r\n                dataValue,\r\n                sourceBlockOutputs: sourceBlock.outputs,\r\n                targetInputs: targetNode.data.inputs.map(i => i.name)\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // REMOVED: Hierarchy edges with null handles cause NullReferenceException in ScenarioTreeBuilder.cs:260\r\n    // The backend only needs data connection edges with proper sourceHandle/targetHandle\r\n    // Execution order is determined by the data connections, not hierarchy relationships\r\n    \r\n    return edges;\r\n  }\r\n\r\n  /**\r\n   * Transform parsed nodes/edges to match backend ScenarioDto format\r\n   */\r\n  transformToScenarioDto(parsedData, options = {}) {\r\n    const { nodes, edges } = parsedData;\r\n    \r\n    return {\r\n      Id: options.scenarioId,\r\n      Name: options.name || `Widget Scenario ${options.scenarioId}`,\r\n      UserId: options.userId,\r\n      IsFromAiGenerator: true,\r\n      Nodes: nodes,\r\n      Edges: edges,\r\n      Viewport: { X: 0, Y: 0, Zoom: 1 },\r\n      CrossFilters: {},\r\n      Version: parsedData.version || 1.0,\r\n      IsActive: true,\r\n      ManuallyUpdated: false,\r\n      IsFromEditor: false,\r\n      GeneratingAiFlow: false\r\n    };\r\n  }\r\n}","/**\r\n * DAG Processor\r\n * Processes Model messages without visualization and triggers evaluation\r\n */\r\n\r\nimport { WidgetAiFlowParser } from './widget-ai-flow-parser.js';\r\n\r\nexport class DagProcessor {\r\n  constructor(messageStore, apiClient, thinkingManager, configManager = null) {\r\n    this.messageStore = messageStore;\r\n    this.apiClient = apiClient;\r\n    this.thinkingManager = thinkingManager;\r\n    this.configManager = configManager;\r\n    this.aiFlowParser = new WidgetAiFlowParser();\r\n  }\r\n  \r\n  /**\r\n   * Process a Model message (DAG generation result)\r\n   * This replaces the need for ReactFlow/AiFlow in the widget\r\n   */\r\n  async processModelMessage(message) {\r\n    console.log('DagProcessor: Processing Model message', {\r\n      scenarioId: message.scenarioId,\r\n      dagRequestId: message.dagRequestId,\r\n      hasResponse: !!message.aiResponse\r\n    });\r\n    \r\n    try {\r\n      // Parse DAG data from AI response\r\n      const dagData = this.parseDagData(message.aiResponse);\r\n      \r\n      if (!dagData || !dagData.functions_list) {\r\n        throw new Error('Invalid DAG data received');\r\n      }\r\n      \r\n      // Extract meaningful information from DAG\r\n      const dagMetadata = this.extractDagMetadata(dagData, message);\r\n      \r\n      // Store DAG metadata (creates user-friendly summary message)\r\n      this.messageStore.storeDagMetadata(dagMetadata);\r\n      \r\n      console.log('DagProcessor: DAG metadata stored', dagMetadata);\r\n      \r\n      // Update scenario in store\r\n      if (message.scenarioId) {\r\n        this.messageStore.addScenario(message.scenarioId, {\r\n          status: 'model_generated',\r\n          dagRequestId: message.dagRequestId,\r\n          dagMetadata: dagMetadata,\r\n          modelGeneratedAt: Date.now()\r\n        });\r\n      }\r\n      \r\n      // Automatically trigger evaluation (the key magic!)\r\n      await this.triggerEvaluation(message.scenarioId, message.dagRequestId, dagData);\r\n      \r\n    } catch (error) {\r\n      console.error('DagProcessor: Failed to process Model message', error);\r\n      \r\n      // Add error message to chat\r\n      this.messageStore.addMessage({\r\n        id: `dag-error-${Date.now()}`,\r\n        type: 'system',\r\n        messageType: 'Error',\r\n        content: `❌ **Model Processing Failed**\\n\\n${error.message}\\n\\nPlease try generating the scenario again.`,\r\n        timestamp: Date.now(),\r\n        scenarioId: message.scenarioId\r\n      });\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Parse DAG data from AI response\r\n   */\r\n  parseDagData(aiResponse) {\r\n    if (!aiResponse) {\r\n      throw new Error('No AI response data');\r\n    }\r\n    \r\n    // Handle both string and object responses\r\n    if (typeof aiResponse === 'string') {\r\n      try {\r\n        return JSON.parse(aiResponse);\r\n      } catch (e) {\r\n        throw new Error('Invalid JSON in AI response');\r\n      }\r\n    }\r\n    \r\n    if (typeof aiResponse === 'object') {\r\n      return aiResponse;\r\n    }\r\n    \r\n    throw new Error('Unexpected AI response format');\r\n  }\r\n  \r\n  /**\r\n   * Extract meaningful metadata from DAG data\r\n   */\r\n  extractDagMetadata(dagData, message) {\r\n    const functionsList = dagData.functions_list || [];\r\n    \r\n    const metadata = {\r\n      scenarioId: message.scenarioId,\r\n      dagRequestId: message.dagRequestId,\r\n      nodeCount: functionsList.length,\r\n      indicators: [],\r\n      conditions: [],\r\n      triggers: [],\r\n      others: [],\r\n      timestamp: Date.now(),\r\n      blocksDescription: dagData.blocks_description,\r\n      subDags: dagData.sub_dags,\r\n      metaDag: dagData.metadag || dagData.Metadag\r\n    };\r\n    \r\n    // Categorize DAG nodes by type\r\n    functionsList.forEach(node => {\r\n      const category = this.categorizeNode(node);\r\n      const description = this.getNodeDescription(node);\r\n      \r\n      switch(category) {\r\n        case 'indicator':\r\n          metadata.indicators.push(description);\r\n          break;\r\n        case 'condition':\r\n          metadata.conditions.push(description);\r\n          break;\r\n        case 'trigger':\r\n          metadata.triggers.push(description);\r\n          break;\r\n        default:\r\n          metadata.others.push(description);\r\n      }\r\n    });\r\n    \r\n    return metadata;\r\n  }\r\n  \r\n  /**\r\n   * Categorize DAG node by function type\r\n   */\r\n  categorizeNode(node) {\r\n    if (!node.function_name) return 'other';\r\n    \r\n    const funcName = node.function_name.toLowerCase();\r\n    \r\n    // Technical indicators\r\n    if (funcName.includes('sma') || funcName.includes('ema') || \r\n        funcName.includes('rsi') || funcName.includes('macd') ||\r\n        funcName.includes('bollinger') || funcName.includes('stochastic') ||\r\n        funcName.includes('atr') || funcName.includes('adx')) {\r\n      return 'indicator';\r\n    }\r\n    \r\n    // Conditions and comparisons\r\n    if (funcName.includes('condition') || funcName.includes('compare') ||\r\n        funcName.includes('threshold') || funcName.includes('cross') ||\r\n        funcName.includes('above') || funcName.includes('below')) {\r\n      return 'condition';\r\n    }\r\n    \r\n    // Entry/Exit triggers\r\n    if (funcName.includes('entry') || funcName.includes('exit') ||\r\n        funcName.includes('buy') || funcName.includes('sell') ||\r\n        funcName.includes('trigger')) {\r\n      return 'trigger';\r\n    }\r\n    \r\n    return 'other';\r\n  }\r\n  \r\n  /**\r\n   * Get human-readable description of DAG node\r\n   */\r\n  getNodeDescription(node) {\r\n    if (node.display_name) {\r\n      return node.display_name;\r\n    }\r\n    \r\n    if (node.function_name) {\r\n      // Convert function name to readable format\r\n      return node.function_name\r\n        .replace(/_/g, ' ')\r\n        .replace(/([A-Z])/g, ' $1')\r\n        .toLowerCase()\r\n        .replace(/^\\w/, c => c.toUpperCase());\r\n    }\r\n    \r\n    return 'Unknown Component';\r\n  }\r\n  \r\n  /**\r\n   * Automatically trigger evaluation after DAG generation\r\n   * Uses the widget's dedicated /api/widget/execute endpoint\r\n   */\r\n  async triggerEvaluation(scenarioId, dagRequestId, dagData) {\r\n    console.log('DagProcessor: Triggering automatic evaluation using widget execute endpoint', {\r\n      scenarioId,\r\n      dagRequestId\r\n    });\r\n    \r\n    // Start thinking indicator for evaluation with timeout handling\r\n    const evaluationRequestId = `eval-${scenarioId}`;\r\n    console.log('🎯 DagProcessor: Starting execution thinking indicator with timeout', { evaluationRequestId });\r\n    \r\n    // Define timeout handler\r\n    const handleTimeout = (requestId, shouldRetry) => {\r\n      console.warn(`⏰ DagProcessor: Execution request ${requestId} timed out`);\r\n      \r\n      // Add timeout error message\r\n      this.messageStore.addMessage({\r\n        id: `timeout-${Date.now()}`,\r\n        type: 'system',\r\n        messageType: 'ExecutionError',\r\n        content: `❌ **Execution Request Timed Out**\\n\\nThe AI engine did not respond within the expected time.\\n\\n${shouldRetry ? 'Retrying...' : 'Click the retry button to try again.'}`,\r\n        timestamp: Date.now(),\r\n        scenarioId: scenarioId\r\n      });\r\n      \r\n      // If retry was requested, trigger retry\r\n      if (shouldRetry) {\r\n        console.log('🔄 DagProcessor: Retrying execution after timeout');\r\n        setTimeout(() => {\r\n          this.triggerEvaluation(scenarioId, `retry-${dagRequestId}`, dagData);\r\n        }, 1000);\r\n      }\r\n    };\r\n    \r\n    // Start thinking with 60 second timeout\r\n    this.thinkingManager.startThinking(evaluationRequestId, '/execute', null, handleTimeout, 60000);\r\n    \r\n    try {\r\n      // Get evaluation parameters from config or use defaults\r\n      const evaluationParams = this.getEvaluationParameters();\r\n      console.log('DagProcessor: Using evaluation parameters:', {\r\n        symbol: evaluationParams.symbol,\r\n        timeframe: evaluationParams.timeframe,\r\n        lookbackDays: Math.round((new Date(evaluationParams.toDate) - new Date(evaluationParams.fromDate)) / (1000 * 60 * 60 * 24))\r\n      });\r\n      \r\n      // Extract DAG blocks for execution - use the functions_list from the AI response\r\n      const dagBlocks = dagData.functions_list || [];\r\n      \r\n      if (!dagBlocks || dagBlocks.length === 0) {\r\n        throw new Error('No DAG blocks found for execution');\r\n      }\r\n      \r\n      // Load block definitions if not already loaded\r\n      let blockDefinitions = this.configManager?.get('blocksData')?.blockDefinitions;\r\n      if (!blockDefinitions) {\r\n        console.log('DagProcessor: Loading block definitions for parsing');\r\n        const blocksData = await this.apiClient.loadBlocksData();\r\n        if (!blocksData.blockDefinitions) {\r\n          throw new Error(`Critical: No block definitions received from API. Got: ${JSON.stringify(blocksData)}`);\r\n        }\r\n        blockDefinitions = blocksData.blockDefinitions;\r\n      }\r\n      \r\n      // Parse DAG blocks into Nodes/Edges with proper data connections\r\n      console.log('DagProcessor: Parsing DAG blocks to Nodes/Edges format');\r\n      const parsedData = this.aiFlowParser.parseAiDag(dagBlocks, blockDefinitions, {\r\n        scenarioId: scenarioId,\r\n        version: 1.0\r\n      });\r\n      \r\n      // Transform to ScenarioDto format for backend\r\n      const scenarioDto = this.aiFlowParser.transformToScenarioDto(parsedData, {\r\n        scenarioId: scenarioId,\r\n        userId: this.configManager?.get('userId'),\r\n        name: `Widget Scenario ${scenarioId}`\r\n      });\r\n      \r\n      console.log('DagProcessor: Calling widget execute endpoint with parsed Nodes/Edges', {\r\n        endpoint: '/api/widget/execute',\r\n        scenarioId,\r\n        symbol: evaluationParams.symbol,\r\n        intervalMinutes: this.parseTimeframeToMinutes(evaluationParams.timeframe),\r\n        nodeCount: parsedData.nodes.length,\r\n        edgeCount: parsedData.edges.length\r\n      });\r\n      \r\n      // Call the widget execution endpoint with ScenarioDto instead of raw blocks\r\n      const response = await this.apiClient.executeWidget(scenarioDto, {\r\n        scenarioId: scenarioId,\r\n        symbol: evaluationParams.symbol,\r\n        intervalInMinutes: this.parseTimeframeToMinutes(evaluationParams.timeframe)\r\n      });\r\n      \r\n      console.log('DagProcessor: Widget execution completed', {\r\n        scenarioId,\r\n        success: !!response\r\n      });\r\n      \r\n      // Store detailed scenario data for enhanced chat payloads\r\n      this.storeScenarioExecutionData(scenarioDto, evaluationParams);\r\n      \r\n      // Update milestone to evaluating\r\n      this.messageStore.updateMilestone('evaluate');\r\n      \r\n      // Stop thinking indicator and process results\r\n      console.log('🎯 DagProcessor: Stopping execution thinking indicator', { evaluationRequestId });\r\n      this.thinkingManager.stopThinking(evaluationRequestId);\r\n      \r\n      // Process the evaluation results immediately\r\n      this.handleEvaluationComplete({\r\n        scenarioId: scenarioId,\r\n        results: response,\r\n        requestId: evaluationRequestId\r\n      });\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('DagProcessor: Widget execution failed', error);\r\n      \r\n      // Stop thinking indicator\r\n      this.thinkingManager.stopThinking(evaluationRequestId);\r\n      \r\n      // Add error message\r\n      this.messageStore.addMessage({\r\n        id: `eval-error-${Date.now()}`,\r\n        type: 'system',\r\n        messageType: 'Error',\r\n        content: `❌ **Evaluation Failed**\\n\\n${error.message}\\n\\nThe model was created successfully, but execution could not start.`,\r\n        timestamp: Date.now(),\r\n        scenarioId: scenarioId\r\n      });\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Store detailed scenario execution data for enhanced chat payloads\r\n   */\r\n  storeScenarioExecutionData(scenarioDto, evaluationParams) {\r\n    if (!this.configManager) {\r\n      console.warn('DagProcessor: No config manager available to store scenario data');\r\n      return;\r\n    }\r\n    \r\n    console.log('DagProcessor: Storing detailed scenario execution data');\r\n    \r\n    // Store the complete scenario data structure\r\n    this.configManager.set('scenarioData', scenarioDto);\r\n    \r\n    // Store evaluation parameters\r\n    this.configManager.set('defaultSymbol', evaluationParams.symbol);\r\n    this.configManager.set('defaultTimeframe', evaluationParams.timeframe);\r\n    \r\n    // Store schedule information (for scenarioRequest context)\r\n    this.configManager.set('weekDays', [1, 2, 3, 4, 5, 6, 7]);\r\n    this.configManager.set('months', [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\r\n    this.configManager.set('fromTime', evaluationParams.fromTime || \"08:00\");\r\n    this.configManager.set('toTime', evaluationParams.toTime || \"20:00\");\r\n    this.configManager.set('timeZone', \"Europe/London\"); // Default timezone\r\n    \r\n    // Store exchange information (from AAQ payload structure)\r\n    this.configManager.set('exchange', \"DUKASCOPY\");\r\n    \r\n    console.log('DagProcessor: Scenario execution context stored for enhanced payloads');\r\n  }\r\n  \r\n  /**\r\n   * Get stored DAG data for a scenario (for retry functionality)\r\n   */\r\n  getStoredDagData(scenarioId) {\r\n    if (!this.configManager) {\r\n      console.warn('DagProcessor: No config manager available to retrieve DAG data');\r\n      return null;\r\n    }\r\n    \r\n    const scenarioData = this.configManager.get('scenarioData');\r\n    if (!scenarioData || scenarioData.scenarioId !== scenarioId) {\r\n      console.warn('DagProcessor: No stored DAG data found for scenario:', scenarioId);\r\n      return null;\r\n    }\r\n    \r\n    console.log('DagProcessor: Retrieved stored DAG data for retry:', scenarioId);\r\n    return scenarioData;\r\n  }\r\n  \r\n  /**\r\n   * Parse timeframe string to minutes (e.g., \"1H\" -> 60, \"5M\" -> 5)\r\n   */\r\n  parseTimeframeToMinutes(timeframe) {\r\n    if (!timeframe || typeof timeframe !== 'string') {\r\n      return 60; // Default to 1 hour\r\n    }\r\n    \r\n    const timeframeUpper = timeframe.toUpperCase();\r\n    \r\n    if (timeframeUpper.endsWith('M')) {\r\n      return parseInt(timeframeUpper.slice(0, -1)) || 5;\r\n    } else if (timeframeUpper.endsWith('H')) {\r\n      return (parseInt(timeframeUpper.slice(0, -1)) || 1) * 60;\r\n    } else if (timeframeUpper.endsWith('D')) {\r\n      return (parseInt(timeframeUpper.slice(0, -1)) || 1) * 1440;\r\n    }\r\n    \r\n    // Try to parse as pure number (assume minutes)\r\n    const minutes = parseInt(timeframe);\r\n    return isNaN(minutes) ? 60 : minutes;\r\n  }\r\n\r\n  /**\r\n   * Get evaluation parameters from configuration\r\n   */\r\n  getEvaluationParameters() {\r\n    // These could come from widget configuration or user preferences\r\n    const lookbackDays = this.getConfigValue('defaultLookbackDays', 365); // Default to 1 year of data\r\n    \r\n    // Calculate date range\r\n    const toDate = new Date();\r\n    const fromDate = new Date();\r\n    fromDate.setDate(toDate.getDate() - lookbackDays);\r\n    \r\n    return {\r\n      symbol: this.getConfigValue('defaultSymbol', 'EURUSD'),\r\n      timeframe: this.getConfigValue('defaultTimeframe', '1H'),\r\n      fromDate: fromDate.toISOString().split('T')[0], // YYYY-MM-DD format\r\n      toDate: toDate.toISOString().split('T')[0], // YYYY-MM-DD format\r\n      initialCapital: this.getConfigValue('defaultInitialCapital', 10000),\r\n      riskPercentage: this.getConfigValue('defaultRiskPercentage', 2.0),\r\n      commission: this.getConfigValue('defaultCommission', 0.0001)\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Get configuration value with fallback\r\n   */\r\n  getConfigValue(key, defaultValue) {\r\n    // Try to get from config manager if available\r\n    if (this.configManager && typeof this.configManager.get === 'function') {\r\n      const value = this.configManager.get(key);\r\n      if (value !== undefined && value !== null) {\r\n        return value;\r\n      }\r\n    }\r\n    \r\n    // Fallback to defaults\r\n    const defaults = {\r\n      'defaultSymbol': 'EURUSD',\r\n      'defaultTimeframe': '1H',\r\n      'defaultLookbackDays': 365,\r\n      'defaultInitialCapital': 10000,\r\n      'defaultRiskPercentage': 2.0,\r\n      'defaultCommission': 0.0001,\r\n      'externalUserId': 'widget-user-default'\r\n    };\r\n    \r\n    return defaults[key] || defaultValue;\r\n  }\r\n  \r\n  /**\r\n   * Get SignalR socket ID for correlation\r\n   */\r\n  getSocketId() {\r\n    // This would come from the SignalR client\r\n    // For now, generate a placeholder\r\n    return `socket-${Date.now()}`;\r\n  }\r\n  \r\n  /**\r\n   * Handle evaluation response (called when evaluation completes)\r\n   */\r\n  handleEvaluationComplete(evaluationData) {\r\n    console.log('DagProcessor: Evaluation completed', evaluationData);\r\n    \r\n    const { scenarioId, results, requestId } = evaluationData;\r\n    \r\n    // Stop thinking indicator\r\n    if (requestId) {\r\n      this.thinkingManager.stopThinking(requestId);\r\n    } else {\r\n      this.thinkingManager.stopThinking(`eval-${scenarioId}`);\r\n    }\r\n    \r\n    // Update milestone\r\n    this.messageStore.updateMilestone('analyze');\r\n    \r\n    // Since AllData=false, backend only returns rows where Results=TRUE\r\n    // So the total number of returned records IS the count of true occurrences\r\n    const occurrences = results.totalRecords;\r\n    \r\n    console.log('🔍 DagProcessor: TRUE occurrences count (using totalRecords since AllData=false)', {\r\n      totalRecords: results.totalRecords,\r\n      trueOccurrences: occurrences,\r\n      hasData: !!results.data,\r\n      dataLength: results.data ? results.data.length : 0\r\n    });\r\n    \r\n    const executionMessage = `Execution has run. We found **${occurrences}** true occurrences of your model.`;\r\n    \r\n    this.messageStore.addMessage({\r\n      id: `exec-complete-${Date.now()}`,\r\n      type: 'system',\r\n      messageType: 'ExecutionComplete',\r\n      content: executionMessage,\r\n      timestamp: Date.now(),\r\n      scenarioId: scenarioId,\r\n      metadata: {\r\n        occurrences: occurrences,\r\n        results: results\r\n      }\r\n    });\r\n    \r\n    // Add analysis guidance message with occurrences count\r\n    let analysisMessage;\r\n    if (occurrences > 0) {\r\n      analysisMessage = `📊 **Analysis Details**\\n\\n💡 You can now:\\n• Ask questions about the results\\n• Analyze specific patterns\\n• Review the trading signals`;\r\n    } else {\r\n      analysisMessage = `⚠️ **No Occurrences Found**\\n\\n💡 This could mean:\\n• The market conditions weren't met\\n• You might want to adjust parameters\\n• Try a different time period`;\r\n    }\r\n    \r\n    this.messageStore.addMessage({\r\n      id: `eval-complete-${Date.now()}`,\r\n      type: 'system',\r\n      messageType: 'EvaluationComplete',\r\n      content: analysisMessage,\r\n      timestamp: Date.now(),\r\n      scenarioId: scenarioId,\r\n      metadata: {\r\n        occurrences: occurrences,\r\n        results: results,\r\n        evaluationRequestId: requestId\r\n      }\r\n    });\r\n    \r\n    // Update scenario status\r\n    this.messageStore.addScenario(scenarioId, {\r\n      status: 'evaluated',\r\n      evaluationResults: results,\r\n      evaluatedAt: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Format evaluation results for display (handles main app response structure)\r\n   */\r\n  \r\n  /**\r\n   * Handle evaluation error\r\n   */\r\n  handleEvaluationError(errorData) {\r\n    console.error('DagProcessor: Evaluation error', errorData);\r\n    \r\n    const { scenarioId, error, requestId } = errorData;\r\n    \r\n    // Stop thinking indicator\r\n    if (requestId) {\r\n      this.thinkingManager.stopThinking(requestId);\r\n    } else {\r\n      this.thinkingManager.stopThinking(`eval-${scenarioId}`);\r\n    }\r\n    \r\n    // Add error message\r\n    this.messageStore.addMessage({\r\n      id: `eval-error-${Date.now()}`,\r\n      type: 'system',\r\n      messageType: 'Error',\r\n      content: `❌ **Evaluation Failed**\\n\\n${error}\\n\\nThe model was created successfully, but evaluation encountered an error. You can try asking questions or running a backtest manually.`,\r\n      timestamp: Date.now(),\r\n      scenarioId: scenarioId\r\n    });\r\n  }\r\n}","/**\r\n * Action Manager\r\n * Manages available actions and button visibility based on conversation state\r\n */\r\n\r\nexport class ActionManager {\r\n  constructor(messageStore, apiClient, thinkingManager) {\r\n    this.messageStore = messageStore;\r\n    this.apiClient = apiClient;\r\n    this.thinkingManager = thinkingManager;\r\n    this.listeners = [];\r\n    this.pendingRequests = new Map(); // Track pending DAG generation requests\r\n  }\r\n  \r\n  /**\r\n   * Get all currently available actions based on message history and state\r\n   */\r\n  getAvailableActions() {\r\n    const actions = [];\r\n    const currentActions = this.messageStore.getCurrentAvailableActions();\r\n    const milestoneStatus = this.messageStore.getMilestoneStatus();\r\n    \r\n    // Generate Scenario button\r\n    if (currentActions.showGenerateButton) {\r\n      actions.push({\r\n        id: 'generate-scenario',\r\n        label: '🚀 Generate Scenario',\r\n        description: 'Build your trading model',\r\n        action: () => this.handleGenerateScenario(),\r\n        primary: true,\r\n        visible: true,\r\n        disabled: false\r\n      });\r\n    }\r\n    \r\n    // Redraw button (for existing scenarios)\r\n    if (currentActions.showRedrawButton) {\r\n      actions.push({\r\n        id: 'redraw-scenario',\r\n        label: '🔄 Redraw Scenario',\r\n        description: 'Regenerate with same prompt',\r\n        action: () => this.handleRedrawScenario(),\r\n        primary: false,\r\n        visible: true,\r\n        disabled: false\r\n      });\r\n    }\r\n    \r\n    // Run Backtest button (after evaluation)\r\n    if (currentActions.showBacktestButton) {\r\n      actions.push({\r\n        id: 'run-backtest',\r\n        label: '📊 Run Backtest',\r\n        description: 'Test strategy performance',\r\n        action: () => this.handleRunBacktest(),\r\n        primary: true,\r\n        visible: true,\r\n        disabled: false\r\n      });\r\n    }\r\n    \r\n    // Analysis options (after evaluation)\r\n    if (currentActions.enableAnalysis) {\r\n      actions.push({\r\n        id: 'ask-question',\r\n        label: '💭 Ask Question',\r\n        description: 'Analyze your results',\r\n        action: () => this.handleAskQuestion(),\r\n        primary: false,\r\n        visible: true,\r\n        disabled: false\r\n      });\r\n    }\r\n    \r\n    \r\n    return actions;\r\n  }\r\n  \r\n  /**\r\n   * Handle Generate Scenario action\r\n   * Pass the message object directly like the original app\r\n   */\r\n  async handleGenerateScenario(message) {\r\n    console.log('ActionManager: Generating scenario');\r\n    \r\n    if (!message) {\r\n      throw new Error('ActionManager: No message provided for scenario generation');\r\n    }\r\n    \r\n    // Start thinking indicator for model creation with timeout handling\r\n    const requestId = `query-${Date.now()}`;\r\n    console.log('🎯 ActionManager: Starting thinking indicator for query with timeout', { requestId });\r\n    \r\n    // Define timeout handler for DAG generation\r\n    const handleDagTimeout = (reqId, shouldRetry) => {\r\n      console.warn(`⏰ ActionManager: DAG generation request ${reqId} timed out`);\r\n      \r\n      // Add timeout error message\r\n      this.messageStore.addMessage({\r\n        id: `dag-timeout-${Date.now()}`,\r\n        type: 'system',\r\n        messageType: 'Error',\r\n        content: `❌ **Model Generation Timed Out**\\n\\nThe AI engine did not respond within the expected time.\\n\\n${shouldRetry ? 'Retrying...' : 'Please try generating the model again or simplify your request.'}`,\r\n        timestamp: Date.now()\r\n      });\r\n      \r\n      // If retry was requested, trigger retry\r\n      if (shouldRetry) {\r\n        console.log('🔄 ActionManager: Retrying DAG generation after timeout');\r\n        setTimeout(() => {\r\n          this.handleGenerateScenario();\r\n        }, 1000);\r\n      }\r\n    };\r\n    \r\n    // Start thinking with 90 second timeout (DAG generation can take longer)\r\n    this.thinkingManager.startThinking(requestId, '/query', null, handleDagTimeout, 90000);\r\n    \r\n    try {\r\n      // Extract content from message exactly like original app does\r\n      // Original app uses message.message which contains the raw aiResponse\r\n      let prompt = message.aiResponse || message.message || message.content;\r\n      \r\n      if (!prompt || !prompt.trim()) {\r\n        throw new Error('ActionManager: Message has no content for scenario generation');\r\n      }\r\n      \r\n      // NO CLEANING - send raw content exactly like original app\r\n      console.log('ActionManager: Using raw message content for DAG generation:', prompt.substring(0, 100) + '...');\r\n      \r\n      // Call the generateScenario method exactly like original app\r\n      // Use the current session ID from previous AI responses (like original app)\r\n      const sessionId = this.messageStore.getCurrentSessionId();\r\n      \r\n      // CRITICAL: Let apiClient handle ScenarioId - it MUST exist from previous chat\r\n      // This ensures GetScenarioLastSessionId() can find the saved messages\r\n      try {\r\n        const response = await this.apiClient.generateScenario({\r\n          conversationContext: prompt,\r\n          // No scenarioId passed - apiClient will use stored one or throw error\r\n          sessionId: sessionId, // Use conversation session ID for context continuity\r\n          socketId: this.getSocketId()\r\n        });\r\n        \r\n        console.log('ActionManager: Scenario generation initiated', {\r\n          requestId: response.requestId,\r\n          scenarioId: response.scenarioId\r\n        });\r\n        \r\n        return response;\r\n        \r\n      } catch (error) {\r\n        this.thinkingManager.stopThinking(requestId);\r\n        \r\n        // Provide user-friendly error message\r\n        if (error.message.includes('ScenarioId is required')) {\r\n          throw new Error('Please send at least one chat message before generating a scenario. The system needs conversation context to create your trading model.');\r\n        } else if (error.message.includes('SessionId')) {\r\n          throw new Error('Please wait for the previous message to complete before generating a scenario.');\r\n        } else {\r\n          throw error; // Re-throw other errors as-is\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('ActionManager: Generate scenario failed', error);\r\n      this.thinkingManager.stopThinking(requestId);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle Redraw Scenario action\r\n   */\r\n  async handleRedrawScenario() {\r\n    console.log('ActionManager: Redrawing scenario');\r\n    \r\n    const lastRelevantMessage = this.messageStore.getLastRelevantMessage();\r\n    if (!lastRelevantMessage?.userDagRequestId) {\r\n      throw new Error('No DAG request ID found for redraw');\r\n    }\r\n    \r\n    try {\r\n      const requestId = `redraw-${Date.now()}`;\r\n      this.thinkingManager.startThinking(requestId, '/query');\r\n      \r\n      const response = await this.apiClient.get(\r\n        `/api/widget/dag/redraw/${lastRelevantMessage.userDagRequestId}/${this.getSocketId()}/${lastRelevantMessage.scenarioId}`\r\n      );\r\n      \r\n      console.log('ActionManager: Scenario redraw initiated', response);\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('ActionManager: Redraw scenario failed', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle Run Backtest action\r\n   */\r\n  async handleRunBacktest() {\r\n    console.log('ActionManager: Running backtest');\r\n    \r\n    const currentScenario = this.getCurrentScenario();\r\n    if (!currentScenario) {\r\n      throw new Error('No active scenario for backtest');\r\n    }\r\n    \r\n    try {\r\n      const requestId = `backtest-${Date.now()}`;\r\n      this.thinkingManager.startThinking(requestId, 'backtest', '📊 Starting backtest...');\r\n      \r\n      const response = await this.apiClient.post('/api/widget/backtest', {\r\n        scenarioId: currentScenario.id,\r\n        externalUserId: this.getExternalUserId(),\r\n        socketId: this.getSocketId()\r\n      });\r\n      \r\n      console.log('ActionManager: Backtest initiated', response);\r\n      \r\n      // Update milestone\r\n      this.messageStore.updateMilestone('backtest');\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('ActionManager: Backtest failed', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle Ask Question action (opens analysis input)\r\n   */\r\n  handleAskQuestion() {\r\n    console.log('ActionManager: Opening analysis question input');\r\n    \r\n    // This could trigger a modal or inline input\r\n    // For now, we'll emit an event that the UI can listen to\r\n    this.notifyListeners('action:ask-question', {\r\n      scenario: this.getCurrentScenario()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Send analysis question\r\n   */\r\n  async sendAnalysisQuestion(question) {\r\n    console.log('ActionManager: Sending analysis question', question);\r\n    \r\n    const currentScenario = this.getCurrentScenario();\r\n    if (!currentScenario) {\r\n      throw new Error('No active scenario for analysis');\r\n    }\r\n    \r\n    try {\r\n      const requestId = `analysis-${Date.now()}`;\r\n      this.thinkingManager.startThinking(requestId, 'analysis');\r\n      \r\n      // SessionId MUST come from current conversation for context continuity\r\n      const sessionId = this.messageStore.getCurrentSessionId();\r\n      if (!sessionId) {\r\n        throw new Error('ActionManager: No SessionId available for analysis - requires previous chat messages');\r\n      }\r\n      \r\n      const response = await this.apiClient.post('/api/widget/analysis', {\r\n        scenarioId: currentScenario.id,\r\n        question: question,\r\n        externalUserId: this.getExternalUserId(),\r\n        sessionId: sessionId,\r\n        socketId: this.getSocketId()\r\n      });\r\n      \r\n      console.log('ActionManager: Analysis question sent', response);\r\n      \r\n      return response;\r\n      \r\n    } catch (error) {\r\n      console.error('ActionManager: Analysis question failed', error);\r\n      this.thinkingManager.stopThinking(requestId);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Get current active scenario\r\n   */\r\n  getCurrentScenario() {\r\n    const scenarios = Array.from(this.messageStore.scenarios.values());\r\n    return scenarios.find(s => s.id === this.messageStore.activeScenarioId) || \r\n           scenarios[scenarios.length - 1]; // Most recent\r\n  }\r\n  \r\n  /**\r\n   * Generate unique ID\r\n   */\r\n  generateId() {\r\n    // Generate MongoDB ObjectId-compatible 24-character hex string\r\n    const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\r\n    const randomHex = Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('');\r\n    return timestamp + randomHex;\r\n  }\r\n  \r\n  /**\r\n   * Get external user ID from config\r\n   */\r\n  getExternalUserId() {\r\n    // This would come from widget configuration\r\n    return 'widget-user-' + Date.now();\r\n  }\r\n  \r\n  /**\r\n   * Get SignalR socket ID\r\n   */\r\n  getSocketId() {\r\n    // This would come from SignalR client\r\n    return 'socket-' + Date.now();\r\n  }\r\n  \r\n  // REMOVED: getScenarioId() method - no fallbacks, ApiClient handles ScenarioId consistency\r\n  \r\n  /**\r\n   * Add event listener\r\n   */\r\n  on(event, callback) {\r\n    this.listeners.push({ event, callback });\r\n  }\r\n  \r\n  /**\r\n   * Notify listeners of events\r\n   */\r\n  notifyListeners(event, data) {\r\n    this.listeners\r\n      .filter(listener => listener.event === event)\r\n      .forEach(listener => listener.callback(data));\r\n  }\r\n  \r\n  /**\r\n   * Check if any actions are currently disabled (waiting for responses)\r\n   */\r\n  areActionsDisabled() {\r\n    return this.thinkingManager.getActiveCount() > 0;\r\n  }\r\n  \r\n  /**\r\n   * Get action by ID\r\n   */\r\n  getAction(actionId) {\r\n    return this.getAvailableActions().find(action => action.id === actionId);\r\n  }\r\n  \r\n  /**\r\n   * Execute action by ID\r\n   */\r\n  async executeAction(actionId, ...args) {\r\n    const action = this.getAction(actionId);\r\n    \r\n    if (!action) {\r\n      throw new Error(`Action ${actionId} not found`);\r\n    }\r\n    \r\n    if (action.disabled) {\r\n      throw new Error(`Action ${actionId} is disabled`);\r\n    }\r\n    \r\n    return await action.action(...args);\r\n  }\r\n}","/**\n * Chat Container\n * Main chat interface component\n */\n\nexport class ChatContainer {\n  constructor(targetElement, configManager, messageStore, apiClient, signalRClient) {\n    this.element = targetElement;\n    this.config = configManager;\n    this.messageStore = messageStore;\n    this.apiClient = apiClient;\n    this.signalRClient = signalRClient;\n    \n    // Debug logging for messageStore\n    console.log('ChatContainer constructor:', {\n      messageStore: messageStore,\n      messageStoreType: typeof messageStore,\n      hasSubscribe: messageStore && typeof messageStore.subscribe === 'function',\n      messageStoreKeys: messageStore ? Object.getOwnPropertyNames(messageStore) : 'null'\n    });\n    \n    this.messagesContainer = null;\n    this.inputContainer = null;\n    this.inputField = null;\n    this.sendButton = null;\n    \n    this.unsubscribe = null;\n  }\n  \n  /**\n   * Render the chat container\n   */\n  render() {\n    console.log('ChatContainer: render() called, target element:', this.element);\n    \n    // Create HTML structure\n    this.element.innerHTML = `\n      <div class=\"tradr-widget-container\">\n        <div class=\"tradr-widget-header\">\n          <h3>TradrLab Assistant</h3>\n          ${this.config.get('enableFontSizeControl') ? `\n            <div class=\"tradr-widget-controls\">\n              <button class=\"tradr-font-size-btn\" data-action=\"decrease\">A-</button>\n              <button class=\"tradr-font-size-btn\" data-action=\"increase\">A+</button>\n            </div>\n          ` : ''}\n        </div>\n        \n        <div class=\"tradr-widget-messages\" id=\"messages-container\">\n          <!-- Messages will be rendered here -->\n        </div>\n        \n        <div class=\"tradr-widget-input\">\n          ${this.config.get('allowImageUpload') ? `\n            <button class=\"tradr-attach-btn\" title=\"Attach image\">\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\"/>\n              </svg>\n              <input type=\"file\" accept=\"image/*\" style=\"display: none;\" />\n            </button>\n          ` : ''}\n          \n          <textarea \n            class=\"tradr-widget-input-field\" \n            placeholder=\"${this.config.get('placeholder')}\"\n            rows=\"1\"\n          ></textarea>\n          \n          <button class=\"tradr-send-btn\" title=\"Send message\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n              <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\n            </svg>\n          </button>\n        </div>\n      </div>\n    `;\n    \n    // Get references to elements\n    console.log('ChatContainer: Looking for #messages-container in:', this.element);\n    this.messagesContainer = this.element.querySelector('#messages-container');\n    console.log('ChatContainer: Found messagesContainer:', this.messagesContainer);\n    \n    // FORCE VISIBILITY OF ENTIRE CHAT CONTAINER\n    this.element.style.cssText = 'display: block !important; visibility: visible !important; position: relative !important; width: 100% !important; height: 400px !important; background: pink !important; border: 5px solid green !important;';\n    \n    if (this.messagesContainer) {\n      this.messagesContainer.style.cssText = 'display: block !important; visibility: visible !important; height: 300px !important; background: lightblue !important; border: 3px solid purple !important; overflow-y: auto !important;';\n    }\n    \n    this.inputField = this.element.querySelector('.tradr-widget-input-field');\n    this.sendButton = this.element.querySelector('.tradr-send-btn');\n    \n    // Set up event listeners\n    this.setupEventListeners();\n    \n    // Subscribe to message store updates\n    if (this.messageStore && typeof this.messageStore.subscribe === 'function') {\n      this.unsubscribe = this.messageStore.subscribe((update) => {\n        this.handleStoreUpdate(update);\n      });\n    } else {\n      console.error('ChatContainer: messageStore is null or does not have subscribe method', {\n        messageStore: this.messageStore,\n        messageStoreType: typeof this.messageStore,\n        messageStoreConstructor: this.messageStore?.constructor?.name\n      });\n    }\n    \n    // Render initial messages\n    this.renderMessages();\n  }\n  \n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // Send button click\n    this.sendButton.addEventListener('click', () => this.sendMessage());\n    \n    // Enter key in input field\n    this.inputField.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n    \n    // Auto-resize textarea\n    this.inputField.addEventListener('input', () => {\n      this.autoResizeInput();\n    });\n    \n    // Image upload\n    if (this.config.get('allowImageUpload')) {\n      const fileInput = this.element.querySelector('input[type=\"file\"]');\n      const attachBtn = this.element.querySelector('.tradr-attach-btn');\n      \n      attachBtn.addEventListener('click', () => fileInput.click());\n      fileInput.addEventListener('change', (e) => this.handleImageUpload(e));\n    }\n    \n    // Image paste\n    if (this.config.get('allowImagePaste')) {\n      this.inputField.addEventListener('paste', (e) => this.handlePaste(e));\n    }\n    \n    // Font size controls\n    if (this.config.get('enableFontSizeControl')) {\n      this.element.querySelectorAll('.tradr-font-size-btn').forEach(btn => {\n        btn.addEventListener('click', (e) => {\n          const action = e.currentTarget.dataset.action;\n          this.adjustFontSize(action);\n        });\n      });\n    }\n    \n    // Message action buttons (retry, ask question, etc.)\n    this.messagesContainer.addEventListener('click', (e) => {\n      const button = e.target.closest('[data-action]');\n      if (button) {\n        const action = button.dataset.action;\n        const scenarioId = button.dataset.scenarioId;\n        this.handleMessageAction(action, scenarioId, button);\n      }\n    });\n  }\n  \n  /**\n   * Handle store updates\n   */\n  handleStoreUpdate(update) {\n    console.log('ChatContainer: Store update received:', {\n      action: update.action,\n      messageType: update.data?.messageType || update.data?.type,\n      content: update.data?.content?.substring(0, 50) + '...'\n    });\n    \n    switch (update.action) {\n      case 'add':\n      case 'message:add':\n        this.addMessageToUI(update.data);\n        break;\n      case 'update':\n      case 'message:update':\n        this.updateMessageInUI(update.data);\n        break;\n      case 'remove':\n      case 'message:remove':\n        this.removeMessageFromUI(update.data.id);\n        break;\n      case 'clear':\n      case 'store:clear':\n        this.clearMessages();\n        break;\n    }\n  }\n  \n  /**\n   * Handle message action button clicks\n   */\n  async handleMessageAction(action, scenarioId, button) {\n    console.log('ChatContainer: Handling message action:', { action, scenarioId });\n    \n    try {\n      // Disable button during action\n      button.disabled = true;\n      const originalText = button.textContent;\n      button.textContent = 'Processing...';\n      \n      switch (action) {\n        case 'retry-execution':\n          await this.handleRetryExecution(scenarioId);\n          break;\n        case 'ask-question':\n          this.handleAskQuestion(scenarioId);\n          break;\n        case 'retry':\n          // Generic retry action\n          await this.handleGenericRetry();\n          break;\n        default:\n          console.warn('Unknown message action:', action);\n      }\n      \n      // Re-enable button\n      button.disabled = false;\n      button.textContent = originalText;\n      \n    } catch (error) {\n      console.error('Message action failed:', error);\n      \n      // Re-enable button and show error\n      button.disabled = false;\n      button.textContent = originalText;\n      \n      this.showActionError(action, error);\n    }\n  }\n  \n  /**\n   * Handle retry execution action\n   */\n  async handleRetryExecution(scenarioId) {\n    console.log('ChatContainer: Retrying execution for scenario:', scenarioId);\n    \n    // Get the enhanced chat widget to trigger re-execution\n    const widget = this.element.closest('.tradr-widget')?.widgetInstance;\n    if (widget && widget.retryExecution) {\n      await widget.retryExecution(scenarioId);\n    } else {\n      throw new Error('Widget instance not found or retry method not available');\n    }\n  }\n  \n  /**\n   * Handle ask question action\n   */\n  handleAskQuestion(scenarioId) {\n    console.log('ChatContainer: Opening question input for scenario:', scenarioId);\n    \n    // Get the enhanced chat widget to show analysis input\n    const widget = this.element.closest('.tradr-widget')?.widgetInstance;\n    if (widget && widget.showAnalysisInput) {\n      widget.showAnalysisInput({ id: scenarioId });\n    } else {\n      console.warn('Widget instance not found or showAnalysisInput method not available');\n    }\n  }\n  \n  /**\n   * Handle generic retry action\n   */\n  async handleGenericRetry() {\n    console.log('ChatContainer: Generic retry action triggered');\n    // For generic retry, you might want to retry the last failed operation\n    // Implementation depends on what should be retried\n    throw new Error('Generic retry not implemented yet');\n  }\n  \n  /**\n   * Show error when action fails\n   */\n  showActionError(action, error) {\n    // Add error message to chat\n    this.messageStore.addMessage({\n      id: `action-error-${Date.now()}`,\n      type: 'error',\n      messageType: 'Error',\n      content: `❌ **${action} Failed**\\n\\n${error.message}\\n\\nPlease try again or contact support.`,\n      timestamp: Date.now()\n    });\n  }\n  \n  /**\n   * Render all messages\n   */\n  renderMessages() {\n    const messages = this.messageStore.getMessages();\n    this.messagesContainer.innerHTML = '';\n    \n    messages.forEach(message => {\n      this.addMessageToUI(message, false);\n    });\n    \n    this.scrollToBottom();\n  }\n  \n  /**\n   * Add message to UI - SIMPLIFIED\n   */\n  addMessageToUI(message, shouldScroll = true) {\n    console.log('ChatContainer: Adding SIMPLE message:', message.content);\n    console.log('ChatContainer: messagesContainer is:', this.messagesContainer);\n    console.log('ChatContainer: messagesContainer parent:', this.messagesContainer?.parentElement);\n    console.log('ChatContainer: messagesContainer is visible:', this.messagesContainer?.offsetParent !== null);\n    \n    // Create the simplest possible element\n    const messageEl = document.createElement('div');\n    messageEl.style.cssText = 'border: 3px solid red; padding: 20px; margin: 10px; background: yellow; color: black; font-size: 16px; width: 100%;';\n    messageEl.textContent = `${message.type}: ${message.content}`;\n    \n    console.log('ChatContainer: Appending simple element to:', this.messagesContainer);\n    this.messagesContainer.appendChild(messageEl);\n    \n    console.log('ChatContainer: Container now has children:', this.messagesContainer.children.length);\n    console.log('ChatContainer: Last child is:', this.messagesContainer.lastElementChild);\n  }\n  \n  /**\n   * Render message content (with markdown support in future)\n   */\n  renderMessageContent(message) {\n    // For now, just escape HTML\n    // TODO: Add markdown rendering\n    return this.escapeHtml(message.content || '');\n  }\n  \n  /**\n   * Update message in UI\n   */\n  updateMessageInUI(message) {\n    const messageEl = this.messagesContainer.querySelector(`[data-message-id=\"${message.id}\"]`);\n    if (messageEl) {\n      // Re-render the message\n      // This is simplified - would need to maintain type-specific rendering\n      messageEl.querySelector('.tradr-message-bubble').innerHTML = this.renderMessageContent(message);\n    }\n  }\n  \n  /**\n   * Remove message from UI\n   */\n  removeMessageFromUI(messageId) {\n    const messageEl = this.messagesContainer.querySelector(`[data-message-id=\"${messageId}\"]`);\n    if (messageEl) {\n      messageEl.remove();\n    }\n  }\n  \n  /**\n   * Clear all messages\n   */\n  clearMessages() {\n    this.messagesContainer.innerHTML = '';\n  }\n  \n  /**\n   * Send message\n   */\n  async sendMessage() {\n    const content = this.inputField.value.trim();\n    \n    if (!content) {\n      return;\n    }\n    \n    // Clear input\n    this.inputField.value = '';\n    this.autoResizeInput();\n    \n    // Add user message\n    const userMessage = {\n      type: 'user',\n      content\n    };\n    \n    this.messageStore.addMessage(userMessage);\n    \n    // Show loading\n    const loadingMessage = {\n      type: 'loading',\n      content: ''\n    };\n    \n    const loadingId = this.messageStore.addMessage(loadingMessage).id;\n    \n    try {\n      // Send to API\n      const response = await this.apiClient.sendMessage(content);\n      \n      // Remove loading\n      this.messageStore.removeMessage(loadingId);\n      \n      // Add response\n      if (response && response.length > 0) {\n        response.forEach(msg => {\n          this.messageStore.addMessage({\n            type: 'assistant',\n            ...msg\n          });\n        });\n      }\n      \n    } catch (error) {\n      // Remove loading\n      this.messageStore.removeMessage(loadingId);\n      \n      // Show error\n      this.messageStore.addMessage({\n        type: 'error',\n        content: 'Failed to send message. Please try again.'\n      });\n    }\n  }\n  \n  /**\n   * Handle image upload\n   */\n  async handleImageUpload(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    try {\n      const imageData = await this.apiClient.uploadImage(file);\n      \n      // Trigger callback\n      const onImageUploaded = this.config.get('onImageUploaded');\n      if (onImageUploaded) {\n        onImageUploaded(imageData);\n      }\n      \n      // Could add image to message or send immediately\n      // This depends on UX requirements\n      \n    } catch (error) {\n      console.error('Failed to upload image', error);\n    }\n  }\n  \n  /**\n   * Handle paste event\n   */\n  handlePaste(event) {\n    const items = event.clipboardData?.items;\n    if (!items) return;\n    \n    for (const item of items) {\n      if (item.type.indexOf('image') !== -1) {\n        const file = item.getAsFile();\n        if (file) {\n          event.preventDefault();\n          this.handleImageUpload({ target: { files: [file] } });\n        }\n      }\n    }\n  }\n  \n  /**\n   * Auto-resize input field\n   */\n  autoResizeInput() {\n    this.inputField.style.height = 'auto';\n    this.inputField.style.height = Math.min(this.inputField.scrollHeight, 120) + 'px';\n  }\n  \n  /**\n   * Adjust font size\n   */\n  adjustFontSize(action) {\n    const currentSize = parseInt(getComputedStyle(this.messagesContainer).fontSize);\n    const newSize = action === 'increase' ? currentSize + 2 : currentSize - 2;\n    \n    if (newSize >= 12 && newSize <= 24) {\n      this.messagesContainer.style.fontSize = newSize + 'px';\n    }\n  }\n  \n  /**\n   * Scroll to bottom of messages\n   */\n  scrollToBottom() {\n    this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\n  }\n  \n  /**\n   * Escape HTML\n   */\n  escapeHtml(text) {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  }\n  \n  /**\n   * Destroy the container\n   */\n  destroy() {\n    // Unsubscribe from store\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n    \n    // Clear element\n    this.element.innerHTML = '';\n  }\n}","/**\r\n * Landing Page Component\r\n * Entry point for both Interactive and Template journeys\r\n */\r\n\r\nexport class LandingPage {\r\n  constructor(container, options = {}) {\r\n    this.container = container;\r\n    this.options = {\r\n      onSelection: options.onSelection || (() => {}),\r\n      onTemplateRequest: options.onTemplateRequest || (() => {}),\r\n      onWizardRequest: options.onWizardRequest || (() => {}),\r\n      showBranding: options.showBranding !== false,\r\n      ...options\r\n    };\r\n    \r\n    this.isVisible = false;\r\n    this.templates = [];\r\n    \r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the landing page\r\n   */\r\n  init() {\r\n    this.container.innerHTML = this.render();\r\n    this.attachEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Render the landing page HTML\r\n   */\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-landing\" data-testid=\"landing-page\">\r\n        ${this.renderHeader()}\r\n        ${this.renderCards()}\r\n        ${this.renderFooter()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render header section\r\n   */\r\n  renderHeader() {\r\n    return `\r\n      <div class=\"tlw-landing-header\">\r\n        ${this.options.showBranding ? `\r\n          <div class=\"tlw-branding\">\r\n            <span class=\"tlw-logo\">📈</span>\r\n            <h1 class=\"tlw-title\">TradrLab</h1>\r\n          </div>\r\n        ` : ''}\r\n        <h2 class=\"tlw-subtitle\">What would you like to build today?</h2>\r\n        <p class=\"tlw-description\">\r\n          Create and test trading scenarios using AI-powered analysis\r\n        </p>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render journey selection cards\r\n   */\r\n  renderCards() {\r\n    return `\r\n      <div class=\"tlw-cards\">\r\n        ${this.renderCard({\r\n          action: 'help',\r\n          icon: '🤖',\r\n          title: 'Help me get started',\r\n          description: 'AI-guided scenario creation',\r\n          subtitle: 'Interactive journey',\r\n          color: 'blue'\r\n        })}\r\n        \r\n        ${this.renderCard({\r\n          action: 'templates',\r\n          icon: '📋',\r\n          title: 'View Templates',\r\n          description: 'Pre-built trading scenarios',\r\n          subtitle: 'Quick start',\r\n          color: 'green'\r\n        })}\r\n        \r\n        ${this.renderCard({\r\n          action: 'scratch',\r\n          icon: '✨',\r\n          title: 'Build from Scratch',\r\n          description: 'Custom scenario creation',\r\n          subtitle: 'Advanced users',\r\n          color: 'purple'\r\n        })}\r\n        \r\n        ${this.renderCard({\r\n          action: 'wizard',\r\n          icon: '🔧',\r\n          title: 'Scenario Builder',\r\n          description: 'Step-by-step guided creation',\r\n          subtitle: 'Structured approach',\r\n          color: 'orange'\r\n        })}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render individual card\r\n   */\r\n  renderCard({ action, icon, title, description, subtitle, color }) {\r\n    return `\r\n      <div class=\"tlw-card tlw-card--${color}\" data-action=\"${action}\" data-testid=\"card-${action}\">\r\n        <div class=\"tlw-card-icon\">${icon}</div>\r\n        <div class=\"tlw-card-content\">\r\n          <h3 class=\"tlw-card-title\">${title}</h3>\r\n          <p class=\"tlw-card-description\">${description}</p>\r\n          <span class=\"tlw-card-subtitle\">${subtitle}</span>\r\n        </div>\r\n        <div class=\"tlw-card-arrow\">→</div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render footer section\r\n   */\r\n  renderFooter() {\r\n    return `\r\n      <div class=\"tlw-landing-footer\">\r\n        <p class=\"tlw-help-text\">\r\n          Need help? <a href=\"#\" class=\"tlw-help-link\" data-action=\"help-docs\">View documentation</a>\r\n        </p>\r\n        <div class=\"tlw-version\">\r\n          Widget v2.0.0\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Attach event listeners\r\n   */\r\n  attachEventListeners() {\r\n    // Card click handlers\r\n    this.container.querySelectorAll('.tlw-card').forEach(card => {\r\n      card.addEventListener('click', (e) => {\r\n        const action = card.dataset.action;\r\n        this.handleCardClick(action, e);\r\n      });\r\n      \r\n      // Add hover effects\r\n      card.addEventListener('mouseenter', () => {\r\n        card.classList.add('tlw-card--hover');\r\n      });\r\n      \r\n      card.addEventListener('mouseleave', () => {\r\n        card.classList.remove('tlw-card--hover');\r\n      });\r\n    });\r\n    \r\n    // Help link\r\n    const helpLink = this.container.querySelector('.tlw-help-link');\r\n    if (helpLink) {\r\n      helpLink.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.handleHelpRequest();\r\n      });\r\n    }\r\n    \r\n    // Keyboard navigation\r\n    this.container.addEventListener('keydown', (e) => {\r\n      this.handleKeyNavigation(e);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle card click events\r\n   */\r\n  handleCardClick(action, event) {\r\n    // Add click animation\r\n    const card = event.currentTarget;\r\n    card.classList.add('tlw-card--clicked');\r\n    setTimeout(() => card.classList.remove('tlw-card--clicked'), 150);\r\n    \r\n    switch(action) {\r\n      case 'help':\r\n        this.handleHelpSelection();\r\n        break;\r\n        \r\n      case 'templates':\r\n        this.handleTemplatesSelection();\r\n        break;\r\n        \r\n      case 'scratch':\r\n        this.handleScratchSelection();\r\n        break;\r\n        \r\n      case 'wizard':\r\n        this.handleWizardSelection();\r\n        break;\r\n        \r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle \"Help me get started\" selection\r\n   */\r\n  handleHelpSelection() {\r\n    const message = {\r\n      type: 'message',\r\n      content: 'I need help expressing my idea as a testable trading scenario. Can you guide me through the process?',\r\n      journeyType: 'interactive'\r\n    };\r\n    \r\n    this.options.onSelection(message);\r\n    this.hide();\r\n  }\r\n  \r\n  /**\r\n   * Handle \"View Templates\" selection\r\n   */\r\n  handleTemplatesSelection() {\r\n    this.options.onTemplateRequest();\r\n  }\r\n  \r\n  /**\r\n   * Handle \"Build from Scratch\" selection\r\n   */\r\n  handleScratchSelection() {\r\n    const message = {\r\n      type: 'message',\r\n      content: 'I want to build a custom trading scenario from scratch.',\r\n      journeyType: 'interactive'\r\n    };\r\n    \r\n    this.options.onSelection(message);\r\n    this.hide();\r\n  }\r\n  \r\n  /**\r\n   * Handle \"Scenario Builder\" selection\r\n   */\r\n  handleWizardSelection() {\r\n    this.options.onWizardRequest();\r\n  }\r\n  \r\n  /**\r\n   * Handle help documentation request\r\n   */\r\n  handleHelpRequest() {\r\n    const message = {\r\n      type: 'message',\r\n      content: 'Can you explain how to use this trading scenario builder?',\r\n      journeyType: 'interactive'\r\n    };\r\n    \r\n    this.options.onSelection(message);\r\n    this.hide();\r\n  }\r\n  \r\n  /**\r\n   * Handle keyboard navigation\r\n   */\r\n  handleKeyNavigation(event) {\r\n    const cards = Array.from(this.container.querySelectorAll('.tlw-card'));\r\n    const currentFocus = this.container.querySelector('.tlw-card:focus');\r\n    let currentIndex = currentFocus ? cards.indexOf(currentFocus) : -1;\r\n    \r\n    switch(event.key) {\r\n      case 'ArrowRight':\r\n      case 'ArrowDown':\r\n        event.preventDefault();\r\n        currentIndex = (currentIndex + 1) % cards.length;\r\n        cards[currentIndex].focus();\r\n        break;\r\n        \r\n      case 'ArrowLeft':\r\n      case 'ArrowUp':\r\n        event.preventDefault();\r\n        currentIndex = currentIndex <= 0 ? cards.length - 1 : currentIndex - 1;\r\n        cards[currentIndex].focus();\r\n        break;\r\n        \r\n      case 'Enter':\r\n      case ' ':\r\n        if (currentFocus) {\r\n          event.preventDefault();\r\n          currentFocus.click();\r\n        }\r\n        break;\r\n        \r\n      case 'Escape':\r\n        // Allow escape to close if there's a parent handler\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show the landing page\r\n   */\r\n  show() {\r\n    if (!this.isVisible) {\r\n      this.container.style.display = 'block';\r\n      this.container.classList.add('tlw-landing--visible');\r\n      this.isVisible = true;\r\n      \r\n      // Focus first card for keyboard navigation\r\n      const firstCard = this.container.querySelector('.tlw-card');\r\n      if (firstCard) {\r\n        firstCard.setAttribute('tabindex', '0');\r\n        firstCard.focus();\r\n      }\r\n      \r\n      // Animate in\r\n      setTimeout(() => {\r\n        this.container.classList.add('tlw-landing--animated');\r\n      }, 10);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Hide the landing page\r\n   */\r\n  hide() {\r\n    if (this.isVisible) {\r\n      this.container.classList.remove('tlw-landing--visible', 'tlw-landing--animated');\r\n      \r\n      setTimeout(() => {\r\n        this.container.style.display = 'none';\r\n        this.isVisible = false;\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update templates data\r\n   */\r\n  updateTemplates(templates) {\r\n    this.templates = templates || [];\r\n    \r\n    // Update template card if needed\r\n    const templatesCard = this.container.querySelector('[data-action=\"templates\"]');\r\n    if (templatesCard) {\r\n      const description = templatesCard.querySelector('.tlw-card-description');\r\n      if (description) {\r\n        description.textContent = `${this.templates.length} pre-built scenarios available`;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Destroy the landing page\r\n   */\r\n  destroy() {\r\n    if (this.container) {\r\n      this.container.innerHTML = '';\r\n    }\r\n    this.isVisible = false;\r\n    this.templates = [];\r\n  }\r\n  \r\n  /**\r\n   * Check if landing page is visible\r\n   */\r\n  isShown() {\r\n    return this.isVisible;\r\n  }\r\n}\r\n\r\n// CSS styles for the landing page\r\nexport const LANDING_PAGE_STYLES = `\r\n  .tlw-landing {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 2rem 1rem;\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    min-height: 400px;\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n  \r\n  .tlw-landing--visible {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  .tlw-landing--animated .tlw-card {\r\n    animation: tlw-card-enter 0.4s ease forwards;\r\n  }\r\n  \r\n  .tlw-landing-header {\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .tlw-branding {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n    gap: 0.5rem;\r\n  }\r\n  \r\n  .tlw-logo {\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .tlw-title {\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    color: #1a1a1a;\r\n    margin: 0;\r\n  }\r\n  \r\n  .tlw-subtitle {\r\n    font-size: 1.5rem;\r\n    font-weight: 600;\r\n    color: #333;\r\n    margin: 0 0 0.5rem 0;\r\n  }\r\n  \r\n  .tlw-description {\r\n    color: #666;\r\n    font-size: 1rem;\r\n    margin: 0;\r\n  }\r\n  \r\n  .tlw-cards {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n    gap: 1rem;\r\n    width: 100%;\r\n    margin-bottom: 2rem;\r\n  }\r\n  \r\n  .tlw-card {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 1.5rem;\r\n    border-radius: 12px;\r\n    background: #fff;\r\n    border: 2px solid #e5e5e5;\r\n    cursor: pointer;\r\n    transition: all 0.3s ease;\r\n    position: relative;\r\n    opacity: 0;\r\n    transform: translateY(20px);\r\n  }\r\n  \r\n  .tlw-card:hover,\r\n  .tlw-card:focus {\r\n    border-color: #007bff;\r\n    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  .tlw-card--clicked {\r\n    transform: translateY(0) scale(0.98);\r\n  }\r\n  \r\n  .tlw-card--blue:hover {\r\n    border-color: #007bff;\r\n    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);\r\n  }\r\n  \r\n  .tlw-card--green:hover {\r\n    border-color: #28a745;\r\n    box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);\r\n  }\r\n  \r\n  .tlw-card--purple:hover {\r\n    border-color: #6f42c1;\r\n    box-shadow: 0 4px 12px rgba(111, 66, 193, 0.15);\r\n  }\r\n  \r\n  .tlw-card--orange:hover {\r\n    border-color: #fd7e14;\r\n    box-shadow: 0 4px 12px rgba(253, 126, 20, 0.15);\r\n  }\r\n  \r\n  .tlw-card-icon {\r\n    font-size: 2rem;\r\n    margin-right: 1rem;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .tlw-card-content {\r\n    flex: 1;\r\n  }\r\n  \r\n  .tlw-card-title {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n    color: #1a1a1a;\r\n    margin: 0 0 0.5rem 0;\r\n  }\r\n  \r\n  .tlw-card-description {\r\n    color: #666;\r\n    font-size: 0.9rem;\r\n    margin: 0 0 0.25rem 0;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  .tlw-card-subtitle {\r\n    color: #999;\r\n    font-size: 0.8rem;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.5px;\r\n  }\r\n  \r\n  .tlw-card-arrow {\r\n    font-size: 1.2rem;\r\n    color: #999;\r\n    margin-left: 1rem;\r\n    transition: transform 0.3s ease;\r\n  }\r\n  \r\n  .tlw-card:hover .tlw-card-arrow {\r\n    transform: translateX(4px);\r\n    color: #666;\r\n  }\r\n  \r\n  .tlw-landing-footer {\r\n    text-align: center;\r\n    color: #999;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .tlw-help-text {\r\n    margin: 0 0 1rem 0;\r\n  }\r\n  \r\n  .tlw-help-link {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .tlw-help-link:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .tlw-version {\r\n    font-size: 0.8rem;\r\n    color: #bbb;\r\n  }\r\n  \r\n  @keyframes tlw-card-enter {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(20px);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n  \r\n  .tlw-card:nth-child(1) { animation-delay: 0.1s; }\r\n  .tlw-card:nth-child(2) { animation-delay: 0.2s; }\r\n  .tlw-card:nth-child(3) { animation-delay: 0.3s; }\r\n  .tlw-card:nth-child(4) { animation-delay: 0.4s; }\r\n  \r\n  /* Mobile responsiveness */\r\n  @media (max-width: 640px) {\r\n    .tlw-landing {\r\n      padding: 1rem 0.5rem;\r\n    }\r\n    \r\n    .tlw-cards {\r\n      grid-template-columns: 1fr;\r\n      gap: 0.75rem;\r\n    }\r\n    \r\n    .tlw-card {\r\n      padding: 1.25rem;\r\n    }\r\n    \r\n    .tlw-title {\r\n      font-size: 1.5rem;\r\n    }\r\n    \r\n    .tlw-subtitle {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default LandingPage;","/**\r\n * Template Selection Modal\r\n * Shows available trading scenario templates for quick selection\r\n */\r\n\r\nimport { TEMPLATE_CATEGORIES } from '../core/widget-config.js';\r\n\r\nexport class TemplateModal {\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      templates: options.templates || [],\r\n      onSelect: options.onSelect || (() => {}),\r\n      onClose: options.onClose || (() => {}),\r\n      apiClient: options.apiClient,\r\n      showCategories: options.showCategories !== false,\r\n      ...options\r\n    };\r\n    \r\n    this.templates = this.options.templates;\r\n    this.filteredTemplates = [...this.templates];\r\n    this.selectedCategory = 'all';\r\n    this.searchQuery = '';\r\n    this.isVisible = false;\r\n    this.isLoading = false;\r\n    \r\n    this.modal = null;\r\n    this.backdrop = null;\r\n    \r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the modal\r\n   */\r\n  init() {\r\n    this.createModal();\r\n    this.loadTemplates();\r\n  }\r\n  \r\n  /**\r\n   * Create modal DOM structure\r\n   */\r\n  createModal() {\r\n    // Create backdrop\r\n    this.backdrop = document.createElement('div');\r\n    this.backdrop.className = 'tlw-modal-backdrop';\r\n    this.backdrop.addEventListener('click', (e) => {\r\n      if (e.target === this.backdrop) {\r\n        this.hide();\r\n      }\r\n    });\r\n    \r\n    // Create modal\r\n    this.modal = document.createElement('div');\r\n    this.modal.className = 'tlw-template-modal';\r\n    this.modal.innerHTML = this.render();\r\n    \r\n    this.backdrop.appendChild(this.modal);\r\n    document.body.appendChild(this.backdrop);\r\n    \r\n    this.attachEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Render modal HTML\r\n   */\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-modal-header\">\r\n        <h2 class=\"tlw-modal-title\">\r\n          <span class=\"tlw-modal-icon\">📋</span>\r\n          Trading Scenario Templates\r\n        </h2>\r\n        <button class=\"tlw-modal-close\" data-action=\"close\" aria-label=\"Close\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"tlw-modal-body\">\r\n        ${this.renderFilters()}\r\n        ${this.renderTemplateGrid()}\r\n      </div>\r\n      \r\n      <div class=\"tlw-modal-footer\">\r\n        <div class=\"tlw-template-count\">\r\n          <span id=\"template-count\">${this.filteredTemplates.length}</span> templates available\r\n        </div>\r\n        <div class=\"tlw-modal-actions\">\r\n          <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"close\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render filter section\r\n   */\r\n  renderFilters() {\r\n    if (!this.options.showCategories && !this.options.showSearch) {\r\n      return '';\r\n    }\r\n    \r\n    return `\r\n      <div class=\"tlw-filters\">\r\n        ${this.options.showSearch !== false ? `\r\n          <div class=\"tlw-search-box\">\r\n            <input \r\n              type=\"text\" \r\n              class=\"tlw-search-input\" \r\n              placeholder=\"Search templates...\" \r\n              value=\"${this.searchQuery}\"\r\n              data-action=\"search\"\r\n            >\r\n            <span class=\"tlw-search-icon\">🔍</span>\r\n          </div>\r\n        ` : ''}\r\n        \r\n        ${this.options.showCategories ? `\r\n          <div class=\"tlw-category-filters\">\r\n            ${this.renderCategoryFilters()}\r\n          </div>\r\n        ` : ''}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render category filter buttons\r\n   */\r\n  renderCategoryFilters() {\r\n    const categories = ['all', ...this.extractCategories()];\r\n    \r\n    return categories.map(category => `\r\n      <button \r\n        class=\"tlw-category-btn ${this.selectedCategory === category ? 'active' : ''}\"\r\n        data-action=\"filter-category\"\r\n        data-category=\"${category}\"\r\n      >\r\n        ${category === 'all' ? 'All' : category}\r\n        ${category !== 'all' ? `<span class=\"tlw-category-count\">${this.getTemplateCountByCategory(category)}</span>` : ''}\r\n      </button>\r\n    `).join('');\r\n  }\r\n  \r\n  /**\r\n   * Render template grid\r\n   */\r\n  renderTemplateGrid() {\r\n    if (this.isLoading) {\r\n      return `\r\n        <div class=\"tlw-loading-state\">\r\n          <div class=\"tlw-spinner\"></div>\r\n          <p>Loading templates...</p>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    if (this.filteredTemplates.length === 0) {\r\n      return this.renderEmptyState();\r\n    }\r\n    \r\n    return `\r\n      <div class=\"tlw-template-grid\" id=\"template-grid\">\r\n        ${this.filteredTemplates.map(template => this.renderTemplateCard(template)).join('')}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render individual template card\r\n   */\r\n  renderTemplateCard(template) {\r\n    const difficulty = template.difficulty || 'intermediate';\r\n    const category = template.category || 'Custom';\r\n    \r\n    return `\r\n      <div class=\"tlw-template-card\" data-template-id=\"${template.id}\" data-action=\"select-template\">\r\n        <div class=\"tlw-template-header\">\r\n          <h3 class=\"tlw-template-title\">${template.name}</h3>\r\n          <div class=\"tlw-template-badges\">\r\n            <span class=\"tlw-template-category\">${category}</span>\r\n            <span class=\"tlw-template-difficulty tlw-template-difficulty--${difficulty}\">\r\n              ${difficulty}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"tlw-template-content\">\r\n          <p class=\"tlw-template-description\">\r\n            ${template.description || 'No description available'}\r\n          </p>\r\n          \r\n          ${template.parameters ? `\r\n            <div class=\"tlw-template-parameters\">\r\n              <strong>Key Parameters:</strong>\r\n              <ul>\r\n                ${template.parameters.slice(0, 3).map(param => \r\n                  `<li>${param.name}: ${param.description}</li>`\r\n                ).join('')}\r\n                ${template.parameters.length > 3 ? `<li>+${template.parameters.length - 3} more...</li>` : ''}\r\n              </ul>\r\n            </div>\r\n          ` : ''}\r\n          \r\n          ${template.tags && template.tags.length > 0 ? `\r\n            <div class=\"tlw-template-tags\">\r\n              ${template.tags.slice(0, 4).map(tag => `<span class=\"tlw-tag\">${tag}</span>`).join('')}\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n        \r\n        <div class=\"tlw-template-footer\">\r\n          <div class=\"tlw-template-stats\">\r\n            ${template.popularity ? `\r\n              <span class=\"tlw-template-stat\">\r\n                <span class=\"tlw-stat-icon\">⭐</span>\r\n                ${template.popularity}\r\n              </span>\r\n            ` : ''}\r\n            ${template.successRate ? `\r\n              <span class=\"tlw-template-stat\">\r\n                <span class=\"tlw-stat-icon\">📈</span>\r\n                ${template.successRate}% success\r\n              </span>\r\n            ` : ''}\r\n          </div>\r\n          <button class=\"tlw-btn tlw-btn--primary tlw-template-select\" data-template-id=\"${template.id}\">\r\n            Select Template\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render empty state\r\n   */\r\n  renderEmptyState() {\r\n    const message = this.searchQuery \r\n      ? `No templates found matching \"${this.searchQuery}\"`\r\n      : this.selectedCategory !== 'all' \r\n        ? `No templates found in \"${this.selectedCategory}\" category`\r\n        : 'No templates available';\r\n    \r\n    return `\r\n      <div class=\"tlw-empty-state\">\r\n        <div class=\"tlw-empty-icon\">📭</div>\r\n        <h3>No Templates Found</h3>\r\n        <p>${message}</p>\r\n        ${this.searchQuery || this.selectedCategory !== 'all' ? `\r\n          <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"clear-filters\">\r\n            Clear Filters\r\n          </button>\r\n        ` : ''}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Attach event listeners\r\n   */\r\n  attachEventListeners() {\r\n    // Close buttons\r\n    this.modal.querySelectorAll('[data-action=\"close\"]').forEach(btn => {\r\n      btn.addEventListener('click', () => this.hide());\r\n    });\r\n    \r\n    // Search input\r\n    const searchInput = this.modal.querySelector('[data-action=\"search\"]');\r\n    if (searchInput) {\r\n      searchInput.addEventListener('input', (e) => {\r\n        this.handleSearch(e.target.value);\r\n      });\r\n    }\r\n    \r\n    // Category filters\r\n    this.modal.querySelectorAll('[data-action=\"filter-category\"]').forEach(btn => {\r\n      btn.addEventListener('click', (e) => {\r\n        const category = e.target.dataset.category;\r\n        this.handleCategoryFilter(category);\r\n      });\r\n    });\r\n    \r\n    // Template selection\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target.matches('[data-action=\"select-template\"], [data-action=\"select-template\"] *')) {\r\n        const card = e.target.closest('.tlw-template-card');\r\n        if (card) {\r\n          const templateId = card.dataset.templateId;\r\n          this.handleTemplateSelect(templateId);\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Clear filters\r\n    this.modal.addEventListener('click', (e) => {\r\n      if (e.target.matches('[data-action=\"clear-filters\"]')) {\r\n        this.clearFilters();\r\n      }\r\n    });\r\n    \r\n    // Keyboard navigation\r\n    this.modal.addEventListener('keydown', (e) => this.handleKeyNavigation(e));\r\n    \r\n    // Prevent modal from closing when clicking inside\r\n    this.modal.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle search input\r\n   */\r\n  handleSearch(query) {\r\n    this.searchQuery = query.toLowerCase();\r\n    this.filterTemplates();\r\n    this.updateTemplateGrid();\r\n  }\r\n  \r\n  /**\r\n   * Handle category filter\r\n   */\r\n  handleCategoryFilter(category) {\r\n    this.selectedCategory = category;\r\n    \r\n    // Update button states\r\n    this.modal.querySelectorAll('.tlw-category-btn').forEach(btn => {\r\n      btn.classList.toggle('active', btn.dataset.category === category);\r\n    });\r\n    \r\n    this.filterTemplates();\r\n    this.updateTemplateGrid();\r\n  }\r\n  \r\n  /**\r\n   * Handle template selection\r\n   */\r\n  handleTemplateSelect(templateId) {\r\n    const template = this.templates.find(t => t.id === templateId);\r\n    \r\n    if (template) {\r\n      // Add selection animation\r\n      const card = this.modal.querySelector(`[data-template-id=\"${templateId}\"]`);\r\n      if (card) {\r\n        card.classList.add('tlw-template-card--selected');\r\n      }\r\n      \r\n      setTimeout(() => {\r\n        this.options.onSelect(template);\r\n        this.hide();\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Clear all filters\r\n   */\r\n  clearFilters() {\r\n    this.searchQuery = '';\r\n    this.selectedCategory = 'all';\r\n    \r\n    // Reset search input\r\n    const searchInput = this.modal.querySelector('[data-action=\"search\"]');\r\n    if (searchInput) {\r\n      searchInput.value = '';\r\n    }\r\n    \r\n    // Reset category buttons\r\n    this.modal.querySelectorAll('.tlw-category-btn').forEach(btn => {\r\n      btn.classList.toggle('active', btn.dataset.category === 'all');\r\n    });\r\n    \r\n    this.filterTemplates();\r\n    this.updateTemplateGrid();\r\n  }\r\n  \r\n  /**\r\n   * Filter templates based on current filters\r\n   */\r\n  filterTemplates() {\r\n    this.filteredTemplates = this.templates.filter(template => {\r\n      // Category filter\r\n      if (this.selectedCategory !== 'all' && template.category !== this.selectedCategory) {\r\n        return false;\r\n      }\r\n      \r\n      // Search filter\r\n      if (this.searchQuery && !this.matchesSearch(template)) {\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Check if template matches search query\r\n   */\r\n  matchesSearch(template) {\r\n    const searchFields = [\r\n      template.name,\r\n      template.description,\r\n      template.category,\r\n      ...(template.tags || []),\r\n      ...(template.parameters || []).map(p => p.name + ' ' + p.description)\r\n    ].join(' ').toLowerCase();\r\n    \r\n    return searchFields.includes(this.searchQuery);\r\n  }\r\n  \r\n  /**\r\n   * Update template grid display\r\n   */\r\n  updateTemplateGrid() {\r\n    const container = this.modal.querySelector('.tlw-modal-body');\r\n    if (container) {\r\n      // Update the entire body to refresh filters and grid\r\n      container.innerHTML = this.renderFilters() + this.renderTemplateGrid();\r\n      \r\n      // Re-attach event listeners for new elements\r\n      this.attachEventListeners();\r\n    }\r\n    \r\n    // Update count\r\n    const countElement = this.modal.querySelector('#template-count');\r\n    if (countElement) {\r\n      countElement.textContent = this.filteredTemplates.length;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle keyboard navigation\r\n   */\r\n  handleKeyNavigation(e) {\r\n    switch(e.key) {\r\n      case 'Escape':\r\n        this.hide();\r\n        break;\r\n        \r\n      case 'Enter':\r\n        if (e.target.matches('.tlw-template-card')) {\r\n          const templateId = e.target.dataset.templateId;\r\n          this.handleTemplateSelect(templateId);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Extract unique categories from templates\r\n   */\r\n  extractCategories() {\r\n    const categories = new Set(this.templates.map(t => t.category).filter(Boolean));\r\n    return Array.from(categories).sort();\r\n  }\r\n  \r\n  /**\r\n   * Get template count by category\r\n   */\r\n  getTemplateCountByCategory(category) {\r\n    return this.templates.filter(t => t.category === category).length;\r\n  }\r\n  \r\n  /**\r\n   * Load templates from API or use provided templates\r\n   */\r\n  async loadTemplates() {\r\n    if (this.templates.length > 0) {\r\n      this.filterTemplates();\r\n      return;\r\n    }\r\n    \r\n    if (!this.options.apiClient) {\r\n      // Use default templates\r\n      this.templates = this.getDefaultTemplates();\r\n      this.filterTemplates();\r\n      this.updateTemplateGrid();\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      this.isLoading = true;\r\n      this.updateTemplateGrid();\r\n      \r\n      const response = await this.options.apiClient.get('/api/widget/templates');\r\n      this.templates = response || [];\r\n      \r\n      this.filterTemplates();\r\n    } catch (error) {\r\n      console.warn('Failed to load templates from API, using defaults', error);\r\n      this.templates = this.getDefaultTemplates();\r\n      this.filterTemplates();\r\n    } finally {\r\n      this.isLoading = false;\r\n      this.updateTemplateGrid();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get default fallback templates\r\n   */\r\n  getDefaultTemplates() {\r\n    return [\r\n      {\r\n        id: 'breakout-volume',\r\n        name: 'Breakout with Volume',\r\n        description: 'Identify stocks breaking out of consolidation patterns with volume confirmation',\r\n        category: 'Technical Analysis',\r\n        difficulty: 'beginner',\r\n        tags: ['breakout', 'volume', 'momentum'],\r\n        popularity: 4.5,\r\n        successRate: 68,\r\n        parameters: [\r\n          { name: 'Volume Threshold', description: 'Minimum volume increase percentage' },\r\n          { name: 'Breakout Period', description: 'Number of days for pattern analysis' },\r\n          { name: 'Price Change', description: 'Minimum price movement percentage' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'rsi-oversold',\r\n        name: 'RSI Oversold Recovery',\r\n        description: 'Find oversold stocks showing signs of reversal using RSI indicator',\r\n        category: 'Technical Analysis',\r\n        difficulty: 'intermediate',\r\n        tags: ['RSI', 'oversold', 'reversal'],\r\n        popularity: 4.2,\r\n        successRate: 72,\r\n        parameters: [\r\n          { name: 'RSI Threshold', description: 'Oversold RSI level (typically 30)' },\r\n          { name: 'Recovery Confirmation', description: 'RSI bounce back requirement' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'gap-up-follow-through',\r\n        name: 'Gap Up Follow-Through',\r\n        description: 'Stocks gapping up with strong follow-through momentum',\r\n        category: 'Price Action',\r\n        difficulty: 'intermediate',\r\n        tags: ['gap', 'momentum', 'follow-through'],\r\n        popularity: 3.8,\r\n        successRate: 65,\r\n        parameters: [\r\n          { name: 'Gap Size', description: 'Minimum gap percentage' },\r\n          { name: 'Volume Confirmation', description: 'Required volume increase' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'earnings-surprise',\r\n        name: 'Earnings Surprise Momentum',\r\n        description: 'Companies beating earnings expectations with price momentum',\r\n        category: 'Market Structure',\r\n        difficulty: 'advanced',\r\n        tags: ['earnings', 'surprise', 'fundamental'],\r\n        popularity: 4.0,\r\n        successRate: 75,\r\n        parameters: [\r\n          { name: 'Surprise Threshold', description: 'Minimum earnings beat percentage' },\r\n          { name: 'Price Response', description: 'Required price movement post-earnings' }\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * Show the modal\r\n   */\r\n  show() {\r\n    if (!this.isVisible) {\r\n      this.backdrop.style.display = 'flex';\r\n      document.body.classList.add('tlw-modal-open');\r\n      \r\n      // Animate in\r\n      setTimeout(() => {\r\n        this.backdrop.classList.add('tlw-modal-backdrop--visible');\r\n        this.modal.classList.add('tlw-template-modal--visible');\r\n      }, 10);\r\n      \r\n      this.isVisible = true;\r\n      \r\n      // Focus first template or search input\r\n      setTimeout(() => {\r\n        const searchInput = this.modal.querySelector('[data-action=\"search\"]');\r\n        const firstTemplate = this.modal.querySelector('.tlw-template-card');\r\n        \r\n        if (searchInput) {\r\n          searchInput.focus();\r\n        } else if (firstTemplate) {\r\n          firstTemplate.focus();\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Hide the modal\r\n   */\r\n  hide() {\r\n    if (this.isVisible) {\r\n      this.backdrop.classList.remove('tlw-modal-backdrop--visible');\r\n      this.modal.classList.remove('tlw-template-modal--visible');\r\n      \r\n      setTimeout(() => {\r\n        this.backdrop.style.display = 'none';\r\n        document.body.classList.remove('tlw-modal-open');\r\n        this.isVisible = false;\r\n        \r\n        this.options.onClose();\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update templates\r\n   */\r\n  updateTemplates(templates) {\r\n    this.templates = templates || [];\r\n    this.filterTemplates();\r\n    this.updateTemplateGrid();\r\n  }\r\n  \r\n  /**\r\n   * Destroy the modal\r\n   */\r\n  destroy() {\r\n    if (this.backdrop && this.backdrop.parentNode) {\r\n      this.backdrop.parentNode.removeChild(this.backdrop);\r\n    }\r\n    \r\n    document.body.classList.remove('tlw-modal-open');\r\n    this.isVisible = false;\r\n  }\r\n}\r\n\r\nexport default TemplateModal;","/**\r\n * Scenario Wizard Modal\r\n * Step-by-step guided scenario creation\r\n */\r\n\r\nexport class ScenarioWizard {\r\n  constructor(options = {}) {\r\n    this.options = {\r\n      onComplete: options.onComplete || (() => {}),\r\n      onClose: options.onClose || (() => {}),\r\n      showProgress: options.showProgress !== false,\r\n      ...options\r\n    };\r\n    \r\n    this.currentStep = 0;\r\n    this.answers = {};\r\n    this.isVisible = false;\r\n    \r\n    this.modal = null;\r\n    this.backdrop = null;\r\n    \r\n    this.steps = this.getWizardSteps();\r\n    \r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the wizard\r\n   */\r\n  init() {\r\n    this.createModal();\r\n  }\r\n  \r\n  /**\r\n   * Get wizard step definitions\r\n   */\r\n  getWizardSteps() {\r\n    return [\r\n      {\r\n        id: 'pattern',\r\n        title: 'Trading Pattern',\r\n        subtitle: 'What pattern are you looking for?',\r\n        type: 'choice',\r\n        options: [\r\n          { value: 'breakout', label: 'Breakout', description: 'Price breaking above resistance' },\r\n          { value: 'reversal', label: 'Reversal', description: 'Price changing direction' },\r\n          { value: 'momentum', label: 'Momentum', description: 'Continued price movement' },\r\n          { value: 'consolidation', label: 'Consolidation', description: 'Sideways price action' },\r\n          { value: 'gap', label: 'Gap', description: 'Price gaps up or down' },\r\n          { value: 'custom', label: 'Custom Pattern', description: 'I\\'ll describe it myself' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'direction',\r\n        title: 'Direction',\r\n        subtitle: 'What direction are you interested in?',\r\n        type: 'choice',\r\n        options: [\r\n          { value: 'bullish', label: 'Bullish', description: 'Looking for upward movement' },\r\n          { value: 'bearish', label: 'Bearish', description: 'Looking for downward movement' },\r\n          { value: 'both', label: 'Both Directions', description: 'Either up or down' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'symbols',\r\n        title: 'Assets',\r\n        subtitle: 'Which symbols/assets do you want to analyze?',\r\n        type: 'input',\r\n        inputType: 'text',\r\n        placeholder: 'e.g., AAPL, MSFT, SPY or \"tech stocks\" or \"S&P 500\"',\r\n        validation: {\r\n          required: true,\r\n          minLength: 1\r\n        }\r\n      },\r\n      {\r\n        id: 'timeframe',\r\n        title: 'Timeframe',\r\n        subtitle: 'What timeframe should we analyze?',\r\n        type: 'choice',\r\n        options: [\r\n          { value: '1min', label: '1 Minute', description: 'Intraday scalping' },\r\n          { value: '5min', label: '5 Minutes', description: 'Short-term trading' },\r\n          { value: '15min', label: '15 Minutes', description: 'Day trading' },\r\n          { value: '1hour', label: '1 Hour', description: 'Swing trading setup' },\r\n          { value: '4hour', label: '4 Hours', description: 'Position trading' },\r\n          { value: '1day', label: 'Daily', description: 'Long-term analysis' },\r\n          { value: 'weekly', label: 'Weekly', description: 'Major trend analysis' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'indicators',\r\n        title: 'Technical Indicators',\r\n        subtitle: 'Which indicators would you like to include?',\r\n        type: 'multi-choice',\r\n        optional: true,\r\n        options: [\r\n          { value: 'volume', label: 'Volume', description: 'Trading volume analysis' },\r\n          { value: 'rsi', label: 'RSI', description: 'Relative Strength Index' },\r\n          { value: 'macd', label: 'MACD', description: 'Moving Average Convergence Divergence' },\r\n          { value: 'bollinger', label: 'Bollinger Bands', description: 'Volatility bands' },\r\n          { value: 'sma', label: 'Simple MA', description: 'Simple Moving Averages' },\r\n          { value: 'ema', label: 'Exponential MA', description: 'Exponential Moving Averages' },\r\n          { value: 'stochastic', label: 'Stochastic', description: 'Momentum oscillator' },\r\n          { value: 'atr', label: 'ATR', description: 'Average True Range' }\r\n        ]\r\n      },\r\n      {\r\n        id: 'conditions',\r\n        title: 'Additional Conditions',\r\n        subtitle: 'Any specific conditions or requirements?',\r\n        type: 'input',\r\n        inputType: 'textarea',\r\n        placeholder: 'e.g., \"minimum volume of 1M shares\", \"price above $50\", \"earnings within 30 days\"...',\r\n        optional: true\r\n      }\r\n    ];\r\n  }\r\n  \r\n  /**\r\n   * Create modal DOM structure\r\n   */\r\n  createModal() {\r\n    this.backdrop = document.createElement('div');\r\n    this.backdrop.className = 'tlw-modal-backdrop tlw-wizard-backdrop';\r\n    this.backdrop.addEventListener('click', (e) => {\r\n      if (e.target === this.backdrop) {\r\n        this.hide();\r\n      }\r\n    });\r\n    \r\n    this.modal = document.createElement('div');\r\n    this.modal.className = 'tlw-wizard-modal';\r\n    this.modal.innerHTML = this.render();\r\n    \r\n    this.backdrop.appendChild(this.modal);\r\n    document.body.appendChild(this.backdrop);\r\n    \r\n    this.attachEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Render modal HTML\r\n   */\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-wizard-header\">\r\n        <div class=\"tlw-wizard-title\">\r\n          <span class=\"tlw-wizard-icon\">🔧</span>\r\n          <h2>Scenario Builder</h2>\r\n        </div>\r\n        <button class=\"tlw-modal-close\" data-action=\"close\" aria-label=\"Close\">\r\n          <span>&times;</span>\r\n        </button>\r\n      </div>\r\n      \r\n      ${this.options.showProgress ? this.renderProgress() : ''}\r\n      \r\n      <div class=\"tlw-wizard-body\">\r\n        ${this.renderStep()}\r\n      </div>\r\n      \r\n      <div class=\"tlw-wizard-footer\">\r\n        ${this.renderNavigation()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render progress indicator\r\n   */\r\n  renderProgress() {\r\n    const progress = ((this.currentStep + 1) / this.steps.length) * 100;\r\n    \r\n    return `\r\n      <div class=\"tlw-wizard-progress\">\r\n        <div class=\"tlw-progress-bar\">\r\n          <div class=\"tlw-progress-fill\" style=\"width: ${progress}%\"></div>\r\n        </div>\r\n        <div class=\"tlw-progress-text\">\r\n          Step ${this.currentStep + 1} of ${this.steps.length}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render current step\r\n   */\r\n  renderStep() {\r\n    const step = this.steps[this.currentStep];\r\n    \r\n    if (!step) return '';\r\n    \r\n    return `\r\n      <div class=\"tlw-wizard-step\" data-step=\"${step.id}\">\r\n        <div class=\"tlw-step-header\">\r\n          <h3 class=\"tlw-step-title\">${step.title}</h3>\r\n          <p class=\"tlw-step-subtitle\">${step.subtitle}</p>\r\n          ${step.optional ? '<span class=\"tlw-optional-badge\">Optional</span>' : ''}\r\n        </div>\r\n        \r\n        <div class=\"tlw-step-content\">\r\n          ${this.renderStepInput(step)}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render step input based on type\r\n   */\r\n  renderStepInput(step) {\r\n    switch(step.type) {\r\n      case 'choice':\r\n        return this.renderChoiceInput(step);\r\n      case 'multi-choice':\r\n        return this.renderMultiChoiceInput(step);\r\n      case 'input':\r\n        return this.renderTextInput(step);\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Render single choice input\r\n   */\r\n  renderChoiceInput(step) {\r\n    return `\r\n      <div class=\"tlw-choice-grid\">\r\n        ${step.options.map(option => `\r\n          <div class=\"tlw-choice-option ${this.answers[step.id] === option.value ? 'selected' : ''}\" \r\n               data-value=\"${option.value}\" \r\n               data-action=\"select-choice\">\r\n            <div class=\"tlw-choice-label\">${option.label}</div>\r\n            <div class=\"tlw-choice-description\">${option.description}</div>\r\n          </div>\r\n        `).join('')}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render multi-choice input\r\n   */\r\n  renderMultiChoiceInput(step) {\r\n    const selectedValues = this.answers[step.id] || [];\r\n    \r\n    return `\r\n      <div class=\"tlw-multi-choice-grid\">\r\n        ${step.options.map(option => `\r\n          <label class=\"tlw-checkbox-option ${selectedValues.includes(option.value) ? 'selected' : ''}\">\r\n            <input type=\"checkbox\" \r\n                   value=\"${option.value}\" \r\n                   data-action=\"toggle-choice\"\r\n                   ${selectedValues.includes(option.value) ? 'checked' : ''}>\r\n            <div class=\"tlw-checkbox-content\">\r\n              <div class=\"tlw-checkbox-label\">${option.label}</div>\r\n              <div class=\"tlw-checkbox-description\">${option.description}</div>\r\n            </div>\r\n            <div class=\"tlw-checkbox-indicator\">✓</div>\r\n          </label>\r\n        `).join('')}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render text input\r\n   */\r\n  renderTextInput(step) {\r\n    const value = this.answers[step.id] || '';\r\n    \r\n    if (step.inputType === 'textarea') {\r\n      return `\r\n        <textarea \r\n          class=\"tlw-wizard-textarea\" \r\n          placeholder=\"${step.placeholder || ''}\"\r\n          data-action=\"input-change\"\r\n          rows=\"4\"\r\n        >${value}</textarea>\r\n      `;\r\n    }\r\n    \r\n    return `\r\n      <input \r\n        type=\"text\" \r\n        class=\"tlw-wizard-input\" \r\n        placeholder=\"${step.placeholder || ''}\"\r\n        value=\"${value}\"\r\n        data-action=\"input-change\"\r\n      >\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render navigation buttons\r\n   */\r\n  renderNavigation() {\r\n    const isFirstStep = this.currentStep === 0;\r\n    const isLastStep = this.currentStep === this.steps.length - 1;\r\n    const canProceed = this.canProceedFromCurrentStep();\r\n    \r\n    return `\r\n      <div class=\"tlw-wizard-nav\">\r\n        <div class=\"tlw-nav-left\">\r\n          ${!isFirstStep ? `\r\n            <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"prev-step\">\r\n              ← Previous\r\n            </button>\r\n          ` : ''}\r\n        </div>\r\n        \r\n        <div class=\"tlw-nav-right\">\r\n          <button class=\"tlw-btn tlw-btn--ghost\" data-action=\"close\">\r\n            Cancel\r\n          </button>\r\n          \r\n          ${isLastStep ? `\r\n            <button class=\"tlw-btn tlw-btn--success ${canProceed ? '' : 'disabled'}\" \r\n                    data-action=\"complete\" \r\n                    ${canProceed ? '' : 'disabled'}>\r\n              Create Scenario\r\n            </button>\r\n          ` : `\r\n            <button class=\"tlw-btn tlw-btn--primary ${canProceed ? '' : 'disabled'}\" \r\n                    data-action=\"next-step\"\r\n                    ${canProceed ? '' : 'disabled'}>\r\n              Next →\r\n            </button>\r\n          `}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Attach event listeners\r\n   */\r\n  attachEventListeners() {\r\n    // Close button\r\n    this.modal.querySelectorAll('[data-action=\"close\"]').forEach(btn => {\r\n      btn.addEventListener('click', () => this.hide());\r\n    });\r\n    \r\n    // Navigation\r\n    this.modal.querySelector('[data-action=\"next-step\"]')?.addEventListener('click', () => {\r\n      if (this.canProceedFromCurrentStep()) {\r\n        this.nextStep();\r\n      }\r\n    });\r\n    \r\n    this.modal.querySelector('[data-action=\"prev-step\"]')?.addEventListener('click', () => {\r\n      this.prevStep();\r\n    });\r\n    \r\n    this.modal.querySelector('[data-action=\"complete\"]')?.addEventListener('click', () => {\r\n      if (this.canProceedFromCurrentStep()) {\r\n        this.complete();\r\n      }\r\n    });\r\n    \r\n    // Choice selection\r\n    this.modal.querySelectorAll('[data-action=\"select-choice\"]').forEach(option => {\r\n      option.addEventListener('click', (e) => {\r\n        const value = e.currentTarget.dataset.value;\r\n        this.handleChoiceSelection(value);\r\n      });\r\n    });\r\n    \r\n    // Multi-choice toggles\r\n    this.modal.querySelectorAll('[data-action=\"toggle-choice\"]').forEach(checkbox => {\r\n      checkbox.addEventListener('change', (e) => {\r\n        this.handleMultiChoiceToggle(e.target.value, e.target.checked);\r\n      });\r\n    });\r\n    \r\n    // Text inputs\r\n    this.modal.querySelectorAll('[data-action=\"input-change\"]').forEach(input => {\r\n      input.addEventListener('input', (e) => {\r\n        this.handleInputChange(e.target.value);\r\n      });\r\n    });\r\n    \r\n    // Keyboard navigation\r\n    this.modal.addEventListener('keydown', (e) => this.handleKeyNavigation(e));\r\n    \r\n    // Prevent modal from closing when clicking inside\r\n    this.modal.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle choice selection\r\n   */\r\n  handleChoiceSelection(value) {\r\n    const step = this.steps[this.currentStep];\r\n    this.answers[step.id] = value;\r\n    \r\n    // Update UI\r\n    this.modal.querySelectorAll('.tlw-choice-option').forEach(option => {\r\n      option.classList.toggle('selected', option.dataset.value === value);\r\n    });\r\n    \r\n    this.updateNavigation();\r\n    \r\n    // Auto-advance for single choices (with slight delay for UX)\r\n    if (step.type === 'choice') {\r\n      setTimeout(() => {\r\n        if (this.currentStep < this.steps.length - 1) {\r\n          this.nextStep();\r\n        }\r\n      }, 500);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle multi-choice toggle\r\n   */\r\n  handleMultiChoiceToggle(value, checked) {\r\n    const step = this.steps[this.currentStep];\r\n    \r\n    if (!this.answers[step.id]) {\r\n      this.answers[step.id] = [];\r\n    }\r\n    \r\n    if (checked) {\r\n      if (!this.answers[step.id].includes(value)) {\r\n        this.answers[step.id].push(value);\r\n      }\r\n    } else {\r\n      this.answers[step.id] = this.answers[step.id].filter(v => v !== value);\r\n    }\r\n    \r\n    // Update UI\r\n    const option = this.modal.querySelector(`input[value=\"${value}\"]`).closest('.tlw-checkbox-option');\r\n    option.classList.toggle('selected', checked);\r\n    \r\n    this.updateNavigation();\r\n  }\r\n  \r\n  /**\r\n   * Handle text input change\r\n   */\r\n  handleInputChange(value) {\r\n    const step = this.steps[this.currentStep];\r\n    this.answers[step.id] = value.trim();\r\n    \r\n    this.updateNavigation();\r\n  }\r\n  \r\n  /**\r\n   * Handle keyboard navigation\r\n   */\r\n  handleKeyNavigation(e) {\r\n    switch(e.key) {\r\n      case 'Escape':\r\n        this.hide();\r\n        break;\r\n        \r\n      case 'Enter':\r\n        if (!e.target.matches('textarea')) {\r\n          e.preventDefault();\r\n          if (this.canProceedFromCurrentStep()) {\r\n            if (this.currentStep === this.steps.length - 1) {\r\n              this.complete();\r\n            } else {\r\n              this.nextStep();\r\n            }\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Go to next step\r\n   */\r\n  nextStep() {\r\n    if (this.currentStep < this.steps.length - 1) {\r\n      this.currentStep++;\r\n      this.updateModal();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Go to previous step\r\n   */\r\n  prevStep() {\r\n    if (this.currentStep > 0) {\r\n      this.currentStep--;\r\n      this.updateModal();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Complete the wizard\r\n   */\r\n  complete() {\r\n    const prompt = this.generatePrompt();\r\n    \r\n    this.options.onComplete({\r\n      type: 'wizard',\r\n      answers: this.answers,\r\n      prompt: prompt,\r\n      journeyType: 'interactive'\r\n    });\r\n    \r\n    this.hide();\r\n  }\r\n  \r\n  /**\r\n   * Generate natural language prompt from answers\r\n   */\r\n  generatePrompt() {\r\n    const parts = [];\r\n    \r\n    // Pattern and direction\r\n    if (this.answers.pattern && this.answers.direction) {\r\n      const patternMap = {\r\n        breakout: 'breakout patterns',\r\n        reversal: 'reversal patterns', \r\n        momentum: 'momentum continuation',\r\n        consolidation: 'consolidation patterns',\r\n        gap: 'gap patterns',\r\n        custom: 'specific patterns'\r\n      };\r\n      \r\n      const directionMap = {\r\n        bullish: 'bullish',\r\n        bearish: 'bearish',\r\n        both: 'both bullish and bearish'\r\n      };\r\n      \r\n      parts.push(`I'm looking for ${directionMap[this.answers.direction]} ${patternMap[this.answers.pattern] || this.answers.pattern}`);\r\n    }\r\n    \r\n    // Symbols\r\n    if (this.answers.symbols) {\r\n      parts.push(`in ${this.answers.symbols}`);\r\n    }\r\n    \r\n    // Timeframe\r\n    if (this.answers.timeframe) {\r\n      parts.push(`using ${this.answers.timeframe} timeframe`);\r\n    }\r\n    \r\n    // Indicators\r\n    if (this.answers.indicators && this.answers.indicators.length > 0) {\r\n      const indicatorNames = {\r\n        volume: 'volume',\r\n        rsi: 'RSI',\r\n        macd: 'MACD',\r\n        bollinger: 'Bollinger Bands',\r\n        sma: 'simple moving averages',\r\n        ema: 'exponential moving averages',\r\n        stochastic: 'stochastic oscillator',\r\n        atr: 'ATR'\r\n      };\r\n      \r\n      const indicators = this.answers.indicators.map(ind => indicatorNames[ind] || ind).join(', ');\r\n      parts.push(`with ${indicators} confirmation`);\r\n    }\r\n    \r\n    // Additional conditions\r\n    if (this.answers.conditions) {\r\n      parts.push(`Additional requirements: ${this.answers.conditions}`);\r\n    }\r\n    \r\n    let prompt = parts.join(' ');\r\n    \r\n    // Make it more natural\r\n    prompt = prompt.replace(/^I'm looking for/, 'I want to find');\r\n    prompt += '. Please help me create a testable trading scenario for this.';\r\n    \r\n    return prompt;\r\n  }\r\n  \r\n  /**\r\n   * Check if we can proceed from current step\r\n   */\r\n  canProceedFromCurrentStep() {\r\n    const step = this.steps[this.currentStep];\r\n    \r\n    if (step.optional) {\r\n      return true;\r\n    }\r\n    \r\n    const answer = this.answers[step.id];\r\n    \r\n    if (!answer) {\r\n      return false;\r\n    }\r\n    \r\n    // Validate based on step type\r\n    switch(step.type) {\r\n      case 'choice':\r\n        return !!answer;\r\n        \r\n      case 'multi-choice':\r\n        return true; // Multi-choice is always valid (can be empty)\r\n        \r\n      case 'input':\r\n        if (step.validation?.required && (!answer || answer.length === 0)) {\r\n          return false;\r\n        }\r\n        if (step.validation?.minLength && answer.length < step.validation.minLength) {\r\n          return false;\r\n        }\r\n        return true;\r\n        \r\n      default:\r\n        return !!answer;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update the entire modal\r\n   */\r\n  updateModal() {\r\n    this.modal.innerHTML = this.render();\r\n    this.attachEventListeners();\r\n    \r\n    // Focus appropriate element\r\n    setTimeout(() => {\r\n      const firstInput = this.modal.querySelector('input, textarea, .tlw-choice-option');\r\n      if (firstInput) {\r\n        firstInput.focus();\r\n      }\r\n    }, 100);\r\n  }\r\n  \r\n  /**\r\n   * Update navigation buttons only\r\n   */\r\n  updateNavigation() {\r\n    const footer = this.modal.querySelector('.tlw-wizard-footer');\r\n    if (footer) {\r\n      footer.innerHTML = this.renderNavigation();\r\n      \r\n      // Re-attach navigation event listeners\r\n      footer.querySelector('[data-action=\"next-step\"]')?.addEventListener('click', () => {\r\n        if (this.canProceedFromCurrentStep()) {\r\n          this.nextStep();\r\n        }\r\n      });\r\n      \r\n      footer.querySelector('[data-action=\"prev-step\"]')?.addEventListener('click', () => {\r\n        this.prevStep();\r\n      });\r\n      \r\n      footer.querySelector('[data-action=\"complete\"]')?.addEventListener('click', () => {\r\n        if (this.canProceedFromCurrentStep()) {\r\n          this.complete();\r\n        }\r\n      });\r\n      \r\n      footer.querySelector('[data-action=\"close\"]')?.addEventListener('click', () => {\r\n        this.hide();\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show the wizard\r\n   */\r\n  show() {\r\n    if (!this.isVisible) {\r\n      this.backdrop.style.display = 'flex';\r\n      document.body.classList.add('tlw-modal-open');\r\n      \r\n      setTimeout(() => {\r\n        this.backdrop.classList.add('tlw-modal-backdrop--visible');\r\n        this.modal.classList.add('tlw-wizard-modal--visible');\r\n      }, 10);\r\n      \r\n      this.isVisible = true;\r\n      \r\n      // Focus first interactive element\r\n      setTimeout(() => {\r\n        const firstInput = this.modal.querySelector('input, textarea, .tlw-choice-option');\r\n        if (firstInput) {\r\n          firstInput.focus();\r\n        }\r\n      }, 100);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Hide the wizard\r\n   */\r\n  hide() {\r\n    if (this.isVisible) {\r\n      this.backdrop.classList.remove('tlw-modal-backdrop--visible');\r\n      this.modal.classList.remove('tlw-wizard-modal--visible');\r\n      \r\n      setTimeout(() => {\r\n        this.backdrop.style.display = 'none';\r\n        document.body.classList.remove('tlw-modal-open');\r\n        this.isVisible = false;\r\n        \r\n        this.options.onClose();\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Reset wizard to beginning\r\n   */\r\n  reset() {\r\n    this.currentStep = 0;\r\n    this.answers = {};\r\n    \r\n    if (this.isVisible) {\r\n      this.updateModal();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Destroy the wizard\r\n   */\r\n  destroy() {\r\n    if (this.backdrop && this.backdrop.parentNode) {\r\n      this.backdrop.parentNode.removeChild(this.backdrop);\r\n    }\r\n    \r\n    document.body.classList.remove('tlw-modal-open');\r\n    this.isVisible = false;\r\n  }\r\n}\r\n\r\nexport default ScenarioWizard;","/**\r\n * Message Renderers\r\n * Specialized renderers for different message types\r\n */\r\n\r\n/**\r\n * Base Message Renderer\r\n */\r\nexport class BaseMessageRenderer {\r\n  constructor(message) {\r\n    this.message = message;\r\n    this.timestamp = new Date(message.timestamp).toLocaleTimeString();\r\n  }\r\n  \r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--${this.message.type}\" data-message-id=\"${this.message.id}\">\r\n        ${this.renderContent()}\r\n        ${this.renderFooter()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderContent() {\r\n    return `\r\n      <div class=\"tlw-message-content\">\r\n        ${this.message.content || ''}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderFooter() {\r\n    return `\r\n      <div class=\"tlw-message-footer\">\r\n        <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderActions() {\r\n    return '';\r\n  }\r\n}\r\n\r\n/**\r\n * User Message Renderer\r\n */\r\nexport class UserMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--user\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-bubble\">\r\n          <div class=\"tlw-message-content\">\r\n            ${this.formatContent(this.message.content)}\r\n          </div>\r\n          <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatContent(content) {\r\n    // Simple markdown-like formatting\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/\\n/g, '<br>');\r\n  }\r\n}\r\n\r\n/**\r\n * AI Text Message Renderer\r\n */\r\nexport class TextMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--assistant\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-header\">\r\n          <div class=\"tlw-message-avatar\">🤖</div>\r\n          <div class=\"tlw-message-info\">\r\n            <span class=\"tlw-message-sender\">TradrLab AI</span>\r\n            <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"tlw-message-content\">\r\n          ${this.formatContent(this.message.content)}\r\n        </div>\r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatContent(content) {\r\n    // Enhanced markdown formatting\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n\\n/g, '</p><p>')\r\n      .replace(/\\n/g, '<br>')\r\n      .replace(/^(.+)$/, '<p>$1</p>');\r\n  }\r\n  \r\n  renderActions() {\r\n    return `\r\n      <div class=\"tlw-message-actions\">\r\n        <button class=\"tlw-action-btn tlw-copy-btn\" data-action=\"copy\" title=\"Copy message\">\r\n          📋\r\n        </button>\r\n        <button class=\"tlw-action-btn tlw-feedback-btn\" data-action=\"feedback-good\" title=\"Helpful\">\r\n          👍\r\n        </button>\r\n        <button class=\"tlw-action-btn tlw-feedback-btn\" data-action=\"feedback-bad\" title=\"Not helpful\">\r\n          👎\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Steps Message Renderer (for step-by-step guidance)\r\n */\r\nexport class StepsMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    const steps = this.parseSteps(this.message.content);\r\n    \r\n    return `\r\n      <div class=\"tlw-message tlw-message--steps\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-header\">\r\n          <div class=\"tlw-message-avatar\">📝</div>\r\n          <div class=\"tlw-message-info\">\r\n            <span class=\"tlw-message-sender\">Step-by-Step Guide</span>\r\n            <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"tlw-steps-content\">\r\n          ${this.renderSteps(steps)}\r\n        </div>\r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  parseSteps(content) {\r\n    // Try to parse numbered steps from content\r\n    const lines = content.split('\\n');\r\n    const steps = [];\r\n    \r\n    lines.forEach(line => {\r\n      const stepMatch = line.match(/^(\\d+)\\.\\s*(.+)/);\r\n      if (stepMatch) {\r\n        steps.push({\r\n          number: parseInt(stepMatch[1]),\r\n          text: stepMatch[2]\r\n        });\r\n      }\r\n    });\r\n    \r\n    return steps.length > 0 ? steps : [{ number: 1, text: content }];\r\n  }\r\n  \r\n  renderSteps(steps) {\r\n    return `\r\n      <ol class=\"tlw-steps-list\">\r\n        ${steps.map(step => `\r\n          <li class=\"tlw-step-item\">\r\n            <div class=\"tlw-step-number\">${step.number}</div>\r\n            <div class=\"tlw-step-text\">${step.text}</div>\r\n          </li>\r\n        `).join('')}\r\n      </ol>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Template Message Renderer\r\n */\r\nexport class TemplateMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--template\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-template-header\">\r\n          <div class=\"tlw-template-icon\">✨</div>\r\n          <div class=\"tlw-template-info\">\r\n            <h4>Scenario Template Ready</h4>\r\n            <span class=\"tlw-template-name\">${this.message.templateName || 'Custom Template'}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"tlw-template-content\">\r\n          ${this.formatContent(this.message.content)}\r\n        </div>\r\n        <div class=\"tlw-template-actions\">\r\n          <button class=\"tlw-btn tlw-btn--primary\" data-action=\"accept-template\">\r\n            Generate Model\r\n          </button>\r\n          <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"modify-template\">\r\n            Modify Template\r\n          </button>\r\n        </div>\r\n        <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatContent(content) {\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/\\n/g, '<br>');\r\n  }\r\n}\r\n\r\n/**\r\n * Model Message Renderer (DAG Generated)\r\n */\r\nexport class ModelMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    const scenarioId = this.message.scenarioId;\r\n    const hasError = this.message.statusCode && this.message.statusCode !== '200';\r\n    \r\n    return `\r\n      <div class=\"tlw-message tlw-message--model\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-model-header\">\r\n          <div class=\"tlw-model-icon\">${hasError ? '❌' : '✅'}</div>\r\n          <div class=\"tlw-model-info\">\r\n            <h4>${hasError ? 'Model Generation Failed' : 'Model Generated Successfully'}</h4>\r\n            ${scenarioId ? `<span class=\"tlw-scenario-id\">Scenario ID: ${scenarioId}</span>` : ''}\r\n          </div>\r\n        </div>\r\n        \r\n        ${hasError ? this.renderError() : this.renderSuccess()}\r\n        \r\n        <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderSuccess() {\r\n    return `\r\n      <div class=\"tlw-model-content\">\r\n        <p>✨ Your trading scenario has been created and is being evaluated against market data...</p>\r\n        <div class=\"tlw-model-status\">\r\n          <div class=\"tlw-progress-indicator\">\r\n            <div class=\"tlw-spinner\"></div>\r\n            <span>Running evaluation...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"tlw-model-actions\">\r\n        <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"view-model\">\r\n          View Model Details\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderError() {\r\n    return `\r\n      <div class=\"tlw-model-content tlw-error-content\">\r\n        <p>There was an issue generating your trading model. Please try again or modify your request.</p>\r\n        ${this.message.content ? `<div class=\"tlw-error-details\">${this.message.content}</div>` : ''}\r\n      </div>\r\n      <div class=\"tlw-model-actions\">\r\n        <button class=\"tlw-btn tlw-btn--primary\" data-action=\"retry-model\">\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Analysis Message Renderer (with tables)\r\n */\r\nexport class AnalysisMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    const hasTable = this.message.tableJson || this.message.tableMarkdown;\r\n    \r\n    return `\r\n      <div class=\"tlw-message tlw-message--analysis\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-header\">\r\n          <div class=\"tlw-message-avatar\">📊</div>\r\n          <div class=\"tlw-message-info\">\r\n            <span class=\"tlw-message-sender\">Analysis Results</span>\r\n            <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"tlw-analysis-content\">\r\n          ${this.formatContent(this.message.content)}\r\n        </div>\r\n        \r\n        ${hasTable ? this.renderTable() : ''}\r\n        \r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  renderTable() {\r\n    if (this.message.tableJson) {\r\n      return this.renderJsonTable();\r\n    } else if (this.message.tableMarkdown) {\r\n      return this.renderMarkdownTable();\r\n    }\r\n    return '';\r\n  }\r\n  \r\n  renderJsonTable() {\r\n    try {\r\n      const tableData = JSON.parse(this.message.tableJson);\r\n      \r\n      if (!Array.isArray(tableData) || tableData.length === 0) {\r\n        return '<div class=\"tlw-table-empty\">No data available</div>';\r\n      }\r\n      \r\n      const headers = Object.keys(tableData[0]);\r\n      const maxRows = 10;\r\n      const displayData = tableData.slice(0, maxRows);\r\n      const hasMoreRows = tableData.length > maxRows;\r\n      \r\n      return `\r\n        <div class=\"tlw-table-container\">\r\n          <table class=\"tlw-data-table\">\r\n            <thead>\r\n              <tr>\r\n                ${headers.map(header => `<th>${header}</th>`).join('')}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              ${displayData.map(row => `\r\n                <tr>\r\n                  ${headers.map(header => `<td>${this.formatCellValue(row[header])}</td>`).join('')}\r\n                </tr>\r\n              `).join('')}\r\n            </tbody>\r\n          </table>\r\n          \r\n          <div class=\"tlw-table-controls\">\r\n            ${hasMoreRows ? `\r\n              <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"expand-table\">\r\n                Show All (${tableData.length} rows)\r\n              </button>\r\n            ` : ''}\r\n            <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"export-csv\">\r\n              Export CSV\r\n            </button>\r\n            <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"open-full-screen\">\r\n              View in Main App\r\n            </button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } catch (error) {\r\n      return '<div class=\"tlw-table-error\">Error parsing table data</div>';\r\n    }\r\n  }\r\n  \r\n  renderMarkdownTable() {\r\n    // Simple markdown table rendering\r\n    return `\r\n      <div class=\"tlw-markdown-table\">\r\n        ${this.message.tableMarkdown}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatCellValue(value) {\r\n    if (value === null || value === undefined) {\r\n      return '-';\r\n    }\r\n    \r\n    // Format numbers\r\n    if (typeof value === 'number') {\r\n      if (value % 1 === 0) {\r\n        return value.toLocaleString();\r\n      } else {\r\n        return value.toLocaleString(undefined, { maximumFractionDigits: 4 });\r\n      }\r\n    }\r\n    \r\n    // Format percentages\r\n    if (typeof value === 'string' && value.includes('%')) {\r\n      return value;\r\n    }\r\n    \r\n    return String(value);\r\n  }\r\n  \r\n  formatContent(content) {\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n\\n/g, '</p><p>')\r\n      .replace(/\\n/g, '<br>')\r\n      .replace(/^(.+)$/, '<p>$1</p>');\r\n  }\r\n  \r\n  renderActions() {\r\n    return `\r\n      <div class=\"tlw-message-actions\">\r\n        <button class=\"tlw-action-btn\" data-action=\"ask-follow-up\" title=\"Ask follow-up question\">\r\n          💬 Ask More\r\n        </button>\r\n        <button class=\"tlw-action-btn\" data-action=\"copy\" title=\"Copy results\">\r\n          📋\r\n        </button>\r\n        <button class=\"tlw-action-btn tlw-feedback-btn\" data-action=\"feedback-good\" title=\"Helpful\">\r\n          👍\r\n        </button>\r\n        <button class=\"tlw-action-btn tlw-feedback-btn\" data-action=\"feedback-bad\" title=\"Not helpful\">\r\n          👎\r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Scenario Message Renderer\r\n */\r\nexport class ScenarioMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--scenario\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-header\">\r\n          <div class=\"tlw-message-avatar\">🎯</div>\r\n          <div class=\"tlw-message-info\">\r\n            <span class=\"tlw-message-sender\">Scenario Update</span>\r\n            <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"tlw-scenario-content\">\r\n          ${this.formatContent(this.message.content)}\r\n        </div>\r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatContent(content) {\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/\\n/g, '<br>');\r\n  }\r\n}\r\n\r\n/**\r\n * Explanation Message Renderer (for debugging/explanations)\r\n */\r\nexport class ExplanationMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--explanation\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-message-header\">\r\n          <div class=\"tlw-message-avatar\">🔍</div>\r\n          <div class=\"tlw-message-info\">\r\n            <span class=\"tlw-message-sender\">System Explanation</span>\r\n            <span class=\"tlw-message-timestamp\">${this.timestamp}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"tlw-explanation-content\">\r\n          ${this.formatContent(this.message.content)}\r\n          \r\n          ${this.message.fixedDag ? `\r\n            <div class=\"tlw-fix-notice\">\r\n              <strong>🔧 Automatic Fix Applied</strong>\r\n              <p>The system detected and corrected an issue with your scenario.</p>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n        ${this.renderActions()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  formatContent(content) {\r\n    return content\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\r\n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\r\n      .replace(/`(.*?)`/g, '<code>$1</code>')\r\n      .replace(/\\n\\n/g, '</p><p>')\r\n      .replace(/\\n/g, '<br>')\r\n      .replace(/^(.+)$/, '<p>$1</p>');\r\n  }\r\n}\r\n\r\n/**\r\n * Error Message Renderer\r\n */\r\nexport class ErrorMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--error\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-error-header\">\r\n          <div class=\"tlw-error-icon\">⚠️</div>\r\n          <span class=\"tlw-error-title\">Something went wrong</span>\r\n        </div>\r\n        <div class=\"tlw-error-content\">\r\n          ${this.message.content}\r\n        </div>\r\n        <div class=\"tlw-error-actions\">\r\n          <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"retry\">\r\n            Try Again\r\n          </button>\r\n        </div>\r\n        <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Execution Error Message Renderer (AI Engine failures)\r\n */\r\nexport class ExecutionErrorMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--execution-error\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-error-header\">\r\n          <div class=\"tlw-error-icon\">🤖</div>\r\n          <span class=\"tlw-error-title\">AI Engine Error</span>\r\n        </div>\r\n        <div class=\"tlw-error-content\">\r\n          ${this.message.content}\r\n        </div>\r\n        <div class=\"tlw-error-actions\">\r\n          <button class=\"tlw-btn tlw-btn--primary\" data-action=\"retry-execution\" data-scenario-id=\"${this.message.scenarioId}\">\r\n            🔄 Try Again\r\n          </button>\r\n          <button class=\"tlw-btn tlw-btn--secondary\" data-action=\"ask-question\" data-scenario-id=\"${this.message.scenarioId}\">\r\n            💬 Ask Question\r\n          </button>\r\n        </div>\r\n        <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * System Message Renderer\r\n */\r\nexport class SystemMessageRenderer extends BaseMessageRenderer {\r\n  render() {\r\n    return `\r\n      <div class=\"tlw-message tlw-message--system\" data-message-id=\"${this.message.id}\">\r\n        <div class=\"tlw-system-content\">\r\n          <span class=\"tlw-system-icon\">ℹ️</span>\r\n          ${this.message.content}\r\n        </div>\r\n        <div class=\"tlw-message-timestamp\">${this.timestamp}</div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n/**\r\n * Message Renderer Factory\r\n */\r\nexport class MessageRenderer {\r\n  static create(message) {\r\n    const messageType = message.messageType || message.type;\r\n    \r\n    switch (messageType) {\r\n      case 'user':\r\n        return new UserMessageRenderer(message);\r\n      \r\n      case 'Text':\r\n      case 'assistant':\r\n        return new TextMessageRenderer(message);\r\n      \r\n      case 'Steps':\r\n        return new StepsMessageRenderer(message);\r\n      \r\n      case 'Template':\r\n      case 'TemplateSelection':\r\n        return new TemplateMessageRenderer(message);\r\n      \r\n      case 'Model':\r\n        return new ModelMessageRenderer(message);\r\n      \r\n      case 'Analysis':\r\n        return new AnalysisMessageRenderer(message);\r\n      \r\n      case 'Scenario':\r\n        return new ScenarioMessageRenderer(message);\r\n      \r\n      case 'Explanation':\r\n        return new ExplanationMessageRenderer(message);\r\n      \r\n      case 'error':\r\n        return new ErrorMessageRenderer(message);\r\n      \r\n      case 'ExecutionError':\r\n        return new ExecutionErrorMessageRenderer(message);\r\n      \r\n      case 'system':\r\n        return new SystemMessageRenderer(message);\r\n      \r\n      default:\r\n        // Fallback to text renderer\r\n        return new TextMessageRenderer(message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageRenderer;","/**\r\n * Milestone Tracker Component\r\n * Visual progress indicator for user journeys\r\n */\r\n\r\nimport { MILESTONES } from '../core/widget-config.js';\r\n\r\nexport class MilestoneTracker {\r\n  constructor(container, options = {}) {\r\n    this.container = container;\r\n    this.options = {\r\n      onMilestoneClick: options.onMilestoneClick || (() => {}),\r\n      showLabels: options.showLabels !== false,\r\n      showProgress: options.showProgress !== false,\r\n      compact: options.compact || false,\r\n      interactive: options.interactive || false,\r\n      ...options\r\n    };\r\n    \r\n    this.currentMilestone = 0;\r\n    this.journeyType = null;\r\n    this.isVisible = false;\r\n    this.milestones = [...MILESTONES];\r\n    \r\n    this.init();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the milestone tracker\r\n   */\r\n  init() {\r\n    this.render();\r\n    this.attachEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Render the milestone tracker\r\n   */\r\n  render() {\r\n    if (!this.container) return;\r\n    \r\n    this.container.innerHTML = `\r\n      <div class=\"tlw-milestone-tracker ${this.options.compact ? 'tlw-milestone-tracker--compact' : ''}\">\r\n        ${this.options.showProgress ? this.renderProgressBar() : ''}\r\n        <div class=\"tlw-milestone-steps\">\r\n          ${this.renderMilestones()}\r\n        </div>\r\n        ${this.renderJourneyIndicator()}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render progress bar\r\n   */\r\n  renderProgressBar() {\r\n    const progress = this.calculateProgress();\r\n    \r\n    return `\r\n      <div class=\"tlw-milestone-progress\">\r\n        <div class=\"tlw-progress-bar\">\r\n          <div class=\"tlw-progress-fill\" style=\"width: ${progress}%\"></div>\r\n        </div>\r\n        <div class=\"tlw-progress-text\">\r\n          ${this.getProgressText()}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render individual milestones\r\n   */\r\n  renderMilestones() {\r\n    return this.milestones.map((milestone, index) => {\r\n      const status = this.getMilestoneStatus(index);\r\n      const isClickable = this.options.interactive && status !== 'pending';\r\n      \r\n      return `\r\n        <div class=\"tlw-milestone ${this.getMilestoneClasses(index, status)}\"\r\n             data-milestone=\"${milestone.id}\"\r\n             ${isClickable ? 'role=\"button\" tabindex=\"0\"' : ''}\r\n             title=\"${milestone.description}\">\r\n          \r\n          <div class=\"tlw-milestone-icon-container\">\r\n            <div class=\"tlw-milestone-icon\">${milestone.icon}</div>\r\n            ${status === 'active' ? '<div class=\"tlw-milestone-pulse\"></div>' : ''}\r\n            ${status === 'completed' ? '<div class=\"tlw-milestone-check\">✓</div>' : ''}\r\n          </div>\r\n          \r\n          ${this.options.showLabels ? `\r\n            <div class=\"tlw-milestone-label\">\r\n              <span class=\"tlw-milestone-name\">${milestone.name}</span>\r\n              ${!this.options.compact ? `\r\n                <span class=\"tlw-milestone-description\">${milestone.description}</span>\r\n              ` : ''}\r\n            </div>\r\n          ` : ''}\r\n          \r\n          ${index < this.milestones.length - 1 ? `\r\n            <div class=\"tlw-milestone-connector ${status === 'completed' ? 'tlw-milestone-connector--completed' : ''}\"></div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n    }).join('');\r\n  }\r\n  \r\n  /**\r\n   * Render journey type indicator\r\n   */\r\n  renderJourneyIndicator() {\r\n    if (!this.journeyType) return '';\r\n    \r\n    const journeyLabels = {\r\n      'interactive': 'Interactive Journey',\r\n      'template': 'Template Journey'\r\n    };\r\n    \r\n    const journeyIcons = {\r\n      'interactive': '🎯',\r\n      'template': '📋'\r\n    };\r\n    \r\n    return `\r\n      <div class=\"tlw-journey-indicator\">\r\n        <span class=\"tlw-journey-icon\">${journeyIcons[this.journeyType] || '🎯'}</span>\r\n        <span class=\"tlw-journey-label\">${journeyLabels[this.journeyType] || 'Journey'}</span>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Get milestone CSS classes\r\n   */\r\n  getMilestoneClasses(index, status) {\r\n    const classes = ['tlw-milestone-item'];\r\n    \r\n    classes.push(`tlw-milestone--${status}`);\r\n    \r\n    if (this.options.interactive && status !== 'pending') {\r\n      classes.push('tlw-milestone--clickable');\r\n    }\r\n    \r\n    if (index === 0) {\r\n      classes.push('tlw-milestone--first');\r\n    }\r\n    \r\n    if (index === this.milestones.length - 1) {\r\n      classes.push('tlw-milestone--last');\r\n    }\r\n    \r\n    return classes.join(' ');\r\n  }\r\n  \r\n  /**\r\n   * Get milestone status\r\n   */\r\n  getMilestoneStatus(index) {\r\n    if (index < this.currentMilestone) {\r\n      return 'completed';\r\n    } else if (index === this.currentMilestone) {\r\n      return 'active';\r\n    } else {\r\n      return 'pending';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Calculate overall progress percentage\r\n   */\r\n  calculateProgress() {\r\n    if (this.milestones.length === 0) return 0;\r\n    return Math.round((this.currentMilestone / (this.milestones.length - 1)) * 100);\r\n  }\r\n  \r\n  /**\r\n   * Get progress text description\r\n   */\r\n  getProgressText() {\r\n    const completed = this.currentMilestone;\r\n    const total = this.milestones.length;\r\n    const current = this.milestones[this.currentMilestone];\r\n    \r\n    if (completed === total - 1 && this.currentMilestone === total - 1) {\r\n      return 'Journey Complete!';\r\n    }\r\n    \r\n    return `Step ${completed + 1} of ${total}: ${current?.name || 'Unknown'}`;\r\n  }\r\n  \r\n  /**\r\n   * Attach event listeners\r\n   */\r\n  attachEventListeners() {\r\n    if (!this.options.interactive) return;\r\n    \r\n    // Milestone click handlers\r\n    this.container.querySelectorAll('.tlw-milestone--clickable').forEach(milestone => {\r\n      milestone.addEventListener('click', (e) => {\r\n        const milestoneId = parseInt(milestone.dataset.milestone);\r\n        this.handleMilestoneClick(milestoneId, e);\r\n      });\r\n      \r\n      // Keyboard support\r\n      milestone.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          e.preventDefault();\r\n          const milestoneId = parseInt(milestone.dataset.milestone);\r\n          this.handleMilestoneClick(milestoneId, e);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle milestone click\r\n   */\r\n  handleMilestoneClick(milestoneId, event) {\r\n    const milestone = this.milestones.find(m => m.id === milestoneId);\r\n    if (milestone) {\r\n      this.options.onMilestoneClick(milestone, event);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update current milestone\r\n   */\r\n  updateMilestone(milestone) {\r\n    const newMilestone = typeof milestone === 'number' ? milestone : milestone.id;\r\n    \r\n    if (newMilestone !== this.currentMilestone) {\r\n      this.currentMilestone = Math.max(0, Math.min(newMilestone, this.milestones.length - 1));\r\n      this.render();\r\n      this.attachEventListeners();\r\n      \r\n      // Animate milestone change\r\n      this.animateMilestoneChange(newMilestone);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Set journey type\r\n   */\r\n  setJourneyType(journeyType) {\r\n    if (this.journeyType !== journeyType) {\r\n      this.journeyType = journeyType;\r\n      this.render();\r\n      this.attachEventListeners();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Animate milestone change\r\n   */\r\n  animateMilestoneChange(newMilestone) {\r\n    const milestoneElements = this.container.querySelectorAll('.tlw-milestone-item');\r\n    const targetElement = milestoneElements[newMilestone];\r\n    \r\n    if (targetElement) {\r\n      // Add animation class\r\n      targetElement.classList.add('tlw-milestone--just-completed');\r\n      \r\n      // Remove animation class after animation\r\n      setTimeout(() => {\r\n        targetElement.classList.remove('tlw-milestone--just-completed');\r\n      }, 1000);\r\n      \r\n      // Scroll to milestone if needed\r\n      if (this.options.autoScroll) {\r\n        targetElement.scrollIntoView({ \r\n          behavior: 'smooth', \r\n          block: 'nearest',\r\n          inline: 'center'\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show milestone tracker\r\n   */\r\n  show() {\r\n    if (!this.isVisible) {\r\n      this.container.style.display = 'block';\r\n      this.container.classList.add('tlw-milestone-tracker--visible');\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Hide milestone tracker\r\n   */\r\n  hide() {\r\n    if (this.isVisible) {\r\n      this.container.classList.remove('tlw-milestone-tracker--visible');\r\n      \r\n      setTimeout(() => {\r\n        this.container.style.display = 'none';\r\n        this.isVisible = false;\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Reset to beginning\r\n   */\r\n  reset() {\r\n    this.currentMilestone = 0;\r\n    this.journeyType = null;\r\n    this.render();\r\n    this.attachEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Get current milestone info\r\n   */\r\n  getCurrentMilestone() {\r\n    return {\r\n      index: this.currentMilestone,\r\n      milestone: this.milestones[this.currentMilestone],\r\n      progress: this.calculateProgress(),\r\n      journeyType: this.journeyType\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Set custom milestones\r\n   */\r\n  setMilestones(customMilestones) {\r\n    if (Array.isArray(customMilestones) && customMilestones.length > 0) {\r\n      this.milestones = customMilestones;\r\n      this.currentMilestone = Math.min(this.currentMilestone, this.milestones.length - 1);\r\n      this.render();\r\n      this.attachEventListeners();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Add milestone event listener\r\n   */\r\n  onMilestoneChange(callback) {\r\n    if (typeof callback === 'function') {\r\n      this.options.onMilestoneClick = callback;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Destroy the tracker\r\n   */\r\n  destroy() {\r\n    if (this.container) {\r\n      this.container.innerHTML = '';\r\n    }\r\n    this.isVisible = false;\r\n  }\r\n}\r\n\r\n// CSS classes for styling (to be included in main stylesheet)\r\nexport const MILESTONE_TRACKER_STYLES = `\r\n  .tlw-milestone-tracker {\r\n    padding: 1rem;\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    margin-bottom: 1rem;\r\n    opacity: 0;\r\n    transform: translateY(-10px);\r\n    transition: opacity 0.3s ease, transform 0.3s ease;\r\n  }\r\n  \r\n  .tlw-milestone-tracker--visible {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n  \r\n  .tlw-milestone-tracker--compact {\r\n    padding: 0.5rem 1rem;\r\n  }\r\n  \r\n  .tlw-milestone-progress {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .tlw-progress-bar {\r\n    width: 100%;\r\n    height: 4px;\r\n    background: #e5e5e5;\r\n    border-radius: 2px;\r\n    overflow: hidden;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .tlw-progress-fill {\r\n    height: 100%;\r\n    background: linear-gradient(90deg, #007bff, #28a745);\r\n    transition: width 0.5s ease;\r\n    border-radius: 2px;\r\n  }\r\n  \r\n  .tlw-progress-text {\r\n    font-size: 0.9rem;\r\n    color: #666;\r\n    text-align: center;\r\n  }\r\n  \r\n  .tlw-milestone-steps {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    overflow-x: auto;\r\n    padding: 0.5rem 0;\r\n  }\r\n  \r\n  .tlw-milestone-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-width: 80px;\r\n    position: relative;\r\n    flex-shrink: 0;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .tlw-milestone--clickable {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .tlw-milestone--clickable:hover .tlw-milestone-icon-container {\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  .tlw-milestone-icon-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    height: 3rem;\r\n    border-radius: 50%;\r\n    background: #e5e5e5;\r\n    border: 3px solid #e5e5e5;\r\n    transition: all 0.3s ease;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  \r\n  .tlw-milestone--pending .tlw-milestone-icon-container {\r\n    background: #f8f9fa;\r\n    border-color: #dee2e6;\r\n    color: #adb5bd;\r\n  }\r\n  \r\n  .tlw-milestone--active .tlw-milestone-icon-container {\r\n    background: #007bff;\r\n    border-color: #007bff;\r\n    color: white;\r\n    box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.2);\r\n  }\r\n  \r\n  .tlw-milestone--completed .tlw-milestone-icon-container {\r\n    background: #28a745;\r\n    border-color: #28a745;\r\n    color: white;\r\n  }\r\n  \r\n  .tlw-milestone-icon {\r\n    font-size: 1.25rem;\r\n    line-height: 1;\r\n  }\r\n  \r\n  .tlw-milestone-pulse {\r\n    position: absolute;\r\n    top: -3px;\r\n    left: -3px;\r\n    right: -3px;\r\n    bottom: -3px;\r\n    border-radius: 50%;\r\n    border: 2px solid #007bff;\r\n    animation: tlw-pulse 2s infinite;\r\n  }\r\n  \r\n  .tlw-milestone-check {\r\n    position: absolute;\r\n    top: -0.25rem;\r\n    right: -0.25rem;\r\n    width: 1.25rem;\r\n    height: 1.25rem;\r\n    background: #28a745;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 0.75rem;\r\n    color: white;\r\n    border: 2px solid white;\r\n  }\r\n  \r\n  .tlw-milestone-label {\r\n    text-align: center;\r\n    max-width: 100px;\r\n  }\r\n  \r\n  .tlw-milestone-name {\r\n    display: block;\r\n    font-size: 0.8rem;\r\n    font-weight: 600;\r\n    color: #333;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  \r\n  .tlw-milestone--pending .tlw-milestone-name {\r\n    color: #adb5bd;\r\n  }\r\n  \r\n  .tlw-milestone--active .tlw-milestone-name {\r\n    color: #007bff;\r\n  }\r\n  \r\n  .tlw-milestone--completed .tlw-milestone-name {\r\n    color: #28a745;\r\n  }\r\n  \r\n  .tlw-milestone-description {\r\n    display: block;\r\n    font-size: 0.7rem;\r\n    color: #666;\r\n    line-height: 1.2;\r\n  }\r\n  \r\n  .tlw-milestone-connector {\r\n    position: absolute;\r\n    top: 1.5rem;\r\n    left: calc(100% - 1rem);\r\n    width: 2rem;\r\n    height: 2px;\r\n    background: #dee2e6;\r\n    transition: background 0.3s ease;\r\n  }\r\n  \r\n  .tlw-milestone-connector--completed {\r\n    background: #28a745;\r\n  }\r\n  \r\n  .tlw-journey-indicator {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 0.5rem;\r\n    margin-top: 1rem;\r\n    padding-top: 1rem;\r\n    border-top: 1px solid #e5e5e5;\r\n    font-size: 0.9rem;\r\n    color: #666;\r\n  }\r\n  \r\n  .tlw-journey-icon {\r\n    font-size: 1.1rem;\r\n  }\r\n  \r\n  .tlw-milestone--just-completed {\r\n    animation: tlw-milestone-complete 1s ease;\r\n  }\r\n  \r\n  @keyframes tlw-pulse {\r\n    0% { transform: scale(1); opacity: 1; }\r\n    50% { transform: scale(1.1); opacity: 0.7; }\r\n    100% { transform: scale(1); opacity: 1; }\r\n  }\r\n  \r\n  @keyframes tlw-milestone-complete {\r\n    0% { transform: scale(1); }\r\n    50% { transform: scale(1.2); }\r\n    100% { transform: scale(1); }\r\n  }\r\n  \r\n  /* Responsive adjustments */\r\n  @media (max-width: 768px) {\r\n    .tlw-milestone-steps {\r\n      justify-content: flex-start;\r\n      gap: 1rem;\r\n    }\r\n    \r\n    .tlw-milestone-item {\r\n      min-width: 60px;\r\n    }\r\n    \r\n    .tlw-milestone-icon-container {\r\n      width: 2.5rem;\r\n      height: 2.5rem;\r\n    }\r\n    \r\n    .tlw-milestone-icon {\r\n      font-size: 1rem;\r\n    }\r\n    \r\n    .tlw-milestone-name {\r\n      font-size: 0.75rem;\r\n    }\r\n    \r\n    .tlw-milestone-description {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default MilestoneTracker;","/**\r\n * Enhanced Chat Widget\r\n * The world's most intelligent embeddable trading widget!\r\n * Extended chat widget with full message intelligence and automatic workflows\r\n */\r\n\r\nimport { EnhancedMessageStore } from '../services/enhanced-message-store.js';\r\nimport { EnhancedSignalRClient } from '../services/enhanced-signalr-client.js';\r\nimport { ApiClient } from '../services/api-client.js';\r\nimport { ThinkingManager, thinkingIndicatorStyles } from '../services/thinking-manager.js';\r\nimport { DagProcessor } from '../services/dag-processor.js';\r\nimport { ActionManager } from '../services/action-manager.js';\r\nimport { ChatContainer } from './chat-container.js';\r\nimport { LandingPage } from './landing-page.js';\r\nimport { TemplateModal } from './template-modal.js';\r\nimport { ScenarioWizard } from './wizard-modal.js';\r\nimport { MessageRenderer } from './message-renderers.js';\r\nimport { MilestoneTracker } from './milestone-tracker.js';\r\nimport { withApiFlags, WIDGET_STATES } from '../core/widget-config.js';\r\n\r\nexport class EnhancedChatWidget {\r\n  constructor(targetElement, configManager) {\r\n    this.element = targetElement;\r\n    this.config = configManager;\r\n    this.id = null;\r\n    this.initialized = false;\r\n    this.currentState = WIDGET_STATES.INITIALIZING;\r\n    \r\n    // Core Services (The Widget's Brain!)\r\n    this.messageStore = null;\r\n    this.apiClient = null;\r\n    this.signalRClient = null;\r\n    this.thinkingManager = null;\r\n    this.dagProcessor = null;\r\n    this.actionManager = null;\r\n    \r\n    // Processing flags\r\n    this.processingTemplate = false;\r\n    \r\n    // UI Components\r\n    this.chatContainer = null;\r\n    this.landingPage = null;\r\n    this.templateModal = null;\r\n    this.scenarioWizard = null;\r\n    this.milestoneTracker = null;\r\n    \r\n    // Widget State\r\n    this.waitingForResponse = false;\r\n    this.showLandingPage = true;\r\n    this.hasConversation = false;\r\n    this.generatedScenarios = [];\r\n    this.stylesInjected = false;\r\n  }\r\n  \r\n  /**\r\n   * Initialize the enhanced widget\r\n   */\r\n  async init() {\r\n    try {\r\n      if (this.initialized) {\r\n        console.warn('EnhancedChatWidget: Already initialized');\r\n        return;\r\n      }\r\n      \r\n      this.setupTargetElement();\r\n      this.initializeServices();\r\n      await this.initializeUser();\r\n      \r\n      this.createComponents();\r\n      await this.connectSignalR();\r\n      \r\n      this.initialized = true;\r\n      this.currentState = WIDGET_STATES.LANDING;\r\n      \r\n      const onReady = this.config.get('onWidgetReady');\r\n      if (onReady) {\r\n        onReady(this);\r\n      }\r\n      \r\n      this.showInitialView();\r\n      \r\n    } catch (error) {\r\n      console.error('EnhancedChatWidget: Initialization failed', error);\r\n      this.currentState = WIDGET_STATES.ERROR;\r\n      this.handleError(error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Setup target element\r\n   */\r\n  setupTargetElement() {\r\n    this.element.classList.add('tradr-widget', 'tradr-widget--enhanced');\r\n    this.element.classList.add(`tradr-widget-${this.config.get('theme')}`);\r\n    \r\n    this.element.style.width = this.config.get('width');\r\n    this.element.style.height = this.config.get('height');\r\n    \r\n    // Store widget instance reference for action handling\r\n    this.element.widgetInstance = this;\r\n    \r\n    this.element.style.setProperty('--tradr-primary-color', this.config.get('primaryColor'));\r\n    this.element.style.setProperty('--tradr-font-family', this.config.get('fontFamily'));\r\n  }\r\n  \r\n  /**\r\n   * Initialize the widget's intelligent services (THE BRAIN!)\r\n   */\r\n  initializeServices() {\r\n    console.log('🧠 Initializing widget intelligence...');\r\n    \r\n    // Core message store with intelligence\r\n    this.messageStore = new EnhancedMessageStore();\r\n    \r\n    // API client for backend communication\r\n    this.apiClient = new ApiClient(this.config);\r\n    \r\n    // Thinking manager for progressive loading states\r\n    this.thinkingManager = new ThinkingManager();\r\n    \r\n    // DAG processor for handling Model messages without visualization\r\n    this.dagProcessor = new DagProcessor(this.messageStore, this.apiClient, this.thinkingManager, this.config);\r\n    \r\n    // Action manager for smart button logic\r\n    this.actionManager = new ActionManager(this.messageStore, this.apiClient, this.thinkingManager);\r\n    \r\n    // Enhanced SignalR client with API client for auto-execution and thinking manager\r\n    this.signalRClient = new EnhancedSignalRClient(this.config, this.messageStore, this.apiClient, this.thinkingManager);\r\n    \r\n    // Load blocks data for DAG transformation (async but don't wait)\r\n    this.loadBlocksData();\r\n    \r\n    // Load currencies for symbol picker (async but don't wait)\r\n    this.loadCurrencies();\r\n    \r\n    // Inject CSS styles for thinking indicators\r\n    this.injectStyles();\r\n    \r\n    // Wire up the intelligence network\r\n    this.wireIntelligenceEvents();\r\n  }\r\n  \r\n  /**\r\n   * Inject CSS styles for widget components\r\n   */\r\n  injectStyles() {\r\n    if (this.stylesInjected) return;\r\n    \r\n    const styleSheet = document.createElement('style');\r\n    styleSheet.textContent = thinkingIndicatorStyles;\r\n    document.head.appendChild(styleSheet);\r\n    \r\n    this.stylesInjected = true;\r\n    console.log('🎨 Widget styles injected');\r\n  }\r\n  \r\n  /**\r\n   * Wire up all the intelligent event handling\r\n   */\r\n  wireIntelligenceEvents() {\r\n    console.log('🔗 Wiring intelligence events...');\r\n    \r\n    // === Message Store Intelligence Events ===\r\n    this.messageStore.on('message:added', (message) => {\r\n      console.log('💡 New message analyzed:', message.messageType);\r\n      this.handleIntelligentMessage(message);\r\n    });\r\n    \r\n    this.messageStore.on('milestone:update', (data) => {\r\n      console.log('🎯 Milestone updated:', data.milestone);\r\n      this.handleMilestoneUpdate(data);\r\n    });\r\n    \r\n    this.messageStore.on('dag:generated', (dagMetadata) => {\r\n      console.log('⚡ DAG generated:', dagMetadata);\r\n      this.handleDagGenerated(dagMetadata);\r\n    });\r\n    \r\n    // === SignalR Events ===\r\n    // Listen for different message types from SignalR client\r\n    this.signalRClient.on('chatMessage', (message) => {\r\n      console.log('📡 SignalR chatMessage received:', message.messageType);\r\n      this.handleSignalRMessage(message);\r\n    });\r\n    \r\n    this.signalRClient.on('templateMessage', (message) => {\r\n      console.log('📡 SignalR templateMessage received:', message.messageType);\r\n      this.handleSignalRMessage(message);\r\n    });\r\n    \r\n    this.signalRClient.on('modelMessage', (message) => {\r\n      console.log('📡 SignalR modelMessage received:', message.messageType);\r\n      this.handleSignalRMessage(message);\r\n    });\r\n    \r\n    // Fallback: listen for generic responseReceived event\r\n    this.signalRClient.on('responseReceived', (message) => {\r\n      console.log('📡 SignalR responseReceived:', message.messageType);\r\n      this.handleSignalRMessage(message);\r\n    });\r\n    \r\n    this.signalRClient.on('connected', () => {\r\n      console.log('🔗 SignalR connected');\r\n      this.onSignalRConnected();\r\n    });\r\n    \r\n    this.signalRClient.on('disconnected', () => {\r\n      console.log('💔 SignalR disconnected');\r\n      this.onSignalRDisconnected();\r\n    });\r\n    \r\n    // === Execution Events ===\r\n    this.signalRClient.on('executionStarting', (data) => {\r\n      console.log('⚡ Execution starting:', data.scenarioId);\r\n      this.handleExecutionStarting(data);\r\n    });\r\n    \r\n    this.signalRClient.on('executionCompleted', (message) => {\r\n      console.log('✅ Execution completed:', message.executionResult.Success);\r\n      this.handleExecutionCompleted(message);\r\n    });\r\n    \r\n    this.signalRClient.on('executionError', (message) => {\r\n      console.log('❌ Execution failed:', message.error);\r\n      this.handleExecutionError(message);\r\n    });\r\n    \r\n    // === Action Manager Events ===\r\n    this.actionManager.on('action:ask-question', (data) => {\r\n      this.showAnalysisInput(data.scenario);\r\n    });\r\n    \r\n    console.log('✅ Intelligence network online!');\r\n  }\r\n  \r\n  /**\r\n   * Load blocks data for DAG transformation and template selection\r\n   */\r\n  async loadBlocksData() {\r\n    try {\r\n      console.log('🔧 Loading blocks data for widget...');\r\n      \r\n      const blocksData = await this.apiClient.loadBlocksData();\r\n      \r\n      console.log('✅ Blocks data loaded successfully', {\r\n        totalBlocks: blocksData.totalBlocks,\r\n        totalGroups: blocksData.totalGroups,\r\n        totalTemplates: blocksData.totalTemplates\r\n      });\r\n      \r\n      // Enable auto-execution by default\r\n      this.config.set('autoExecuteAfterDag', true);\r\n      \r\n    } catch (error) {\r\n      console.warn('⚠️ Failed to load blocks data - DAG execution may fail', error);\r\n      \r\n      // Disable auto-execution if blocks data failed to load\r\n      this.config.set('autoExecuteAfterDag', false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load currencies for symbol picker\r\n   */\r\n  async loadCurrencies() {\r\n    console.log('🔧 Loading currencies for symbol picker...');\r\n    \r\n    try {\r\n      const currencies = await this.apiClient.loadCurrencies();\r\n      console.log('✅ Currencies loaded successfully', {\r\n        totalCurrencies: currencies.length,\r\n        groups: [...new Set(currencies.map(c => c.group))].length + ' groups'\r\n      });\r\n      \r\n      // Set default symbol if not already set\r\n      if (!this.config.get('defaultSymbol')) {\r\n        this.config.set('defaultSymbol', 'EURUSD');\r\n      }\r\n      \r\n      // Set default timeframe if not already set\r\n      if (!this.config.get('defaultTimeframe')) {\r\n        this.config.set('defaultTimeframe', '1H');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.warn('⚠️ Failed to load currencies - using default symbol', error);\r\n      \r\n      // Set fallback defaults\r\n      this.config.set('defaultSymbol', 'EURUSD');\r\n      this.config.set('defaultTimeframe', '1H');\r\n    }\r\n  }\r\n  \r\n  // ===== INTELLIGENT EVENT HANDLERS =====\r\n  \r\n  /**\r\n   * Handle new messages with intelligence analysis\r\n   */\r\n  handleIntelligentMessage(message) {\r\n    // Analyze message for required actions\r\n    const actions = this.messageStore.analyzeMessageForActions(message);\r\n    \r\n    // Update milestone if needed\r\n    if (actions.updateMilestone) {\r\n      this.messageStore.updateMilestone(actions.updateMilestone);\r\n    }\r\n    \r\n    // Start session if Template message\r\n    if (actions.startSession && message.sessionId) {\r\n      this.messageStore.startSession(message.sessionId, message.templateName || 'Template');\r\n    }\r\n    \r\n    // End session if needed\r\n    if (actions.endSession && message.sessionId) {\r\n      this.messageStore.endSession(message.sessionId);\r\n    }\r\n    \r\n    // Update journey type\r\n    if (this.messageStore.journeyType && !this.hasConversation) {\r\n      this.hasConversation = true;\r\n      this.showLandingPage = false;\r\n      this.updateMainUI();\r\n    }\r\n    \r\n    // Update action buttons based on new message\r\n    this.updateActionButtons();\r\n    \r\n    // Trigger evaluation if Model message\r\n    if (actions.triggerEvaluation) {\r\n      this.dagProcessor.processModelMessage(message);\r\n    }\r\n    \r\n    // Reset template processing flag when we receive Template or Model response\r\n    if (message.messageType === 'Template' || message.messageType === 'Model') {\r\n      this.processingTemplate = false;\r\n      console.log('🔄 Template processing completed, allowing new template selections');\r\n    }\r\n    \r\n    // Call external callbacks for appropriate message types\r\n    this.handleMessageCallback(message);\r\n  }\r\n  \r\n  /**\r\n   * Handle milestone updates\r\n   */\r\n  handleMilestoneUpdate(data) {\r\n    // Update milestone tracker UI\r\n    if (this.milestoneTracker) {\r\n      this.milestoneTracker.updateMilestone(data.milestone);\r\n    }\r\n    \r\n    // Emit milestone event for external listeners\r\n    const onMilestone = this.config.get('onMilestone');\r\n    if (onMilestone) {\r\n      onMilestone({\r\n        milestone: data.milestone,\r\n        journeyType: data.journeyType\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle DAG generation completion\r\n   */\r\n  handleDagGenerated(dagMetadata) {\r\n    console.log('🎉 DAG generated successfully!', dagMetadata);\r\n    \r\n    // Update UI to show DAG summary (already handled by storeDagMetadata)\r\n    this.updateMainUI();\r\n    \r\n    // Update action buttons (backtest might now be available)\r\n    this.updateActionButtons();\r\n  }\r\n  \r\n  /**\r\n   * Handle SignalR messages with intelligence\r\n   */\r\n  handleSignalRMessage(message) {\r\n    console.log('🟡 handleSignalRMessage called with:', {\r\n      messageType: message.messageType,\r\n      hasAiResponse: !!message.aiResponse,\r\n      currentWaitingState: this.waitingForResponse\r\n    });\r\n    \r\n    // Stop any thinking indicators for this request\r\n    if (message.requestId) {\r\n      this.thinkingManager.stopThinking(message.requestId);\r\n    }\r\n    \r\n    if (message.scenarioId) {\r\n      this.thinkingManager.stopThinking(`eval-${message.scenarioId}`);\r\n    }\r\n    \r\n    // CRITICAL: Reset waiting state when content messages arrive\r\n    // This matches the main app behavior - reset on each content message\r\n    if (message.messageType && message.aiResponse) {\r\n      console.log('🔓 CONDITION MET: Resetting waiting state - AI response received:', message.messageType);\r\n      console.log('🔓 Before setWaitingState(false):', this.waitingForResponse);\r\n      this.setWaitingState(false);\r\n      console.log('🔓 After setWaitingState(false):', this.waitingForResponse);\r\n    } else {\r\n      console.log('🔴 CONDITION NOT MET:', {\r\n        hasMessageType: !!message.messageType,\r\n        hasAiResponse: !!message.aiResponse,\r\n        messageType: message.messageType\r\n      });\r\n    }\r\n    \r\n    // Route based on message type\r\n    // Note: SignalR client already added these messages to store in its handlers\r\n    switch (message.messageType) {\r\n      case 'Model':\r\n        // Model messages are handled via actions.triggerEvaluation logic above\r\n        // to avoid duplicate processing\r\n        console.log('📝 Model message will be processed by triggerEvaluation logic');\r\n        break;\r\n        \r\n      case 'Text':\r\n      case 'Steps':\r\n      case 'Scenario':\r\n      case 'Template':\r\n      case 'Analysis':\r\n      case 'Explanation':\r\n        // Message already added to store by SignalR client handlers\r\n        console.log('📝 Message processed by SignalR client:', message.messageType);\r\n        break;\r\n        \r\n      default:\r\n        console.log('📝 Unknown message type received:', message.messageType);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle execution starting event\r\n   */\r\n  handleExecutionStarting(data) {\r\n    // Show execution progress indicator\r\n    const executionMessage = {\r\n      id: `execution-starting-${Date.now()}`,\r\n      content: `⚡ Executing DAG with ${data.dagBlocks.length} blocks...`,\r\n      messageType: 'ExecutionStatus',\r\n      type: 'system',\r\n      scenarioId: data.scenarioId,\r\n      timestamp: new Date().toISOString(),\r\n      isExecuting: true\r\n    };\r\n    \r\n    this.messageStore.addMessage(executionMessage);\r\n    this.updateChatDisplay();\r\n    \r\n    // Show thinking indicator for execution\r\n    this.thinkingManager.showThinking(`execution-${data.scenarioId}`, 'Executing model...');\r\n  }\r\n  \r\n  /**\r\n   * Handle execution completed event\r\n   */\r\n  handleExecutionCompleted(message) {\r\n    const result = message.executionResult;\r\n    \r\n    // Stop thinking indicator\r\n    this.thinkingManager.stopThinking(`execution-${message.scenarioId}`);\r\n    \r\n    // Create result display message\r\n    const resultMessage = {\r\n      id: `execution-result-${Date.now()}`,\r\n      content: this.formatExecutionResult(result),\r\n      messageType: 'ExecutionResult',\r\n      type: 'system',\r\n      scenarioId: message.scenarioId,\r\n      executionResult: result,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    this.messageStore.addMessage(resultMessage);\r\n    this.updateChatDisplay();\r\n    \r\n    console.log('✅ Execution completed and displayed:', {\r\n      success: result.Success,\r\n      records: result.TotalRecords,\r\n      scenarioId: result.ScenarioId\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle execution error event  \r\n   */\r\n  handleExecutionError(message) {\r\n    // Stop thinking indicator\r\n    this.thinkingManager.stopThinking(`execution-${message.scenarioId}`);\r\n    \r\n    // Create error display message\r\n    const errorMessage = {\r\n      id: `execution-error-${Date.now()}`,\r\n      content: `❌ Execution failed: ${message.error}`,\r\n      messageType: 'ExecutionError',\r\n      type: 'system',\r\n      scenarioId: message.scenarioId,\r\n      error: message.error,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    this.messageStore.addMessage(errorMessage);\r\n    this.updateChatDisplay();\r\n    \r\n    console.error('❌ Execution failed and displayed:', message.error);\r\n  }\r\n  \r\n  /**\r\n   * Retry execution for a failed scenario\r\n   */\r\n  async retryExecution(scenarioId) {\r\n    console.log('🔄 Retrying execution for scenario:', scenarioId);\r\n    \r\n    try {\r\n      // Check if we have stored scenario data for this scenario\r\n      const storedData = this.dagProcessor.getStoredDagData(scenarioId);\r\n      if (!storedData) {\r\n        throw new Error('No scenario data found for retry. Please regenerate the model first.');\r\n      }\r\n      \r\n      // Show thinking indicator\r\n      const requestId = `retry-exec-${scenarioId}`;\r\n      this.thinkingManager.startThinking(requestId, '🔄 Retrying execution...');\r\n      \r\n      // Re-trigger evaluation using the stored scenario data\r\n      // This will use the same DAG structure and parameters as the original execution\r\n      await this.dagProcessor.triggerEvaluation(scenarioId, `retry-${Date.now()}`, storedData);\r\n      \r\n      console.log('✅ Retry execution initiated successfully');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Retry execution failed:', error);\r\n      \r\n      // Stop thinking indicator\r\n      this.thinkingManager.stopThinking(`retry-exec-${scenarioId}`);\r\n      \r\n      // Add retry error message\r\n      this.messageStore.addMessage({\r\n        id: `retry-error-${Date.now()}`,\r\n        type: 'system',\r\n        messageType: 'Error',\r\n        content: `❌ **Retry Failed**\\n\\n${error.message}\\n\\nYou may need to regenerate the model or check the scenario parameters.`,\r\n        timestamp: Date.now(),\r\n        scenarioId: scenarioId\r\n      });\r\n      \r\n      throw error; // Re-throw for the UI to handle\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Format execution result for display\r\n   */\r\n  formatExecutionResult(result) {\r\n    if (!result.Success) {\r\n      return `❌ Execution failed: ${result.ErrorMessage || 'Unknown error'}`;\r\n    }\r\n    \r\n    if (result.TotalRecords === 0) {\r\n      return `⚠️ Execution completed but returned no data. Check your strategy parameters.`;\r\n    }\r\n    \r\n    const dateRange = result.FirstDate && result.LastDate \r\n      ? `from ${result.FirstDate} to ${result.LastDate}`\r\n      : '';\r\n      \r\n    return `✅ Execution completed successfully! \r\n📊 Found ${result.TotalRecords} trading opportunities ${dateRange}\r\n📈 Columns: ${result.Columns.join(', ')}`;\r\n  }\r\n  \r\n  /**\r\n   * Update action buttons based on current state\r\n   */\r\n  updateActionButtons() {\r\n    const actions = this.actionManager.getAvailableActions();\r\n    const actionsContainer = this.element.querySelector('.tlw-actions-container');\r\n    \r\n    if (!actionsContainer) {\r\n      console.warn('Actions container not found');\r\n      return;\r\n    }\r\n    \r\n    // Clear existing buttons\r\n    actionsContainer.innerHTML = '';\r\n    \r\n    // Add available action buttons\r\n    actions.forEach(action => {\r\n      if (!action.visible) return;\r\n      \r\n      const button = document.createElement('button');\r\n      button.className = `tlw-action-btn ${action.primary ? 'primary' : 'secondary'}`;\r\n      button.innerHTML = action.label;\r\n      button.title = action.description;\r\n      button.disabled = action.disabled || this.actionManager.areActionsDisabled();\r\n      \r\n      button.addEventListener('click', async () => {\r\n        try {\r\n          console.log('🔥 Executing action:', action.id);\r\n          await action.action();\r\n        } catch (error) {\r\n          console.error('❌ Action failed:', error);\r\n          this.handleActionError(action, error);\r\n        }\r\n      });\r\n      \r\n      actionsContainer.appendChild(button);\r\n    });\r\n    \r\n    console.log('🔄 Action buttons updated:', actions.map(a => a.id));\r\n  }\r\n  \r\n  /**\r\n   * Handle action execution errors\r\n   */\r\n  handleActionError(action, error) {\r\n    // Add error message to chat\r\n    this.messageStore.addMessage({\r\n      id: `error-${Date.now()}`,\r\n      type: 'system',\r\n      messageType: 'Error',\r\n      content: `❌ **${action.label} Failed**\\n\\n${error.message}\\n\\nPlease try again or contact support if the problem persists.`,\r\n      timestamp: Date.now()\r\n    });\r\n    \r\n    // Update UI\r\n    this.updateMainUI();\r\n  }\r\n  \r\n  /**\r\n   * Update main UI based on current state\r\n   */\r\n  updateMainUI() {\r\n    if (this.showLandingPage && !this.hasConversation) {\r\n      this.showLandingView();\r\n    } else {\r\n      this.showChatView();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show landing page view\r\n   */\r\n  showLandingView() {\r\n    console.log('🏠 Showing landing page');\r\n    \r\n    if (!this.landingPage) {\r\n      this.landingPage = new LandingPage(\r\n        this.element,\r\n        this.config,\r\n        this.apiClient,\r\n        this.messageStore,\r\n        this.thinkingManager\r\n      );\r\n    }\r\n    \r\n    // Hide chat container\r\n    if (this.chatContainer && this.chatContainer.element) {\r\n      this.chatContainer.element.style.display = 'none';\r\n    }\r\n    \r\n    // Show landing page\r\n    this.landingPage.render();\r\n  }\r\n  \r\n  /**\r\n   * Show chat view\r\n   */\r\n  showChatView() {\r\n    console.log('💬 Showing chat view');\r\n    \r\n    if (!this.chatContainer) {\r\n      this.chatContainer = new ChatContainer(\r\n        this.element.querySelector('#chat-container'),\r\n        this.config,\r\n        this.messageStore,\r\n        this.apiClient,\r\n        this.signalRClient\r\n      );\r\n    }\r\n    \r\n    // Hide landing page\r\n    if (this.landingPage && this.landingPage.element) {\r\n      this.landingPage.element.style.display = 'none';\r\n    }\r\n    \r\n    // Show chat container\r\n    this.chatContainer.render();\r\n    \r\n    // Attach event listeners if not already attached\r\n    this.attachChatEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Show analysis input for questions\r\n   */\r\n  showAnalysisInput(scenario) {\r\n    // This could be a modal or inline input\r\n    const question = prompt('What would you like to analyze?');\r\n    \r\n    if (question && question.trim()) {\r\n      this.actionManager.sendAnalysisQuestion(question.trim())\r\n        .catch(error => {\r\n          console.error('Analysis question failed:', error);\r\n        });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * SignalR connection established\r\n   */\r\n  onSignalRConnected() {\r\n    // Update connection status in UI if needed\r\n    this.currentState = WIDGET_STATES.READY;\r\n  }\r\n  \r\n  /**\r\n   * SignalR connection lost\r\n   */\r\n  onSignalRDisconnected() {\r\n    // Show reconnection indicator\r\n    this.currentState = WIDGET_STATES.RECONNECTING;\r\n  }\r\n  \r\n  /**\r\n   * Initialize user (same as base widget)\r\n   */\r\n  async initializeUser() {\r\n    const externalUserId = this.config.get('externalUserId');\r\n    \r\n    if (!externalUserId) {\r\n      throw new Error('EnhancedChatWidget: External user ID is required');\r\n    }\r\n    \r\n    try {\r\n      // Get JWT token for SignalR authentication\r\n      const tokenResponse = await this.apiClient.getJwtToken();\r\n      \r\n      this.config.set('userId', tokenResponse.userId);\r\n      this.config.set('jwtToken', tokenResponse.jwtToken || tokenResponse.token);\r\n      this.config.set('tokenExpires', tokenResponse.tokenExpires || tokenResponse.expiresAt);\r\n      \r\n      if (!this.config.get('signalRUrl')) {\r\n        const apiBaseUrl = this.config.get('apiBaseUrl');\r\n        this.config.set('signalRUrl', `${apiBaseUrl}/hubs/message`);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('EnhancedChatWidget: Failed to initialize user', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create all components\r\n   */\r\n  createComponents() {\r\n    // Create main container structure\r\n    this.element.innerHTML = `\r\n      <div class=\"tlw-widget-container\">\r\n        <div class=\"tlw-milestone-container\" id=\"milestone-container\"></div>\r\n        <div class=\"tlw-landing-container\" id=\"landing-container\"></div>\r\n        <div class=\"tlw-chat-container\" id=\"chat-container\"></div>\r\n      </div>\r\n    `;\r\n    \r\n    // Create milestone tracker\r\n    this.createMilestoneTracker();\r\n    \r\n    // Create landing page\r\n    this.createLandingPage();\r\n    \r\n    // Create chat container\r\n    this.createChatContainer();\r\n    \r\n    // Create modals\r\n    this.createModals();\r\n  }\r\n  \r\n  /**\r\n   * Create milestone tracker\r\n   */\r\n  createMilestoneTracker() {\r\n    const container = this.element.querySelector('#milestone-container');\r\n    this.milestoneTracker = new MilestoneTracker(container, {\r\n      onMilestoneClick: (milestone) => this.handleMilestoneClick(milestone)\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Create landing page\r\n   */\r\n  createLandingPage() {\r\n    const container = this.element.querySelector('#landing-container');\r\n    this.landingPage = new LandingPage(container, {\r\n      onSelection: (selection) => this.handleLandingSelection(selection),\r\n      onTemplateRequest: () => this.showTemplateModal(),\r\n      onWizardRequest: () => this.showScenarioWizard(),\r\n      showBranding: this.config.get('showBranding', true)\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Create enhanced chat container\r\n   */\r\n  createChatContainer() {\r\n    const container = this.element.querySelector('#chat-container');\r\n    \r\n    // Enhanced chat container with Generate Scenario button\r\n    container.innerHTML = this.renderChatInterface();\r\n    \r\n    this.attachChatEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Render chat interface\r\n   */\r\n  renderChatInterface() {\r\n    return `\r\n      <div class=\"tlw-chat-header\">\r\n        <button class=\"tlw-back-btn\" id=\"back-to-landing\" ${!this.hasConversation ? 'style=\"display: none;\"' : ''}>\r\n          ← Back\r\n        </button>\r\n        <div class=\"tlw-chat-title\">TradrLab Assistant</div>\r\n      </div>\r\n      \r\n      <div class=\"tlw-messages\" id=\"messages-container\">\r\n        ${this.renderMessages()}\r\n      </div>\r\n      \r\n      <div class=\"tlw-chat-controls\">\r\n        ${this.renderGenerateButton()}\r\n        <div class=\"tlw-input-container\">\r\n          <textarea \r\n            class=\"tlw-message-input\" \r\n            id=\"message-input\"\r\n            placeholder=\"Ask a question or describe your trading idea...\"\r\n            rows=\"1\"\r\n          ></textarea>\r\n          <button class=\"tlw-send-btn\" id=\"send-button\" ${this.waitingForResponse ? 'disabled' : ''}>\r\n            ${this.waitingForResponse ? '⏳' : 'Send'}\r\n          </button>\r\n        </div>\r\n        ${this.waitingForResponse ? '<div class=\"tlw-thinking\">AI is thinking...</div>' : ''}\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render Generate Scenario button\r\n   */\r\n  renderGenerateButton() {\r\n    const canGenerate = this.hasConversation && !this.waitingForResponse && \r\n                       this.messageStore.journeyType === 'interactive';\r\n    \r\n    if (!canGenerate) {\r\n      return '';\r\n    }\r\n    \r\n    return `\r\n      <div class=\"tlw-generate-container\">\r\n        <button class=\"tlw-generate-btn\" id=\"generate-scenario\">\r\n          🚀 Generate Scenario\r\n        </button>\r\n        <span class=\"tlw-generate-hint\">Ready to create your trading model?</span>\r\n      </div>\r\n    `;\r\n  }\r\n  \r\n  /**\r\n   * Render messages\r\n   */\r\n  renderMessages() {\r\n    const messages = this.messageStore.getMessages();\r\n    \r\n    if (messages.length === 0) {\r\n      return `\r\n        <div class=\"tlw-welcome-message\">\r\n          <div class=\"tlw-welcome-icon\">👋</div>\r\n          <h3>Welcome to TradrLab!</h3>\r\n          <p>I'm here to help you create and test trading scenarios. What would you like to build today?</p>\r\n        </div>\r\n      `;\r\n    }\r\n    \r\n    return messages.map(message => this.renderMessage(message)).join('');\r\n  }\r\n  \r\n  /**\r\n   * Render individual message\r\n   */\r\n  renderMessage(message) {\r\n    const renderer = MessageRenderer.create(message);\r\n    return renderer.render();\r\n  }\r\n  \r\n  /**\r\n   * Attach chat event listeners\r\n   */\r\n  attachChatEventListeners() {\r\n    // Back button\r\n    const backBtn = this.element.querySelector('#back-to-landing');\r\n    if (backBtn) {\r\n      backBtn.addEventListener('click', () => this.showLandingPage());\r\n    }\r\n    \r\n    // Generate scenario button\r\n    const generateBtn = this.element.querySelector('#generate-scenario');\r\n    if (generateBtn) {\r\n      generateBtn.addEventListener('click', () => this.generateScenario());\r\n    }\r\n    \r\n    // Message input\r\n    const messageInput = this.element.querySelector('#message-input');\r\n    const sendButton = this.element.querySelector('#send-button');\r\n    \r\n    if (messageInput && sendButton) {\r\n      // Auto-resize textarea\r\n      messageInput.addEventListener('input', () => {\r\n        messageInput.style.height = 'auto';\r\n        messageInput.style.height = Math.min(messageInput.scrollHeight, 120) + 'px';\r\n      });\r\n      \r\n      // Send on Enter (but allow Shift+Enter for new lines)\r\n      messageInput.addEventListener('keydown', (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n          e.preventDefault();\r\n          this.sendMessage();\r\n        }\r\n      });\r\n      \r\n      // Send button click\r\n      sendButton.addEventListener('click', () => this.sendMessage());\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Create modal components\r\n   */\r\n  createModals() {\r\n    // Template modal\r\n    this.templateModal = new TemplateModal({\r\n      apiClient: this.apiClient,\r\n      onSelect: (template) => this.handleTemplateSelection(template),\r\n      onClose: () => console.log('Template modal closed')\r\n    });\r\n    \r\n    // Scenario wizard\r\n    this.scenarioWizard = new ScenarioWizard({\r\n      onComplete: (result) => this.handleWizardComplete(result),\r\n      onClose: () => console.log('Wizard closed')\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Connect to SignalR\r\n   */\r\n  async connectSignalR() {\r\n    console.log('🔌 EnhancedChatWidget: Calling connectSignalR()...');\r\n    try {\r\n      console.log('🔌 EnhancedChatWidget: About to call signalRClient.connect()');\r\n      await this.signalRClient.connect();\r\n      console.log('🔌 EnhancedChatWidget: SignalR connection completed');\r\n    } catch (error) {\r\n      console.error('🔌 EnhancedChatWidget: SignalR connection failed', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle landing page selection\r\n   */\r\n  handleLandingSelection(selection) {\r\n    this.showChatInterface();\r\n    this.messageStore.setJourneyType('interactive');\r\n    \r\n    // Send the initial message\r\n    setTimeout(() => {\r\n      this.sendMessageToApi(selection.content);\r\n    }, 300);\r\n  }\r\n  \r\n  /**\r\n   * Handle template selection\r\n   */\r\n  async handleTemplateSelection(template) {\r\n    // Prevent duplicate template processing\r\n    if (this.processingTemplate) {\r\n      console.log('🔄 Template processing already in progress, ignoring duplicate selection');\r\n      return;\r\n    }\r\n    \r\n    this.processingTemplate = true;\r\n    this.showChatInterface();\r\n    this.messageStore.setJourneyType('template');\r\n    \r\n    // Add template selection message to chat\r\n    this.messageStore.addMessage({\r\n      id: `template-${template.id}-${Date.now()}`,\r\n      type: 'user',\r\n      content: `Selected template: ${template.name}`,\r\n      messageType: 'TemplateSelection',\r\n      templateId: template.id,\r\n      templateName: template.name\r\n    });\r\n    \r\n    try {\r\n      // Send template to API for processing\r\n      await this.sendTemplateToApi(template);\r\n    } catch (error) {\r\n      console.error('❌ Template processing failed:', error);\r\n    } finally {\r\n      // Reset flag to allow new template selections\r\n      this.processingTemplate = false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle wizard completion\r\n   */\r\n  handleWizardComplete(result) {\r\n    this.showChatInterface();\r\n    this.messageStore.setJourneyType('interactive');\r\n    \r\n    // Add wizard result to chat\r\n    this.messageStore.addMessage({\r\n      id: `wizard-${Date.now()}`,\r\n      type: 'user',\r\n      content: result.prompt,\r\n      messageType: 'WizardResult',\r\n      wizardAnswers: result.answers\r\n    });\r\n    \r\n    // Send to API\r\n    setTimeout(() => {\r\n      this.sendMessageToApi(result.prompt);\r\n    }, 300);\r\n  }\r\n  \r\n  /**\r\n   * Send message\r\n   */\r\n  async sendMessage(content) {\r\n    // If content is provided, send it directly (public API)\r\n    if (content) {\r\n      if (this.waitingForResponse) {\r\n        return;\r\n      }\r\n      \r\n      // Add user message\r\n      this.messageStore.addMessage({\r\n        id: `user-${Date.now()}`,\r\n        type: 'user',\r\n        content: content,\r\n        messageType: 'Text'\r\n      });\r\n      \r\n      this.hasConversation = true;\r\n      await this.sendMessageToApi(content);\r\n      return;\r\n    }\r\n    \r\n    // Otherwise, get content from input field (internal UI)\r\n    const input = this.element.querySelector('#message-input');\r\n    if (!input) return;\r\n    \r\n    const inputContent = input.value.trim();\r\n    \r\n    if (!inputContent || this.waitingForResponse) {\r\n      return;\r\n    }\r\n    \r\n    // Clear input\r\n    input.value = '';\r\n    input.style.height = 'auto';\r\n    \r\n    // Add user message\r\n    this.messageStore.addMessage({\r\n      id: `user-${Date.now()}`,\r\n      type: 'user',\r\n      content: inputContent,\r\n      messageType: 'Text'\r\n    });\r\n    \r\n    this.hasConversation = true;\r\n    await this.sendMessageToApi(inputContent);\r\n  }\r\n  \r\n  /**\r\n   * Send message to API\r\n   */\r\n  async sendMessageToApi(content) {\r\n    try {\r\n      this.setWaitingState(true);\r\n      \r\n      // Start thinking indicator for chat message with timeout handling\r\n      const requestId = `chat-${Date.now()}`;\r\n      \r\n      // Define timeout handler for chat messages\r\n      const handleChatTimeout = (reqId, shouldRetry) => {\r\n        console.warn(`⏰ EnhancedChatWidget: Chat request ${reqId} timed out`);\r\n        \r\n        // Reset waiting state\r\n        this.setWaitingState(false);\r\n        \r\n        // Add timeout error message\r\n        this.messageStore.addMessage({\r\n          id: `chat-timeout-${Date.now()}`,\r\n          type: 'system',\r\n          messageType: 'Error',\r\n          content: `❌ **Request Timed Out**\\n\\nThe AI engine did not respond within the expected time.\\n\\n${shouldRetry ? 'Retrying...' : 'Please try sending your message again.'}`,\r\n          timestamp: Date.now()\r\n        });\r\n        \r\n        // If retry was requested, resend the message\r\n        if (shouldRetry) {\r\n          console.log('🔄 EnhancedChatWidget: Retrying chat message after timeout');\r\n          setTimeout(() => {\r\n            this.sendMessageToApi(content);\r\n          }, 1000);\r\n        }\r\n      };\r\n      \r\n      // Start thinking with 60 second timeout for chat\r\n      this.thinkingManager.startThinking(requestId, '/chat', '💭 Thinking...', handleChatTimeout, 60000);\r\n      \r\n      // Ensure we have a ScenarioId before sending messages\r\n      // Create scenario if this is the first message\r\n      if (!this.config.get('scenarioId')) {\r\n        console.log('EnhancedChatWidget: Creating scenario for first message');\r\n        await this.apiClient.createScenario('New Scenario');\r\n      }\r\n      \r\n      const socketId = this.signalRClient.getConnectionId();\r\n      \r\n      // Use ApiClient.sendMessage to handle ScenarioId generation and storage\r\n      await this.apiClient.sendMessage(content, {\r\n        messageType: 'Text',\r\n        socketId: socketId\r\n      });\r\n      \r\n      // Note: Thinking indicator will be stopped when we receive the AI response via SignalR\r\n      \r\n    } catch (error) {\r\n      console.error('EnhancedChatWidget: Failed to send message', error);\r\n      this.setWaitingState(false);\r\n      // Stop thinking indicator on error\r\n      this.thinkingManager.stopAll();\r\n      this.handleError(error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send template to API\r\n   */\r\n  async sendTemplateToApi(template) {\r\n    try {\r\n      this.setWaitingState(true);\r\n      \r\n      // Start thinking indicator with template-specific message\r\n      const requestId = `template-${Date.now()}`;\r\n      const templateMessage = `🎯 Processing template: ${template.name}...`;\r\n      console.log('🎯 EnhancedChatWidget: Starting template thinking indicator', { templateName: template.name });\r\n      \r\n      // Define timeout handler for template processing\r\n      const handleTemplateTimeout = (reqId, shouldRetry) => {\r\n        console.warn(`⏰ EnhancedChatWidget: Template request ${reqId} timed out`);\r\n        \r\n        // Reset waiting state\r\n        this.setWaitingState(false);\r\n        \r\n        // Add timeout error message\r\n        this.messageStore.addMessage({\r\n          id: `template-timeout-${Date.now()}`,\r\n          type: 'system',\r\n          messageType: 'Error',\r\n          content: `❌ **Template Processing Timed Out**\\n\\nThe AI engine did not respond to template \"${template.name}\" within the expected time.\\n\\n${shouldRetry ? 'Retrying...' : 'Please try selecting the template again.'}`,\r\n          timestamp: Date.now()\r\n        });\r\n        \r\n        // If retry was requested, resend the template\r\n        if (shouldRetry) {\r\n          console.log('🔄 EnhancedChatWidget: Retrying template after timeout');\r\n          setTimeout(() => {\r\n            this.sendTemplateToApi(template);\r\n          }, 1000);\r\n        }\r\n      };\r\n      \r\n      // Start thinking with template message and 60 second timeout\r\n      this.thinkingManager.startThinking(requestId, '/chat', templateMessage, handleTemplateTimeout, 60000);\r\n      \r\n      // Ensure we have a ScenarioId before sending messages\r\n      // Create scenario if this is the first message\r\n      if (!this.config.get('scenarioId')) {\r\n        console.log('EnhancedChatWidget: Creating scenario for template');\r\n        await this.apiClient.createScenario(template.name);\r\n      }\r\n      \r\n      const socketId = this.signalRClient.getConnectionId();\r\n      \r\n      // Send only the template description to the backend for DAG generation\r\n      // This ensures the AI engine gets clean trading logic without template metadata\r\n      await this.apiClient.sendMessage(template.description, {\r\n        messageType: 'TemplateSelection',\r\n        socketId: socketId,\r\n        templateId: template.id,\r\n        templateName: template.name\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('EnhancedChatWidget: Failed to send template', error);\r\n      this.setWaitingState(false);\r\n      this.handleError(error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Generate scenario from conversation\r\n   */\r\n  async generateScenario() {\r\n    try {\r\n      console.log('🚀 GENERATE SCENARIO: Starting DAG generation process');\r\n      \r\n      this.setWaitingState(true);\r\n      this.messageStore.updateMilestone('model');\r\n      \r\n      const conversationSummary = this.messageStore.getConversationSummary();\r\n      const socketId = this.signalRClient.getConnectionId();\r\n      const scenarioId = this.config.get('scenarioId');\r\n      const sessionId = this.config.get('sessionId');\r\n      const externalUserId = this.config.get('externalUserId');\r\n      \r\n      console.log('📋 GENERATE SCENARIO: Current IDs:', {\r\n        socketId: socketId,\r\n        scenarioId: scenarioId,\r\n        sessionId: sessionId,\r\n        externalUserId: externalUserId,\r\n        conversationLength: conversationSummary?.length\r\n      });\r\n      \r\n      // Use the dedicated generateScenario method instead of generic post()\r\n      // This ensures ExternalUserId is included properly\r\n      const response = await this.apiClient.generateScenario({\r\n        conversationContext: conversationSummary,\r\n        socketId: socketId,\r\n        sessionId: sessionId,\r\n        scenarioId: scenarioId\r\n      });\r\n      \r\n      console.log('📥 GENERATE SCENARIO: Response received from backend:', response);\r\n      console.log('⏳ GENERATE SCENARIO: Now waiting for DAG via SignalR...');\r\n      \r\n    } catch (error) {\r\n      console.error('❌ GENERATE SCENARIO ERROR:', error);\r\n      this.setWaitingState(false);\r\n      this.handleError(error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle message store events\r\n   */\r\n  handleMessageStoreEvent(event) {\r\n    switch(event.action) {\r\n      case 'message:add':\r\n        this.updateChatDisplay();\r\n        break;\r\n        \r\n      case 'milestone:update':\r\n        this.milestoneTracker.updateMilestone(event.data.milestone);\r\n        break;\r\n        \r\n      case 'session:start':\r\n      case 'session:end':\r\n        this.updateChatDisplay();\r\n        break;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle different message types from SignalR\r\n   */\r\n  handleChatMessage(message) {\r\n    this.updateChatDisplay();\r\n  }\r\n  \r\n  handleTemplateMessage(message) {\r\n    this.updateChatDisplay();\r\n  }\r\n  \r\n  handleModelMessage(message) {\r\n    this.generatedScenarios.push(message);\r\n    this.updateChatDisplay();\r\n  }\r\n  \r\n  handleAnalysisMessage(message) {\r\n    this.updateChatDisplay();\r\n  }\r\n  \r\n  handleTemplateReady(message) {\r\n    // Template is ready for processing\r\n    console.log('Template ready for processing:', message);\r\n  }\r\n  \r\n  handleDagGenerated(message) {\r\n    // DAG has been generated\r\n    console.log('DAG generated:', message);\r\n    this.messageStore.updateMilestone('evaluate');\r\n  }\r\n  \r\n  /**\r\n   * Set waiting state\r\n   */\r\n  setWaitingState(waiting) {\r\n    this.waitingForResponse = waiting;\r\n    this.signalRClient.setWaitingForResponse(waiting);\r\n    \r\n    if (this.currentState === WIDGET_STATES.CHATTING) {\r\n      this.updateChatControls();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update chat display\r\n   */\r\n  updateChatDisplay() {\r\n    const container = this.element.querySelector('#chat-container');\r\n    if (container) {\r\n      container.innerHTML = this.renderChatInterface();\r\n      this.attachChatEventListeners();\r\n      \r\n      // Scroll to bottom\r\n      const messagesContainer = container.querySelector('#messages-container');\r\n      if (messagesContainer) {\r\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update only chat controls (more efficient)\r\n   */\r\n  updateChatControls() {\r\n    const controls = this.element.querySelector('.tlw-chat-controls');\r\n    if (controls) {\r\n      const generateContainer = controls.querySelector('.tlw-generate-container');\r\n      const sendButton = controls.querySelector('#send-button');\r\n      const thinkingDiv = controls.querySelector('.tlw-thinking');\r\n      \r\n      // Update generate button\r\n      const shouldShowGenerate = this.hasConversation && !this.waitingForResponse && \r\n                                this.messageStore.journeyType === 'interactive';\r\n      \r\n      if (generateContainer) {\r\n        generateContainer.style.display = shouldShowGenerate ? 'block' : 'none';\r\n      }\r\n      \r\n      // Update send button\r\n      if (sendButton) {\r\n        sendButton.disabled = this.waitingForResponse;\r\n        sendButton.textContent = this.waitingForResponse ? '⏳' : 'Send';\r\n      }\r\n      \r\n      // Update thinking indicator\r\n      if (thinkingDiv) {\r\n        thinkingDiv.style.display = this.waitingForResponse ? 'block' : 'none';\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show initial view\r\n   */\r\n  showInitialView() {\r\n    if (this.showLandingPage) {\r\n      this.showLandingView();\r\n    } else {\r\n      this.showChatView();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show landing page\r\n   */\r\n  showLandingPageView() {\r\n    this.currentState = WIDGET_STATES.LANDING;\r\n    \r\n    const landingContainer = this.element.querySelector('#landing-container');\r\n    const chatContainer = this.element.querySelector('#chat-container');\r\n    \r\n    if (landingContainer) {\r\n      landingContainer.style.display = 'block';\r\n      this.landingPage.show();\r\n    }\r\n    \r\n    if (chatContainer) {\r\n      chatContainer.style.display = 'none';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Show chat interface\r\n   */\r\n  showChatInterface() {\r\n    this.currentState = WIDGET_STATES.CHATTING;\r\n    \r\n    const landingContainer = this.element.querySelector('#landing-container');\r\n    const chatContainer = this.element.querySelector('#chat-container');\r\n    \r\n    if (landingContainer) {\r\n      landingContainer.style.display = 'none';\r\n      this.landingPage.hide();\r\n    }\r\n    \r\n    if (chatContainer) {\r\n      chatContainer.style.display = 'block';\r\n    }\r\n    \r\n    this.updateChatDisplay();\r\n    \r\n    // Focus input\r\n    setTimeout(() => {\r\n      const input = this.element.querySelector('#message-input');\r\n      if (input) {\r\n        input.focus();\r\n      }\r\n    }, 100);\r\n  }\r\n  \r\n  /**\r\n   * Show template modal\r\n   */\r\n  showTemplateModal() {\r\n    this.templateModal.show();\r\n  }\r\n  \r\n  /**\r\n   * Show scenario wizard\r\n   */\r\n  showScenarioWizard() {\r\n    this.scenarioWizard.show();\r\n  }\r\n  \r\n  /**\r\n   * Handle milestone click\r\n   */\r\n  handleMilestoneClick(milestone) {\r\n    console.log('Milestone clicked:', milestone);\r\n    // Could show milestone-specific information or navigation\r\n  }\r\n  \r\n  /**\r\n   * Handle errors\r\n   */\r\n  handleError(error) {\r\n    const onError = this.config.get('onError');\r\n    if (onError) {\r\n      onError(error);\r\n    } else {\r\n      this.messageStore.addMessage({\r\n        id: `error-${Date.now()}`,\r\n        type: 'error',\r\n        content: 'An error occurred. Please try again.',\r\n        messageType: 'Error'\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle message callbacks (for external callbacks like onMessageReceived)\r\n   */\r\n  handleMessageCallback(message) {\r\n    console.log('🎯 Processing message callback:', message.messageType);\r\n    \r\n    // Call onMessageReceived callback for AI messages (system messages, execution results, etc.)\r\n    if (message.type === 'ai' || message.type === 'system') {\r\n      const callback = this.config.get('onMessageReceived');\r\n      if (callback && typeof callback === 'function') {\r\n        console.log('🎯 Calling onMessageReceived for:', message.messageType);\r\n        callback(message);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle milestone updates\r\n   */\r\n  handleMilestoneUpdate(data) {\r\n    console.log('🎯 Milestone updated:', data.milestone);\r\n    // Milestone updates are handled internally by the widget\r\n  }\r\n  \r\n  /**\r\n   * Handle DAG generation events\r\n   */\r\n  handleDagGenerated(dagMetadata) {\r\n    console.log('🎯 DAG generated:', dagMetadata.scenarioId);\r\n    // DAG generation is handled by the DagProcessor\r\n  }\r\n  \r\n  /**\r\n   * Destroy the widget\r\n   */\r\n  destroy() {\r\n    try {\r\n      if (this.signalRClient) {\r\n        this.signalRClient.disconnect();\r\n      }\r\n      \r\n      if (this.templateModal) {\r\n        this.templateModal.destroy();\r\n      }\r\n      \r\n      if (this.scenarioWizard) {\r\n        this.scenarioWizard.destroy();\r\n      }\r\n      \r\n      this.element.innerHTML = '';\r\n      this.element.classList.remove('tradr-widget', 'tradr-widget--enhanced', \r\n                                   `tradr-widget-${this.config.get('theme')}`);\r\n      \r\n      this.initialized = false;\r\n      this.currentState = WIDGET_STATES.DISCONNECTED;\r\n      \r\n    } catch (error) {\r\n      console.error('EnhancedChatWidget: Error during destruction', error);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get widget state\r\n   */\r\n  getState() {\r\n    return {\r\n      id: this.id,\r\n      initialized: this.initialized,\r\n      currentState: this.currentState,\r\n      messages: this.messageStore ? this.messageStore.getMessages() : [],\r\n      milestone: this.messageStore ? this.messageStore.currentMilestone : 0,\r\n      journeyType: this.messageStore ? this.messageStore.journeyType : null,\r\n      hasConversation: this.hasConversation,\r\n      waitingForResponse: this.waitingForResponse,\r\n      generatedScenarios: this.generatedScenarios\r\n    };\r\n  }\r\n}\r\n\r\nexport default EnhancedChatWidget;","/**\n * Widget Factory\n * Creates different types of widgets based on configuration\n */\n\nimport { EnhancedChatWidget } from '../components/enhanced-chat-widget';\n\nexport class WidgetFactory {\n  static widgetTypes = {\n    'chat': EnhancedChatWidget,\n    'tradrlab-chat': EnhancedChatWidget\n  };\n  \n  /**\n   * Create a widget instance\n   * @param {string} type - Widget type\n   * @param {HTMLElement} targetElement - Target DOM element\n   * @param {ConfigManager} configManager - Configuration manager instance\n   * @returns {Object} Widget instance\n   */\n  static create(type, targetElement, configManager) {\n    // Get widget class, falling back to EnhancedChatWidget for custom types\n    const WidgetClass = this.widgetTypes[type] || this.widgetTypes['chat'];\n    \n    if (!WidgetClass) {\n      throw new Error(`WidgetFactory: No widget implementation available`);\n    }\n    \n    // For custom types, pass the type in config so widget can identify itself\n    if (!this.widgetTypes[type]) {\n      configManager.set('customWidgetType', type);\n    }\n    \n    return new WidgetClass(targetElement, configManager);\n  }\n  \n  /**\n   * Register a custom widget type\n   * @param {string} type - Widget type name\n   * @param {Class} WidgetClass - Widget class constructor\n   */\n  static registerType(type, WidgetClass) {\n    if (this.widgetTypes[type]) {\n      console.warn(`WidgetFactory: Widget type \"${type}\" already exists. Overwriting.`);\n    }\n    \n    this.widgetTypes[type] = WidgetClass;\n  }\n  \n  /**\n   * Get available widget types\n   * @returns {Array} List of widget type names\n   */\n  static getAvailableTypes() {\n    return Object.keys(this.widgetTypes);\n  }\n}","/**\n * Configuration Manager\n * Handles merging and validation of widget configuration\n */\n\nexport class ConfigManager {\n  constructor(globalConfig = {}, widgetConfig = {}) {\n    this.config = this.mergeConfigs(globalConfig, widgetConfig);\n    this.validateConfig();\n  }\n  \n  /**\n   * Merge global and widget-specific configurations\n   */\n  mergeConfigs(global, widget) {\n    // Use production URLs if not in development mode\n    const isDev = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n    \n    const defaults = {\n      // API Configuration - will be overridden by user config\n      apiBaseUrl: isDev ? 'https://localhost:44358' : 'https://localhost:44358', // Default to localhost for testing\n      signalRUrl: isDev ? 'https://localhost:44358/hubs/message' : 'https://localhost:44358/hubs/message', // Default to localhost for testing\n      locale: 'en-US',\n      debug: false,\n      \n      // Appearance\n      theme: 'light',\n      width: '400px',\n      height: '600px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      primaryColor: '#1976d2',\n      enableFontSizeControl: true,\n      \n      // Features\n      placeholder: 'Type your message...',\n      welcomeMessage: null,\n      allowImageUpload: true,\n      allowImagePaste: true,\n      allowReply: true,\n      allowFeedback: true,\n      showTables: true,\n      enableTableResize: true,\n      enableTableModal: true,\n      autoExpand: false,\n      \n      // Message Types\n      supportedMessageTypes: ['Text', 'Steps', 'Template', 'Scenario', 'Analysis', 'Explanation'],\n      enableTemplateAutoTrigger: false,\n      showEvaluationButtons: false,\n      \n      // Rate Limiting\n      showRateLimitWarnings: true,\n      rateLimitBehavior: 'warn', // 'queue' | 'reject' | 'warn'\n      rateLimits: {\n        maxDagRequests: 10,\n        maxChatRequests: 100\n      },\n      \n      // Integration\n      scenarioId: null,\n      userId: null,\n      sessionId: null,\n      \n      // Widget User Configuration\n      externalUserId: null, // Required: Third-party's user ID\n      userDisplayName: null, // Optional: Display name for the user\n      userMetadata: {}, // Optional: Additional user metadata\n      jwtToken: null, // Set automatically during initialization\n      tokenExpires: null, // Set automatically during initialization\n      \n      // Events (callbacks)\n      onMessageSent: null,\n      onMessageReceived: null,\n      onImageUploaded: null,\n      onFeedbackProvided: null,\n      onTableExpanded: null,\n      onRateLimitReached: null,\n      onWidgetReady: null,\n      onError: null\n    };\n    \n    return {\n      ...defaults,\n      ...global,\n      ...widget,\n      // Ensure rateLimits are properly merged\n      rateLimits: {\n        ...defaults.rateLimits,\n        ...(global.rateLimits || {}),\n        ...(widget.rateLimits || {})\n      }\n    };\n  }\n  \n  /**\n   * Validate configuration\n   */\n  validateConfig() {\n    // Required fields\n    if (!this.config.apikey) {\n      throw new Error('ConfigManager: API key is required');\n    }\n    \n    // Validate theme\n    const validThemes = ['light', 'dark', 'custom'];\n    if (!validThemes.includes(this.config.theme)) {\n      console.warn(`ConfigManager: Invalid theme \"${this.config.theme}\". Using \"light\".`);\n      this.config.theme = 'light';\n    }\n    \n    // Validate rate limit behavior\n    const validBehaviors = ['queue', 'reject', 'warn'];\n    if (!validBehaviors.includes(this.config.rateLimitBehavior)) {\n      console.warn(`ConfigManager: Invalid rateLimitBehavior \"${this.config.rateLimitBehavior}\". Using \"warn\".`);\n      this.config.rateLimitBehavior = 'warn';\n    }\n    \n    // Validate callbacks\n    const callbacks = [\n      'onMessageSent', 'onMessageReceived', 'onImageUploaded',\n      'onFeedbackProvided', 'onTableExpanded', 'onRateLimitReached',\n      'onWidgetReady', 'onError'\n    ];\n    \n    callbacks.forEach(callback => {\n      if (this.config[callback] && typeof this.config[callback] !== 'function') {\n        console.warn(`ConfigManager: ${callback} must be a function. Ignoring.`);\n        this.config[callback] = null;\n      }\n    });\n    \n    // Validate dimensions\n    if (this.config.width && !this.isValidDimension(this.config.width)) {\n      console.warn(`ConfigManager: Invalid width \"${this.config.width}\". Using default.`);\n      this.config.width = '400px';\n    }\n    \n    if (this.config.height && !this.isValidDimension(this.config.height)) {\n      console.warn(`ConfigManager: Invalid height \"${this.config.height}\". Using default.`);\n      this.config.height = '600px';\n    }\n  }\n  \n  /**\n   * Check if dimension value is valid\n   */\n  isValidDimension(value) {\n    return /^\\d+(px|%|em|rem|vh|vw)$/.test(value) || value === 'auto';\n  }\n  \n  /**\n   * Get configuration value\n   */\n  get(key) {\n    return this.config[key];\n  }\n  \n  /**\n   * Set configuration value\n   */\n  set(key, value) {\n    this.config[key] = value;\n  }\n  \n  /**\n   * Get all configuration\n   */\n  getAll() {\n    return { ...this.config };\n  }\n  \n  /**\n   * Check if feature is enabled\n   */\n  isFeatureEnabled(feature) {\n    const featureMap = {\n      images: this.config.allowImageUpload || this.config.allowImagePaste,\n      tables: this.config.showTables,\n      replies: this.config.allowReply,\n      feedback: this.config.allowFeedback,\n      fontControl: this.config.enableFontSizeControl,\n      templates: this.config.supportedMessageTypes.includes('Template'),\n      evaluation: this.config.showEvaluationButtons\n    };\n    \n    return featureMap[feature] || false;\n  }\n}","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./widget-base.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./widget-base.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * TradrLab Chat Widget\n * Main entry point for the embeddable chat widget\n */\n\nimport { WidgetFactory } from './core/widget-factory';\nimport { ConfigManager } from './core/config-manager';\nimport './styles/widget-base.css';\n\n// Debug logging\nconsole.log('🟢 TradrLab Widget: Loading v2.1.0 - DEBUG BUILD');\n\n// Create global TradrLabWidget object\nconst TradrLabWidget = {\n  version: '1.0.0',\n  _globalConfig: {},\n  _widgets: new Map(),\n  \n  /**\n   * Set global configuration for all widgets\n   * @param {Object} config - Global configuration object\n   */\n  globals: function(config) {\n    this._globalConfig = {\n      ...this._globalConfig,\n      ...config\n    };\n    \n    // Validate required global config\n    if (!this._globalConfig.apikey) {\n      console.warn('TradrLabWidget: API key not set. Call TradrLabWidget.globals({ apikey: \"your-key\" })');\n    }\n    \n    return this;\n  },\n  \n  /**\n   * Create a new widget instance\n   * @param {string} type - Widget type (currently only 'chat' is supported)\n   * @param {HTMLElement} targetElement - DOM element to render widget into\n   * @param {Object} options - Widget-specific configuration\n   * @returns {Object} Widget instance\n   */\n  CreateWidget: function(type, targetElement, options = {}) {\n    if (!targetElement) {\n      throw new Error('TradrLabWidget: Target element is required');\n    }\n    \n    if (!this._globalConfig.apikey) {\n      throw new Error('TradrLabWidget: API key is required. Call TradrLabWidget.globals() first.');\n    }\n    \n    // Create config manager instance\n    const configManager = new ConfigManager(this._globalConfig, options);\n    \n    // Create widget using factory\n    const widget = WidgetFactory.create(type, targetElement, configManager);\n    \n    // Store widget reference\n    const widgetId = `widget-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    widget.id = widgetId;\n    this._widgets.set(widgetId, widget);\n    \n    // Initialize widget\n    widget.init();\n    \n    return widget;\n  },\n  \n  /**\n   * Get widget by ID\n   * @param {string} widgetId - Widget ID\n   * @returns {Object|null} Widget instance or null\n   */\n  getWidget: function(widgetId) {\n    return this._widgets.get(widgetId) || null;\n  },\n  \n  /**\n   * Destroy widget by ID\n   * @param {string} widgetId - Widget ID\n   */\n  destroyWidget: function(widgetId) {\n    const widget = this._widgets.get(widgetId);\n    if (widget) {\n      widget.destroy();\n      this._widgets.delete(widgetId);\n    }\n  },\n  \n  /**\n   * Destroy all widgets\n   */\n  destroyAll: function() {\n    this._widgets.forEach(widget => widget.destroy());\n    this._widgets.clear();\n  }\n};\n\n// Expose to global scope\nif (typeof window !== 'undefined') {\n  window.TradrLabWidget = TradrLabWidget;\n}\n\nexport default TradrLabWidget;"],"names":["root","factory","exports","module","define","amd","this","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","cssWithMappingToString","toString","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","___CSS_LOADER_EXPORT___","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","nc","EnhancedMessageStore","constructor","messages","sessions","Map","scenarios","currentMilestone","journeyType","listeners","eventListeners","activeScenarioId","activeSessionId","currentSessionId","on","event","callback","has","set","off","indexOf","emit","args","forEach","error","startSession","sessionId","templateName","metadata","session","startTime","Date","now","endTime","status","milestones","template","model","evaluation","analysis","notifyListeners","endSession","getSession","getActiveSession","updateMilestone","milestone","milestoneValue","toLowerCase","getMilestoneStatus","current","analyzeMessageForActions","message","actions","showGenerateButton","showRedrawButton","triggerEvaluation","showApplyFix","enableAnalysis","messageType","includes","userDagRequestId","originalEndpoint","fixedDag","fixedScenario","getLastRelevantMessage","findLast","msg","getCurrentAvailableActions","lastRelevantMessage","showBacktestButton","isReadyForGeneration","storeDagMetadata","dagMetadata","scenarioId","dagRequestId","scenario","dagSummaryMessage","crypto","randomUUID","replace","c","r","Math","random","type","formatDagSummary","timestamp","addMessage","nodeCount","indicators","conditions","triggers","summary","t","addScenario","updateScenarioStatus","updatedAt","getScenario","fullMessage","toISOString","isAiResponse","updateSessionId","detectMilestoneTransition","setTimeout","updateMessage","messageId","updates","findIndex","m","getConversationSummary","filter","slice","setJourneyType","resetJourney","removeMessage","removed","getMessages","getMessage","find","clear","subscribe","listener","action","activeSession","getMessagesByType","getLastMessage","getScenarioMessages","targetScenarioId","getSessionMessages","targetSessionId","getCurrentSessionId","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","_retryDelays","nextRetryDelayInMilliseconds","retryContext","previousRetryCount","HeaderNames","Authorization","Cookie","HttpResponse","statusCode","statusText","HttpClient","url","send","method","post","getCookieString","AccessTokenHttpClient","innerClient","accessTokenFactory","super","_innerClient","_accessTokenFactory","request","allowRetry","_accessToken","_setAuthorizationHeader","response","headers","HttpError","errorMessage","trueProto","__proto__","TimeoutError","AbortError","UnsupportedTransportError","transport","errorType","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","LogLevel","NullLogger","log","_logLevel","_message","instance","Arg","isRequired","val","name","isNotEmpty","match","isIn","values","Platform","isBrowser","isNode","isWebWorker","self","isReactNative","process","release","getDataDetail","includeContent","detail","isArrayBuffer","byteLength","view","Uint8Array","str","num","substr","formatArrayBuffer","ArrayBuffer","async","sendMessage","logger","transportName","httpClient","value","getUserAgentHeader","Trace","logMessageContent","responseType","timeout","withCredentials","SubjectSubscription","subject","observer","_subject","_observer","dispose","observers","cancelCallback","catch","_","ConsoleLogger","minimumLogLevel","_minLevel","out","console","logLevel","Critical","Warning","warn","Information","info","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","platform","versions","node","getErrorString","stack","FetchHttpClient","_logger","fetch","requireFunc","_jar","CookieJar","_fetchType","bind","getGlobalThis","AbortController","_abortControllerType","abortSignal","aborted","abortController","onabort","abort","timeoutId","msTimeout","body","cache","credentials","mode","redirect","signal","clearTimeout","ok","deserializeContent","payload","cookies","getCookies","arrayBuffer","text","XhrHttpClient","Promise","reject","resolve","xhr","XMLHttpRequest","open","setRequestHeader","keys","header","onload","responseText","onerror","ontimeout","DefaultHttpClient","_httpClient","HttpTransportType","TransferFormat","_isAborted","LongPollingTransport","pollAborted","_pollAbort","_options","_running","onreceive","onclose","connect","transferFormat","_url","Binary","pollOptions","pollUrl","_closeError","_receiving","_poll","_raiseOnClose","stop","deleteOptions","delete","err","logMessage","ServerSentEventsTransport","accessToken","eventSource","opened","Text","EventSource","onmessage","_close","onopen","_eventSource","close","WebSocketTransport","webSocketConstructor","_logMessageContent","_webSocketConstructor","_headers","token","webSocket","binaryType","_event","_webSocket","ErrorEvent","readyState","OPEN","_isCloseEvent","wasClean","code","reason","HttpConnection","_stopPromiseResolver","features","_negotiateVersion","baseUrl","_resolveUrl","webSocketModule","eventSourceModule","WebSocket","_connectionState","_connectionStarted","start","Debug","_startInternalPromise","_startInternal","_stopPromise","_sendQueue","TransportSendQueue","_stopInternal","_stopError","_stopConnection","skipNegotiation","WebSockets","_constructTransport","_startTransport","negotiateResponse","redirects","_getNegotiationResponse","ProtocolVersion","_createTransport","inherentKeepAlive","negotiateUrl","_resolveNegotiateUrl","parse","negotiateVersion","connectionToken","connectionId","useStatefulReconnect","_useStatefulReconnect","_createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","_isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","_resolveTransportOrError","ex","ServerSentEvents","LongPolling","reconnect","callStop","disconnected","resend","actualTransport","transportMatches","transferFormats","s","lastIndexOf","aTag","href","URL","pathname","endsWith","searchParams","URLSearchParams","append","search","_transport","_buffer","_executing","_sendBufferedData","PromiseSource","_transportResult","_sendLoopPromise","_sendLoop","_bufferData","promise","transportResult","_concatBuffers","arrayBuffers","totalLength","b","reduce","offset","buffer","_resolver","_rejecter","TextMessageFormat","write","output","RecordSeparator","input","pop","RecordSeparatorCode","String","fromCharCode","HandshakeProtocol","writeHandshakeRequest","handshakeRequest","parseHandshakeResponse","messageData","remainingData","binaryData","separatorIndex","responseLength","Array","textData","substring","MessageType","Subject","next","complete","MessageBuffer","protocol","connection","bufferSize","_bufferSize","_messages","_totalMessageCount","_waitForSequenceMessage","_nextReceivingSequenceId","_latestReceivedSequenceId","_bufferedByteCount","_reconnectInProgress","_protocol","_connection","_send","serializedMessage","writeMessage","backpressurePromise","_isInvocationMessage","backpressurePromiseResolver","backpressurePromiseRejector","BufferedItem","_disconnected","_ack","ackMessage","newestAckedMessage","_id","sequenceId","_shouldProcessMessage","Sequence","currentId","_ackTimer","_resetSequence","_resend","_dispose","_rejector","Invocation","StreamItem","Completion","StreamInvocation","CancelInvocation","Close","Ping","Ack","_ackTimerHandle","resolver","rejector","HubConnectionState","HubConnection","create","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","statefulReconnectBufferSize","_nextKeepAlive","_freezeEventListener","_statefulReconnectBufferSize","_reconnectPolicy","_handshakeProtocol","_processIncomingData","_connectionClosed","_callbacks","_methods","_closedCallbacks","_reconnectingCallbacks","_reconnectedCallbacks","_invocationId","_receivedHandshakeResponse","Disconnected","_cachedPingMessage","state","Reconnecting","_startPromise","_startWithStateTransitions","Connecting","addEventListener","Connected","_stopDuringStartError","handshakePromise","_handshakeResolver","_handshakeRejecter","_sendMessage","_cleanupTimeout","_resetTimeoutPeriod","_resetKeepAliveInterval","_messageBuffer","_cleanupPingTimer","startPromise","Disconnecting","_reconnectDelayHandle","_completeClose","_sendCloseMessage","_sendWithProtocol","_createCloseMessage","stream","methodName","streams","streamIds","_replaceStreamingParams","invocationDescriptor","_createStreamInvocation","promiseQueue","cancelInvocation","_createCancelInvocation","invocationId","then","invocationEvent","_launchStreams","sendPromise","_createInvocation","invoke","newMethod","handlers","removeIdx","onreconnecting","onreconnected","_processHandshakeResponse","parseMessages","_invokeClientMethod","allowReconnect","responseMessage","getTime","_timeoutHandle","serverTimeout","_pingServerHandle","nextPing","invocationMessage","methods","_createCompletionMessage","methodsCopy","expectsResponse","res","exception","completionMessage","prevRes","arguments","_cancelCallbacksWithError","_reconnect","removeEventListener","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","_getNextRetryDelay","elapsedMilliseconds","retryReason","callbacks","nonblocking","streamId","_createStreamItemMessage","argument","_isObservable","arg","JsonHubProtocol","hubMessages","parsedMessage","_isStreamItemMessage","_isCompletionMessage","_isAckMessage","_isSequenceMessage","_assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","None","HubConnectionBuilder","configureLogging","logging","mapping","parseLogLevel","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","isArray","withServerTimeout","milliseconds","_serverTimeoutInMilliseconds","withKeepAliveInterval","_keepAliveIntervalInMilliseconds","withStatefulReconnect","build","EnhancedSignalRClient","configManager","messageStore","apiClient","thinkingManager","config","connected","reconnectAttempts","maxReconnectAttempts","socketId","waitingForResponse","hubUrl","jwtToken","signalR","min","pow","setupEventHandlers","registerForMessages","onSignalRMessage","handleUnifiedMessage","eventName","aiResponse","AiResponse","unifiedMessage","OriginalEndpoint","ScenarioId","SessionId","DagRequestId","relatedUserMessageId","RelatedUserMessageId","requestId","RequestId","StatusCode","handleScenarioQueryMessage","attempt","activeIndicators","from","startsWith","stopThinking","handleChatMessage","handleTemplateMessage","handleModelMessage","handleAnalysisMessage","handleSpecialMessage","handleEvaluationMessage","chatMessage","aiMessageId","parentMessageId","templateMessage","templateContent","dagData","modelMessage","autoExecuteAfterDagGeneration","analysisData","tableMarkdown","tableJson","parsed","textContent","innerParsed","analysisMessage","specialMessage","evaluationMessage","hasResults","totalRecords","aiData","handleLegacyMessage","widgetId","setWaitingForResponse","waiting","getConnectionId","disconnect","getState","isConnected","API_FLAGS","isWidget","widgetVersion","returnFormat","includeLinks","compressImages","paginateResults","pageSize","skipVisualization","includeTableData","simplifyDAG","trackSessions","sendAnalytics","MILESTONES","icon","description","WIDGET_STATES","INITIALIZING","LANDING","CHATTING","GENERATING","EVALUATING","ANALYZING","ERROR","DISCONNECTED","ApiClient","apiKey","getJwtToken","ExternalUserId","DisplayName","Metadata","createOrGetUser","externalUserId","displayName","Message","Image","image","ParentMessageId","prompt","gpt_version","postId","generatePostId","userId","addScenarioContext","addMarketInfo","frontendSocketId","assign","scenarioRequest","buildScenarioRequest","scenarioExecuteRequest","buildScenarioExecuteRequest","scenarioName","symbol","timeframe","minutes","parseTimeframeToMinutes","inputFreq","outputFreq","weekDays","months","fromTime","toTime","timeZone","refreshDatetime","scenarioData","executeRequest","intervalInMinutes","dataIntervalInMinutes","exchange","Exchange","timezone","marketInfo","interval_minutes","marketinfo","timeframeUpper","toUpperCase","parseInt","isNaN","floor","padStart","sendFeedback","feedback","MessageId","Feedback","Comments","comments","createScenario","Name","uploadImage","imageData","base64Data","File","fileToBase64","generateScenario","ConversationContext","conversationContext","SocketId","PostId","executeWidget","Nodes","Edges","ScenarioData","Symbol","IntervalInMinutes","loadBlocksData","loadCurrencies","loadCurrenciesOld","contentType","json","file","reader","FileReader","readAsDataURL","checkRateLimits","dagRequests","used","limit","maxDagRequests","chatRequests","maxChatRequests","fullUrl","put","ThinkingManager","progressiveMessages","startThinking","operationType","customMessage","onTimeout","timeoutMs","indicator","timers","timedOut","createIndicatorElement","scheduleProgressiveUpdates","setupTimeoutHandler","startProgressBar","timer","progressTimer","opacity","transform","initialMessage","className","innerHTML","chatContainer","getElementById","scrollTop","scrollHeight","entries","delay","timerTimeout","showTimer","addRetryButton","timeoutHandler","retryBtn","messageElement","newMessage","timerElement","display","updateTimer","elapsed","timerText","progressFill","transition","width","animation","getContextualMessage","stage","stopAll","getActiveCount","size","isActive","WidgetAiFlowParser","nodeWidth","nodeHeight","flowDirection","parseAiDag","dagBlocks","blockDefinitions","functionsMap","createFunctionsMap","nodes","edges","aiBlock","createNode","blockEdges","buildDataConnectionEdges","def","function_name","fnDef","function","formattedInputs","extractInputs","formattedOutputs","extractOutputs","formattedOptions","extractOptions","nodeData","mainType","group","grouping","inputs","outputs","blockId","bid_","candleOptions","label","priceOptions","extractValues","version_","BlockID","position","x","y","targetPosition","sourcePosition","properties","inputName","outputName","parameters","paramName","param","default","fieldType","optionValues","enum","field","enumOutputs","isValid","allBlocks","dataProp","dataValue","sourceLinkValues","sourceId","sourceBlock","targetNode","sourceOutputIndex","targetInputIndex","f","edge","source","sourceHandle","targetHandle","transformToScenarioDto","parsedData","Id","UserId","IsFromAiGenerator","Viewport","X","Y","Zoom","CrossFilters","Version","IsActive","ManuallyUpdated","IsFromEditor","GeneratingAiFlow","DagProcessor","aiFlowParser","processModelMessage","parseDagData","functions_list","extractDagMetadata","modelGeneratedAt","functionsList","others","blocksDescription","blocks_description","subDags","sub_dags","metaDag","metadag","Metadag","category","categorizeNode","getNodeDescription","funcName","display_name","evaluationRequestId","handleTimeout","shouldRetry","evaluationParams","getEvaluationParameters","blocksData","scenarioDto","storeScenarioExecutionData","handleEvaluationComplete","results","getStoredDagData","lookbackDays","getConfigValue","toDate","fromDate","setDate","getDate","initialCapital","riskPercentage","commission","defaultValue","getSocketId","evaluationData","occurrences","executionMessage","evaluationResults","evaluatedAt","handleEvaluationError","errorData","ActionManager","pendingRequests","getAvailableActions","currentActions","handleGenerateScenario","primary","visible","disabled","handleRedrawScenario","handleRunBacktest","handleAskQuestion","handleDagTimeout","reqId","trim","currentScenario","getCurrentScenario","getExternalUserId","sendAnalysisQuestion","question","generateId","areActionsDisabled","getAction","actionId","executeAction","ChatContainer","targetElement","signalRClient","messagesContainer","inputContainer","inputField","sendButton","unsubscribe","render","setupEventListeners","handleStoreUpdate","renderMessages","shiftKey","preventDefault","autoResizeInput","fileInput","click","handleImageUpload","handlePaste","querySelectorAll","btn","currentTarget","dataset","adjustFontSize","button","closest","handleMessageAction","addMessageToUI","updateMessageInUI","removeMessageFromUI","clearMessages","originalText","handleRetryExecution","handleGenericRetry","showActionError","widget","widgetInstance","retryExecution","showAnalysisInput","scrollToBottom","shouldScroll","messageEl","renderMessageContent","escapeHtml","userMessage","loadingId","files","onImageUploaded","items","clipboardData","getAsFile","height","currentSize","getComputedStyle","fontSize","newSize","div","destroy","LandingPage","container","onSelection","onTemplateRequest","onWizardRequest","showBranding","isVisible","templates","init","attachEventListeners","renderHeader","renderCards","renderFooter","renderCard","title","subtitle","color","card","handleCardClick","classList","add","helpLink","handleHelpRequest","handleKeyNavigation","handleHelpSelection","handleTemplatesSelection","handleScratchSelection","handleWizardSelection","hide","cards","currentFocus","currentIndex","focus","show","firstCard","updateTemplates","templatesCard","isShown","TemplateModal","onSelect","onClose","showCategories","filteredTemplates","selectedCategory","searchQuery","isLoading","modal","backdrop","createModal","loadTemplates","renderFilters","renderTemplateGrid","showSearch","renderCategoryFilters","extractCategories","getTemplateCountByCategory","renderEmptyState","renderTemplateCard","difficulty","tags","tag","popularity","successRate","searchInput","handleSearch","handleCategoryFilter","matches","templateId","handleTemplateSelect","clearFilters","stopPropagation","query","filterTemplates","updateTemplateGrid","toggle","matchesSearch","p","countElement","categories","Set","Boolean","sort","getDefaultTemplates","firstTemplate","ScenarioWizard","onComplete","showProgress","currentStep","answers","steps","getWizardSteps","inputType","placeholder","validation","required","minLength","optional","renderProgress","renderStep","renderNavigation","step","renderStepInput","renderChoiceInput","renderMultiChoiceInput","renderTextInput","option","selectedValues","isFirstStep","isLastStep","canProceed","canProceedFromCurrentStep","nextStep","prevStep","handleChoiceSelection","checkbox","handleMultiChoiceToggle","checked","handleInputChange","updateNavigation","v","updateModal","generatePrompt","parts","pattern","direction","patternMap","breakout","reversal","momentum","consolidation","gap","custom","directionMap","bullish","bearish","both","symbols","indicatorNames","volume","rsi","macd","bollinger","sma","ema","stochastic","atr","ind","answer","firstInput","footer","reset","BaseMessageRenderer","toLocaleTimeString","renderContent","renderActions","UserMessageRenderer","formatContent","TextMessageRenderer","StepsMessageRenderer","parseSteps","renderSteps","lines","line","stepMatch","number","TemplateMessageRenderer","ModelMessageRenderer","hasError","renderError","renderSuccess","AnalysisMessageRenderer","hasTable","renderTable","renderJsonTable","renderMarkdownTable","tableData","maxRows","displayData","hasMoreRows","row","formatCellValue","toLocaleString","maximumFractionDigits","ScenarioMessageRenderer","ExplanationMessageRenderer","ErrorMessageRenderer","ExecutionErrorMessageRenderer","SystemMessageRenderer","MessageRenderer","MilestoneTracker","onMilestoneClick","showLabels","compact","interactive","renderProgressBar","renderMilestones","renderJourneyIndicator","calculateProgress","getProgressText","isClickable","getMilestoneClasses","classes","round","completed","total","milestoneId","handleMilestoneClick","newMilestone","max","animateMilestoneChange","autoScroll","scrollIntoView","behavior","block","inline","getCurrentMilestone","progress","setMilestones","customMilestones","onMilestoneChange","EnhancedChatWidget","initialized","currentState","dagProcessor","actionManager","processingTemplate","landingPage","templateModal","scenarioWizard","milestoneTracker","showLandingPage","hasConversation","generatedScenarios","stylesInjected","setupTargetElement","initializeServices","initializeUser","createComponents","connectSignalR","onReady","showInitialView","handleError","setProperty","injectStyles","wireIntelligenceEvents","handleIntelligentMessage","handleMilestoneUpdate","handleDagGenerated","handleSignalRMessage","onSignalRConnected","onSignalRDisconnected","handleExecutionStarting","handleExecutionCompleted","handleExecutionError","updateMainUI","updateActionButtons","handleMessageCallback","onMilestone","setWaitingState","isExecuting","updateChatDisplay","showThinking","executionResult","resultMessage","formatExecutionResult","storedData","Success","ErrorMessage","TotalRecords","dateRange","FirstDate","LastDate","Columns","actionsContainer","handleActionError","showLandingView","showChatView","attachChatEventListeners","READY","RECONNECTING","tokenResponse","tokenExpires","expiresAt","apiBaseUrl","createMilestoneTracker","createLandingPage","createChatContainer","createModals","selection","handleLandingSelection","showTemplateModal","showScenarioWizard","renderChatInterface","renderGenerateButton","renderMessage","backBtn","generateBtn","messageInput","handleTemplateSelection","handleWizardComplete","showChatInterface","sendMessageToApi","sendTemplateToApi","wizardAnswers","inputContent","handleChatTimeout","handleTemplateTimeout","conversationSummary","handleMessageStoreEvent","handleTemplateReady","updateChatControls","controls","generateContainer","thinkingDiv","shouldShowGenerate","showLandingPageView","landingContainer","onError","WidgetFactory","static","WidgetClass","widgetTypes","registerType","getAvailableTypes","ConfigManager","globalConfig","widgetConfig","mergeConfigs","validateConfig","global","location","hostname","defaults","signalRUrl","locale","theme","fontFamily","primaryColor","enableFontSizeControl","welcomeMessage","allowImageUpload","allowImagePaste","allowReply","allowFeedback","showTables","enableTableResize","enableTableModal","autoExpand","supportedMessageTypes","enableTemplateAutoTrigger","showEvaluationButtons","showRateLimitWarnings","rateLimitBehavior","rateLimits","userDisplayName","userMetadata","onMessageSent","onMessageReceived","onFeedbackProvided","onTableExpanded","onRateLimitReached","onWidgetReady","apikey","isValidDimension","test","getAll","isFeatureEnabled","feature","images","tables","replies","fontControl","locals","TradrLabWidget","_globalConfig","_widgets","globals","CreateWidget","getWidget","destroyWidget","destroyAll"],"sourceRoot":""}